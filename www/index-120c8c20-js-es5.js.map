{"version":3,"sources":["node_modules/@ionic/core/dist/esm/index-120c8c20.js"],"names":[],"mappings":"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","sourcesContent":["const KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\r\nconst KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\r\nconst KEYBOARD_THRESHOLD = 150;\r\nlet previousVisualViewport = {};\r\nlet currentVisualViewport = {};\r\nlet previousLayoutViewport = {};\r\nlet currentLayoutViewport = {};\r\nlet keyboardOpen = false;\r\n/**\r\n * This is only used for tests\r\n */\r\nconst resetKeyboardAssist = () => {\r\n    previousVisualViewport = {};\r\n    currentVisualViewport = {};\r\n    previousLayoutViewport = {};\r\n    currentLayoutViewport = {};\r\n    keyboardOpen = false;\r\n};\r\nconst startKeyboardAssist = (win) => {\r\n    startNativeListeners(win);\r\n    if (!win.visualViewport) {\r\n        return;\r\n    }\r\n    currentVisualViewport = copyVisualViewport(win.visualViewport);\r\n    currentLayoutViewport = copyLayoutViewport(win);\r\n    win.visualViewport.onresize = () => {\r\n        trackViewportChanges(win);\r\n        if (keyboardDidOpen() || keyboardDidResize(win)) {\r\n            setKeyboardOpen(win);\r\n        }\r\n        else if (keyboardDidClose(win)) {\r\n            setKeyboardClose(win);\r\n        }\r\n    };\r\n};\r\n/**\r\n * Listen for events fired by native keyboard plugin\r\n * in Capacitor/Cordova so devs only need to listen\r\n * in one place.\r\n */\r\nconst startNativeListeners = (win) => {\r\n    win.addEventListener('keyboardDidShow', ev => setKeyboardOpen(win, ev));\r\n    win.addEventListener('keyboardDidHide', () => setKeyboardClose(win));\r\n};\r\nconst setKeyboardOpen = (win, ev) => {\r\n    fireKeyboardOpenEvent(win, ev);\r\n    keyboardOpen = true;\r\n};\r\nconst setKeyboardClose = (win) => {\r\n    fireKeyboardCloseEvent(win);\r\n    keyboardOpen = false;\r\n};\r\n/**\r\n * Returns `true` if the `keyboardOpen` flag is not\r\n * set, the previous visual viewport width equal the current\r\n * visual viewport width, and if the scaled difference\r\n * of the previous visual viewport height minus the current\r\n * visual viewport height is greater than KEYBOARD_THRESHOLD\r\n *\r\n * We need to be able to accomodate users who have zooming\r\n * enabled in their browser (or have zoomed in manually) which\r\n * is why we take into account the current visual viewport's\r\n * scale value.\r\n */\r\nconst keyboardDidOpen = () => {\r\n    const scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\r\n    return (!keyboardOpen &&\r\n        previousVisualViewport.width === currentVisualViewport.width &&\r\n        scaledHeightDifference > KEYBOARD_THRESHOLD &&\r\n        !layoutViewportDidChange());\r\n};\r\n/**\r\n * Returns `true` if the keyboard is open,\r\n * but the keyboard did not close\r\n */\r\nconst keyboardDidResize = (win) => {\r\n    return keyboardOpen && !keyboardDidClose(win);\r\n};\r\n/**\r\n * Determine if the keyboard was closed\r\n * Returns `true` if the `keyboardOpen` flag is set and\r\n * the current visual viewport height equals the\r\n * layout viewport height.\r\n */\r\nconst keyboardDidClose = (win) => {\r\n    return keyboardOpen && currentVisualViewport.height === win.innerHeight;\r\n};\r\n/**\r\n * Determine if the layout viewport has\r\n * changed since the last visual viewport change.\r\n * It is rare that a layout viewport change is not\r\n * associated with a visual viewport change so we\r\n * want to make sure we don't get any false positives.\r\n */\r\nconst layoutViewportDidChange = () => {\r\n    return (currentLayoutViewport.width !== previousLayoutViewport.width ||\r\n        currentLayoutViewport.height !== previousLayoutViewport.height);\r\n};\r\n/**\r\n * Dispatch a keyboard open event\r\n */\r\nconst fireKeyboardOpenEvent = (win, nativeEv) => {\r\n    const keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\r\n    const ev = new CustomEvent(KEYBOARD_DID_OPEN, {\r\n        detail: { keyboardHeight }\r\n    });\r\n    win.dispatchEvent(ev);\r\n};\r\n/**\r\n * Dispatch a keyboard close event\r\n */\r\nconst fireKeyboardCloseEvent = (win) => {\r\n    const ev = new CustomEvent(KEYBOARD_DID_CLOSE);\r\n    win.dispatchEvent(ev);\r\n};\r\n/**\r\n * Given a window object, create a copy of\r\n * the current visual and layout viewport states\r\n * while also preserving the previous visual and\r\n * layout viewport states\r\n */\r\nconst trackViewportChanges = (win) => {\r\n    previousVisualViewport = Object.assign({}, currentVisualViewport);\r\n    currentVisualViewport = copyVisualViewport(win.visualViewport);\r\n    previousLayoutViewport = Object.assign({}, currentLayoutViewport);\r\n    currentLayoutViewport = copyLayoutViewport(win);\r\n};\r\n/**\r\n * Creates a deep copy of the visual viewport\r\n * at a given state\r\n */\r\nconst copyVisualViewport = (visualViewport) => {\r\n    return {\r\n        width: Math.round(visualViewport.width),\r\n        height: Math.round(visualViewport.height),\r\n        offsetTop: visualViewport.offsetTop,\r\n        offsetLeft: visualViewport.offsetLeft,\r\n        pageTop: visualViewport.pageTop,\r\n        pageLeft: visualViewport.pageLeft,\r\n        scale: visualViewport.scale\r\n    };\r\n};\r\n/**\r\n * Creates a deep copy of the layout viewport\r\n * at a given state\r\n */\r\nconst copyLayoutViewport = (win) => {\r\n    return {\r\n        width: win.innerWidth,\r\n        height: win.innerHeight\r\n    };\r\n};\r\n\r\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyLayoutViewport, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };\r\n"],"sourceRoot":"webpack:///","file":"index-120c8c20-js-es5.js"}