{"version":3,"sources":["node_modules/@ionic/core/dist/esm/swiper.bundle-f564f87c.js"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * SSR Window 1.0.1\r\n * Better handling for window object in SSR environment\r\n * https://github.com/nolimits4web/ssr-window\r\n *\r\n * Copyright 2018, Vladimir Kharlampidi\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: July 18, 2018\r\n */\r\nvar doc = (typeof document === 'undefined') ? {\r\n  body: {},\r\n  addEventListener: function addEventListener() {},\r\n  removeEventListener: function removeEventListener() {},\r\n  activeElement: {\r\n    blur: function blur() {},\r\n    nodeName: '',\r\n  },\r\n  querySelector: function querySelector() {\r\n    return null;\r\n  },\r\n  querySelectorAll: function querySelectorAll() {\r\n    return [];\r\n  },\r\n  getElementById: function getElementById() {\r\n    return null;\r\n  },\r\n  createEvent: function createEvent() {\r\n    return {\r\n      initEvent: function initEvent() {},\r\n    };\r\n  },\r\n  createElement: function createElement() {\r\n    return {\r\n      children: [],\r\n      childNodes: [],\r\n      style: {},\r\n      setAttribute: function setAttribute() {},\r\n      getElementsByTagName: function getElementsByTagName() {\r\n        return [];\r\n      },\r\n    };\r\n  },\r\n  location: { hash: '' },\r\n} : document; // eslint-disable-line\r\n\r\nvar win = (typeof window === 'undefined') ? {\r\n  document: doc,\r\n  navigator: {\r\n    userAgent: '',\r\n  },\r\n  location: {},\r\n  history: {},\r\n  CustomEvent: function CustomEvent() {\r\n    return this;\r\n  },\r\n  addEventListener: function addEventListener() {},\r\n  removeEventListener: function removeEventListener() {},\r\n  getComputedStyle: function getComputedStyle() {\r\n    return {\r\n      getPropertyValue: function getPropertyValue() {\r\n        return '';\r\n      },\r\n    };\r\n  },\r\n  Image: function Image() {},\r\n  Date: function Date() {},\r\n  screen: {},\r\n  setTimeout: function setTimeout() {},\r\n  clearTimeout: function clearTimeout() {},\r\n} : window; // eslint-disable-line\r\n\r\n/**\r\n * Dom7 2.1.3\r\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n * http://framework7.io/docs/dom.html\r\n *\r\n * Copyright 2019, Vladimir Kharlampidi\r\n * The iDangero.us\r\n * http://www.idangero.us/\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: February 11, 2019\r\n */\r\n\r\nclass Dom7 {\r\n  constructor(arr) {\r\n    const self = this;\r\n    // Create array-like object\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n      self[i] = arr[i];\r\n    }\r\n    self.length = arr.length;\r\n    // Return collection with methods\r\n    return this;\r\n  }\r\n}\r\n\r\nfunction $(selector, context) {\r\n  const arr = [];\r\n  let i = 0;\r\n  if (selector && !context) {\r\n    if (selector instanceof Dom7) {\r\n      return selector;\r\n    }\r\n  }\r\n  if (selector) {\r\n      // String\r\n    if (typeof selector === 'string') {\r\n      let els;\r\n      let tempParent;\r\n      const html = selector.trim();\r\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n        let toCreate = 'div';\r\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\r\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\r\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\r\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\r\n        if (html.indexOf('<option') === 0) toCreate = 'select';\r\n        tempParent = doc.createElement(toCreate);\r\n        tempParent.innerHTML = html;\r\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\r\n          arr.push(tempParent.childNodes[i]);\r\n        }\r\n      } else {\r\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\r\n          // Pure ID selector\r\n          els = [doc.getElementById(selector.trim().split('#')[1])];\r\n        } else {\r\n          // Other selectors\r\n          els = (context || doc).querySelectorAll(selector.trim());\r\n        }\r\n        for (i = 0; i < els.length; i += 1) {\r\n          if (els[i]) arr.push(els[i]);\r\n        }\r\n      }\r\n    } else if (selector.nodeType || selector === win || selector === doc) {\r\n      // Node/element\r\n      arr.push(selector);\r\n    } else if (selector.length > 0 && selector[0].nodeType) {\r\n      // Array of elements or instance of Dom\r\n      for (i = 0; i < selector.length; i += 1) {\r\n        arr.push(selector[i]);\r\n      }\r\n    }\r\n  }\r\n  return new Dom7(arr);\r\n}\r\n\r\n$.fn = Dom7.prototype;\r\n$.Class = Dom7;\r\n$.Dom7 = Dom7;\r\n\r\nfunction unique(arr) {\r\n  const uniqueArray = [];\r\n  for (let i = 0; i < arr.length; i += 1) {\r\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\r\n  }\r\n  return uniqueArray;\r\n}\r\n\r\n// Classes and attributes\r\nfunction addClass(className) {\r\n  if (typeof className === 'undefined') {\r\n    return this;\r\n  }\r\n  const classes = className.split(' ');\r\n  for (let i = 0; i < classes.length; i += 1) {\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction removeClass(className) {\r\n  const classes = className.split(' ');\r\n  for (let i = 0; i < classes.length; i += 1) {\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction hasClass(className) {\r\n  if (!this[0]) return false;\r\n  return this[0].classList.contains(className);\r\n}\r\nfunction toggleClass(className) {\r\n  const classes = className.split(' ');\r\n  for (let i = 0; i < classes.length; i += 1) {\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction attr(attrs, value) {\r\n  if (arguments.length === 1 && typeof attrs === 'string') {\r\n    // Get attr\r\n    if (this[0]) return this[0].getAttribute(attrs);\r\n    return undefined;\r\n  }\r\n\r\n  // Set attrs\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    if (arguments.length === 2) {\r\n      // String\r\n      this[i].setAttribute(attrs, value);\r\n    } else {\r\n      // Object\r\n      // eslint-disable-next-line\r\n      for (const attrName in attrs) {\r\n        this[i][attrName] = attrs[attrName];\r\n        this[i].setAttribute(attrName, attrs[attrName]);\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction removeAttr(attr) {\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    this[i].removeAttribute(attr);\r\n  }\r\n  return this;\r\n}\r\nfunction data(key, value) {\r\n  let el;\r\n  if (typeof value === 'undefined') {\r\n    el = this[0];\r\n    // Get value\r\n    if (el) {\r\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\r\n        return el.dom7ElementDataStorage[key];\r\n      }\r\n\r\n      const dataKey = el.getAttribute(`data-${key}`);\r\n      if (dataKey) {\r\n        return dataKey;\r\n      }\r\n      return undefined;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // Set value\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    el = this[i];\r\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\r\n    el.dom7ElementDataStorage[key] = value;\r\n  }\r\n  return this;\r\n}\r\n// Transforms\r\n// eslint-disable-next-line\r\nfunction transform(transform) {\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const elStyle = this[i].style;\r\n    elStyle.webkitTransform = transform;\r\n    elStyle.transform = transform;\r\n  }\r\n  return this;\r\n}\r\nfunction transition(duration) {\r\n  if (typeof duration !== 'string') {\r\n    duration = `${duration}ms`; // eslint-disable-line\r\n  }\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const elStyle = this[i].style;\r\n    elStyle.webkitTransitionDuration = duration;\r\n    elStyle.transitionDuration = duration;\r\n  }\r\n  return this;\r\n}\r\n// Events\r\nfunction on(...args) {\r\n  let [eventType, targetSelector, listener, capture] = args;\r\n  if (typeof args[1] === 'function') {\r\n    [eventType, listener, capture] = args;\r\n    targetSelector = undefined;\r\n  }\r\n  if (!capture) capture = false;\r\n\r\n  function handleLiveEvent(e) {\r\n    const target = e.target;\r\n    if (!target) return;\r\n    const eventData = e.target.dom7EventData || [];\r\n    if (eventData.indexOf(e) < 0) {\r\n      eventData.unshift(e);\r\n    }\r\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\r\n    else {\r\n      const parents = $(target).parents(); // eslint-disable-line\r\n      for (let k = 0; k < parents.length; k += 1) {\r\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\r\n      }\r\n    }\r\n  }\r\n  function handleEvent(e) {\r\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n    if (eventData.indexOf(e) < 0) {\r\n      eventData.unshift(e);\r\n    }\r\n    listener.apply(this, eventData);\r\n  }\r\n  const events = eventType.split(' ');\r\n  let j;\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const el = this[i];\r\n    if (!targetSelector) {\r\n      for (j = 0; j < events.length; j += 1) {\r\n        const event = events[j];\r\n        if (!el.dom7Listeners) el.dom7Listeners = {};\r\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\r\n        el.dom7Listeners[event].push({\r\n          listener,\r\n          proxyListener: handleEvent,\r\n        });\r\n        el.addEventListener(event, handleEvent, capture);\r\n      }\r\n    } else {\r\n      // Live events\r\n      for (j = 0; j < events.length; j += 1) {\r\n        const event = events[j];\r\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\r\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\r\n        el.dom7LiveListeners[event].push({\r\n          listener,\r\n          proxyListener: handleLiveEvent,\r\n        });\r\n        el.addEventListener(event, handleLiveEvent, capture);\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction off(...args) {\r\n  let [eventType, targetSelector, listener, capture] = args;\r\n  if (typeof args[1] === 'function') {\r\n    [eventType, listener, capture] = args;\r\n    targetSelector = undefined;\r\n  }\r\n  if (!capture) capture = false;\r\n\r\n  const events = eventType.split(' ');\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    const event = events[i];\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      const el = this[j];\r\n      let handlers;\r\n      if (!targetSelector && el.dom7Listeners) {\r\n        handlers = el.dom7Listeners[event];\r\n      } else if (targetSelector && el.dom7LiveListeners) {\r\n        handlers = el.dom7LiveListeners[event];\r\n      }\r\n      if (handlers && handlers.length) {\r\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\r\n          const handler = handlers[k];\r\n          if (listener && handler.listener === listener) {\r\n            el.removeEventListener(event, handler.proxyListener, capture);\r\n            handlers.splice(k, 1);\r\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n            el.removeEventListener(event, handler.proxyListener, capture);\r\n            handlers.splice(k, 1);\r\n          } else if (!listener) {\r\n            el.removeEventListener(event, handler.proxyListener, capture);\r\n            handlers.splice(k, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction trigger(...args) {\r\n  const events = args[0].split(' ');\r\n  const eventData = args[1];\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    const event = events[i];\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      const el = this[j];\r\n      let evt;\r\n      try {\r\n        evt = new win.CustomEvent(event, {\r\n          detail: eventData,\r\n          bubbles: true,\r\n          cancelable: true,\r\n        });\r\n      } catch (e) {\r\n        evt = doc.createEvent('Event');\r\n        evt.initEvent(event, true, true);\r\n        evt.detail = eventData;\r\n      }\r\n      // eslint-disable-next-line\r\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\r\n      el.dispatchEvent(evt);\r\n      el.dom7EventData = [];\r\n      delete el.dom7EventData;\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction transitionEnd(callback) {\r\n  const events = ['webkitTransitionEnd', 'transitionend'];\r\n  const dom = this;\r\n  let i;\r\n  function fireCallBack(e) {\r\n    /* jshint validthis:true */\r\n    if (e.target !== this) return;\r\n    callback.call(this, e);\r\n    for (i = 0; i < events.length; i += 1) {\r\n      dom.off(events[i], fireCallBack);\r\n    }\r\n  }\r\n  if (callback) {\r\n    for (i = 0; i < events.length; i += 1) {\r\n      dom.on(events[i], fireCallBack);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction outerWidth(includeMargins) {\r\n  if (this.length > 0) {\r\n    if (includeMargins) {\r\n      // eslint-disable-next-line\r\n      const styles = this.styles();\r\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\r\n    }\r\n    return this[0].offsetWidth;\r\n  }\r\n  return null;\r\n}\r\nfunction outerHeight(includeMargins) {\r\n  if (this.length > 0) {\r\n    if (includeMargins) {\r\n      // eslint-disable-next-line\r\n      const styles = this.styles();\r\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\r\n    }\r\n    return this[0].offsetHeight;\r\n  }\r\n  return null;\r\n}\r\nfunction offset() {\r\n  if (this.length > 0) {\r\n    const el = this[0];\r\n    const box = el.getBoundingClientRect();\r\n    const body = doc.body;\r\n    const clientTop = el.clientTop || body.clientTop || 0;\r\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\r\n    const scrollTop = el === win ? win.scrollY : el.scrollTop;\r\n    const scrollLeft = el === win ? win.scrollX : el.scrollLeft;\r\n    return {\r\n      top: (box.top + scrollTop) - clientTop,\r\n      left: (box.left + scrollLeft) - clientLeft,\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\nfunction styles() {\r\n  if (this[0]) return win.getComputedStyle(this[0], null);\r\n  return {};\r\n}\r\nfunction css(props, value) {\r\n  let i;\r\n  if (arguments.length === 1) {\r\n    if (typeof props === 'string') {\r\n      if (this[0]) return win.getComputedStyle(this[0], null).getPropertyValue(props);\r\n    } else {\r\n      for (i = 0; i < this.length; i += 1) {\r\n        // eslint-disable-next-line\r\n        for (let prop in props) {\r\n          this[i].style[prop] = props[prop];\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  }\r\n  if (arguments.length === 2 && typeof props === 'string') {\r\n    for (i = 0; i < this.length; i += 1) {\r\n      this[i].style[props] = value;\r\n    }\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n// Iterate over the collection passing elements to `callback`\r\nfunction each(callback) {\r\n  // Don't bother continuing without a callback\r\n  if (!callback) return this;\r\n  // Iterate over the current collection\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    // If the callback returns false\r\n    if (callback.call(this[i], i, this[i]) === false) {\r\n      // End the loop early\r\n      return this;\r\n    }\r\n  }\r\n  // Return `this` to allow chained DOM operations\r\n  return this;\r\n}\r\nfunction filter(callback) {\r\n  const matchedItems = [];\r\n  const dom = this;\r\n  for (let i = 0; i < dom.length; i += 1) {\r\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\r\n  }\r\n  return new Dom7(matchedItems);\r\n}\r\n// eslint-disable-next-line\r\nfunction html(html) {\r\n  if (typeof html === 'undefined') {\r\n    return this[0] ? this[0].innerHTML : undefined;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    this[i].innerHTML = html;\r\n  }\r\n  return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction text(text) {\r\n  if (typeof text === 'undefined') {\r\n    if (this[0]) {\r\n      return this[0].textContent.trim();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    this[i].textContent = text;\r\n  }\r\n  return this;\r\n}\r\nfunction is(selector) {\r\n  const el = this[0];\r\n  let compareWith;\r\n  let i;\r\n  if (!el || typeof selector === 'undefined') return false;\r\n  if (typeof selector === 'string') {\r\n    if (el.matches) return el.matches(selector);\r\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\r\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\r\n\r\n    compareWith = $(selector);\r\n    for (i = 0; i < compareWith.length; i += 1) {\r\n      if (compareWith[i] === el) return true;\r\n    }\r\n    return false;\r\n  } else if (selector === doc) return el === doc;\r\n  else if (selector === win) return el === win;\r\n\r\n  if (selector.nodeType || selector instanceof Dom7) {\r\n    compareWith = selector.nodeType ? [selector] : selector;\r\n    for (i = 0; i < compareWith.length; i += 1) {\r\n      if (compareWith[i] === el) return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\nfunction index() {\r\n  let child = this[0];\r\n  let i;\r\n  if (child) {\r\n    i = 0;\r\n    // eslint-disable-next-line\r\n    while ((child = child.previousSibling) !== null) {\r\n      if (child.nodeType === 1) i += 1;\r\n    }\r\n    return i;\r\n  }\r\n  return undefined;\r\n}\r\n// eslint-disable-next-line\r\nfunction eq(index) {\r\n  if (typeof index === 'undefined') return this;\r\n  const length = this.length;\r\n  let returnIndex;\r\n  if (index > length - 1) {\r\n    return new Dom7([]);\r\n  }\r\n  if (index < 0) {\r\n    returnIndex = length + index;\r\n    if (returnIndex < 0) return new Dom7([]);\r\n    return new Dom7([this[returnIndex]]);\r\n  }\r\n  return new Dom7([this[index]]);\r\n}\r\nfunction append(...args) {\r\n  let newChild;\r\n\r\n  for (let k = 0; k < args.length; k += 1) {\r\n    newChild = args[k];\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (typeof newChild === 'string') {\r\n        const tempDiv = doc.createElement('div');\r\n        tempDiv.innerHTML = newChild;\r\n        while (tempDiv.firstChild) {\r\n          this[i].appendChild(tempDiv.firstChild);\r\n        }\r\n      } else if (newChild instanceof Dom7) {\r\n        for (let j = 0; j < newChild.length; j += 1) {\r\n          this[i].appendChild(newChild[j]);\r\n        }\r\n      } else {\r\n        this[i].appendChild(newChild);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\nfunction prepend(newChild) {\r\n  let i;\r\n  let j;\r\n  for (i = 0; i < this.length; i += 1) {\r\n    if (typeof newChild === 'string') {\r\n      const tempDiv = doc.createElement('div');\r\n      tempDiv.innerHTML = newChild;\r\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n      }\r\n    } else if (newChild instanceof Dom7) {\r\n      for (j = 0; j < newChild.length; j += 1) {\r\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n      }\r\n    } else {\r\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction next(selector) {\r\n  if (this.length > 0) {\r\n    if (selector) {\r\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n        return new Dom7([this[0].nextElementSibling]);\r\n      }\r\n      return new Dom7([]);\r\n    }\r\n\r\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\r\n    return new Dom7([]);\r\n  }\r\n  return new Dom7([]);\r\n}\r\nfunction nextAll(selector) {\r\n  const nextEls = [];\r\n  let el = this[0];\r\n  if (!el) return new Dom7([]);\r\n  while (el.nextElementSibling) {\r\n    const next = el.nextElementSibling; // eslint-disable-line\r\n    if (selector) {\r\n      if ($(next).is(selector)) nextEls.push(next);\r\n    } else nextEls.push(next);\r\n    el = next;\r\n  }\r\n  return new Dom7(nextEls);\r\n}\r\nfunction prev(selector) {\r\n  if (this.length > 0) {\r\n    const el = this[0];\r\n    if (selector) {\r\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n        return new Dom7([el.previousElementSibling]);\r\n      }\r\n      return new Dom7([]);\r\n    }\r\n\r\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\r\n    return new Dom7([]);\r\n  }\r\n  return new Dom7([]);\r\n}\r\nfunction prevAll(selector) {\r\n  const prevEls = [];\r\n  let el = this[0];\r\n  if (!el) return new Dom7([]);\r\n  while (el.previousElementSibling) {\r\n    const prev = el.previousElementSibling; // eslint-disable-line\r\n    if (selector) {\r\n      if ($(prev).is(selector)) prevEls.push(prev);\r\n    } else prevEls.push(prev);\r\n    el = prev;\r\n  }\r\n  return new Dom7(prevEls);\r\n}\r\nfunction parent(selector) {\r\n  const parents = []; // eslint-disable-line\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    if (this[i].parentNode !== null) {\r\n      if (selector) {\r\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\r\n      } else {\r\n        parents.push(this[i].parentNode);\r\n      }\r\n    }\r\n  }\r\n  return $(unique(parents));\r\n}\r\nfunction parents(selector) {\r\n  const parents = []; // eslint-disable-line\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    let parent = this[i].parentNode; // eslint-disable-line\r\n    while (parent) {\r\n      if (selector) {\r\n        if ($(parent).is(selector)) parents.push(parent);\r\n      } else {\r\n        parents.push(parent);\r\n      }\r\n      parent = parent.parentNode;\r\n    }\r\n  }\r\n  return $(unique(parents));\r\n}\r\nfunction closest(selector) {\r\n  let closest = this; // eslint-disable-line\r\n  if (typeof selector === 'undefined') {\r\n    return new Dom7([]);\r\n  }\r\n  if (!closest.is(selector)) {\r\n    closest = closest.parents(selector).eq(0);\r\n  }\r\n  return closest;\r\n}\r\nfunction find(selector) {\r\n  const foundElements = [];\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const found = this[i].querySelectorAll(selector);\r\n    for (let j = 0; j < found.length; j += 1) {\r\n      foundElements.push(found[j]);\r\n    }\r\n  }\r\n  return new Dom7(foundElements);\r\n}\r\nfunction children(selector) {\r\n  const children = []; // eslint-disable-line\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const childNodes = this[i].childNodes;\r\n\r\n    for (let j = 0; j < childNodes.length; j += 1) {\r\n      if (!selector) {\r\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\r\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\r\n        children.push(childNodes[j]);\r\n      }\r\n    }\r\n  }\r\n  return new Dom7(unique(children));\r\n}\r\nfunction remove() {\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\r\n  }\r\n  return this;\r\n}\r\nfunction add(...args) {\r\n  const dom = this;\r\n  let i;\r\n  let j;\r\n  for (i = 0; i < args.length; i += 1) {\r\n    const toAdd = $(args[i]);\r\n    for (j = 0; j < toAdd.length; j += 1) {\r\n      dom[dom.length] = toAdd[j];\r\n      dom.length += 1;\r\n    }\r\n  }\r\n  return dom;\r\n}\r\n\r\n/**\r\n * Swiper 5.3.7\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * http://swiperjs.com\r\n *\r\n * Copyright 2014-2020 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: April 10, 2020\r\n */\r\n\r\nconst Methods = {\r\n  addClass,\r\n  removeClass,\r\n  hasClass,\r\n  toggleClass,\r\n  attr,\r\n  removeAttr,\r\n  data,\r\n  transform,\r\n  transition: transition,\r\n  on,\r\n  off,\r\n  trigger,\r\n  transitionEnd: transitionEnd,\r\n  outerWidth,\r\n  outerHeight,\r\n  offset,\r\n  css,\r\n  each,\r\n  html,\r\n  text,\r\n  is,\r\n  index,\r\n  eq,\r\n  append,\r\n  prepend,\r\n  next,\r\n  nextAll,\r\n  prev,\r\n  prevAll,\r\n  parent,\r\n  parents,\r\n  closest,\r\n  find,\r\n  children,\r\n  filter,\r\n  remove,\r\n  add,\r\n  styles,\r\n};\r\n\r\nObject.keys(Methods).forEach((methodName) => {\r\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\r\n});\r\n\r\nconst Utils = {\r\n  deleteProps(obj) {\r\n    const object = obj;\r\n    Object.keys(object).forEach((key) => {\r\n      try {\r\n        object[key] = null;\r\n      } catch (e) {\r\n        // no getter for object\r\n      }\r\n      try {\r\n        delete object[key];\r\n      } catch (e) {\r\n        // something got wrong\r\n      }\r\n    });\r\n  },\r\n  nextTick(callback, delay = 0) {\r\n    return setTimeout(callback, delay);\r\n  },\r\n  now() {\r\n    return Date.now();\r\n  },\r\n  getTranslate(el, axis = 'x') {\r\n    let matrix;\r\n    let curTransform;\r\n    let transformMatrix;\r\n\r\n    const curStyle = win.getComputedStyle(el, null);\r\n\r\n    if (win.WebKitCSSMatrix) {\r\n      curTransform = curStyle.transform || curStyle.webkitTransform;\r\n      if (curTransform.split(',').length > 6) {\r\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\r\n      }\r\n      // Some old versions of Webkit choke when 'none' is passed; pass\r\n      // empty string instead in this case\r\n      transformMatrix = new win.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n    } else {\r\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n      matrix = transformMatrix.toString().split(',');\r\n    }\r\n\r\n    if (axis === 'x') {\r\n      // Latest Chrome and webkits Fix\r\n      if (win.WebKitCSSMatrix) curTransform = transformMatrix.m41;\r\n      // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\r\n      // Normal Browsers\r\n      else curTransform = parseFloat(matrix[4]);\r\n    }\r\n    if (axis === 'y') {\r\n      // Latest Chrome and webkits Fix\r\n      if (win.WebKitCSSMatrix) curTransform = transformMatrix.m42;\r\n      // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\r\n      // Normal Browsers\r\n      else curTransform = parseFloat(matrix[5]);\r\n    }\r\n    return curTransform || 0;\r\n  },\r\n  parseUrlQuery(url) {\r\n    const query = {};\r\n    let urlToParse = url || win.location.href;\r\n    let i;\r\n    let params;\r\n    let param;\r\n    let length;\r\n    if (typeof urlToParse === 'string' && urlToParse.length) {\r\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\r\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\r\n      length = params.length;\r\n\r\n      for (i = 0; i < length; i += 1) {\r\n        param = params[i].replace(/#\\S+/g, '').split('=');\r\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\r\n      }\r\n    }\r\n    return query;\r\n  },\r\n  isObject(o) {\r\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\r\n  },\r\n  extend(...args) {\r\n    const to = Object(args[0]);\r\n    for (let i = 1; i < args.length; i += 1) {\r\n      const nextSource = args[i];\r\n      if (nextSource !== undefined && nextSource !== null) {\r\n        const keysArray = Object.keys(Object(nextSource));\r\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n          const nextKey = keysArray[nextIndex];\r\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n          if (desc !== undefined && desc.enumerable) {\r\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\r\n              Utils.extend(to[nextKey], nextSource[nextKey]);\r\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\r\n              to[nextKey] = {};\r\n              Utils.extend(to[nextKey], nextSource[nextKey]);\r\n            } else {\r\n              to[nextKey] = nextSource[nextKey];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return to;\r\n  },\r\n};\r\n\r\nconst Support = (function Support() {\r\n  return {\r\n    touch: (win.Modernizr && win.Modernizr.touch === true) || (function checkTouch() {\r\n      return !!((win.navigator.maxTouchPoints > 0) || ('ontouchstart' in win) || (win.DocumentTouch && doc instanceof win.DocumentTouch));\r\n    }()),\r\n\r\n    pointerEvents: !!win.PointerEvent && ('maxTouchPoints' in win.navigator) && win.navigator.maxTouchPoints > 0,\r\n\r\n    observer: (function checkObserver() {\r\n      return ('MutationObserver' in win || 'WebkitMutationObserver' in win);\r\n    }()),\r\n\r\n    passiveListener: (function checkPassiveListener() {\r\n      let supportsPassive = false;\r\n      try {\r\n        const opts = Object.defineProperty({}, 'passive', {\r\n          // eslint-disable-next-line\r\n          get() {\r\n            supportsPassive = true;\r\n          },\r\n        });\r\n        win.addEventListener('testPassiveListener', null, opts);\r\n      } catch (e) {\r\n        // No support\r\n      }\r\n      return supportsPassive;\r\n    }()),\r\n\r\n    gestures: (function checkGestures() {\r\n      return 'ongesturestart' in win;\r\n    }()),\r\n  };\r\n}());\r\n\r\nclass SwiperClass {\r\n  constructor(params = {}) {\r\n    const self = this;\r\n    self.params = params;\r\n\r\n    // Events\r\n    self.eventsListeners = {};\r\n\r\n    if (self.params && self.params.on) {\r\n      Object.keys(self.params.on).forEach((eventName) => {\r\n        self.on(eventName, self.params.on[eventName]);\r\n      });\r\n    }\r\n  }\r\n\r\n  on(events, handler, priority) {\r\n    const self = this;\r\n    if (typeof handler !== 'function') return self;\r\n    const method = priority ? 'unshift' : 'push';\r\n    events.split(' ').forEach((event) => {\r\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n      self.eventsListeners[event][method](handler);\r\n    });\r\n    return self;\r\n  }\r\n\r\n  once(events, handler, priority) {\r\n    const self = this;\r\n    if (typeof handler !== 'function') return self;\r\n    function onceHandler(...args) {\r\n      self.off(events, onceHandler);\r\n      if (onceHandler.f7proxy) {\r\n        delete onceHandler.f7proxy;\r\n      }\r\n      handler.apply(self, args);\r\n    }\r\n    onceHandler.f7proxy = handler;\r\n    return self.on(events, onceHandler, priority);\r\n  }\r\n\r\n  off(events, handler) {\r\n    const self = this;\r\n    if (!self.eventsListeners) return self;\r\n    events.split(' ').forEach((event) => {\r\n      if (typeof handler === 'undefined') {\r\n        self.eventsListeners[event] = [];\r\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\r\n        self.eventsListeners[event].forEach((eventHandler, index) => {\r\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\r\n            self.eventsListeners[event].splice(index, 1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return self;\r\n  }\r\n\r\n  emit(...args) {\r\n    const self = this;\r\n    if (!self.eventsListeners) return self;\r\n    let events;\r\n    let data;\r\n    let context;\r\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n      events = args[0];\r\n      data = args.slice(1, args.length);\r\n      context = self;\r\n    } else {\r\n      events = args[0].events;\r\n      data = args[0].data;\r\n      context = args[0].context || self;\r\n    }\r\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n    eventsArray.forEach((event) => {\r\n      if (self.eventsListeners && self.eventsListeners[event]) {\r\n        const handlers = [];\r\n        self.eventsListeners[event].forEach((eventHandler) => {\r\n          handlers.push(eventHandler);\r\n        });\r\n        handlers.forEach((eventHandler) => {\r\n          eventHandler.apply(context, data);\r\n        });\r\n      }\r\n    });\r\n    return self;\r\n  }\r\n\r\n  useModulesParams(instanceParams) {\r\n    const instance = this;\r\n    if (!instance.modules) return;\r\n    Object.keys(instance.modules).forEach((moduleName) => {\r\n      const module = instance.modules[moduleName];\r\n      // Extend params\r\n      if (module.params) {\r\n        Utils.extend(instanceParams, module.params);\r\n      }\r\n    });\r\n  }\r\n\r\n  useModules(modulesParams = {}) {\r\n    const instance = this;\r\n    if (!instance.modules) return;\r\n    Object.keys(instance.modules).forEach((moduleName) => {\r\n      const module = instance.modules[moduleName];\r\n      const moduleParams = modulesParams[moduleName] || {};\r\n      // Extend instance methods and props\r\n      if (module.instance) {\r\n        Object.keys(module.instance).forEach((modulePropName) => {\r\n          const moduleProp = module.instance[modulePropName];\r\n          if (typeof moduleProp === 'function') {\r\n            instance[modulePropName] = moduleProp.bind(instance);\r\n          } else {\r\n            instance[modulePropName] = moduleProp;\r\n          }\r\n        });\r\n      }\r\n      // Add event listeners\r\n      if (module.on && instance.on) {\r\n        Object.keys(module.on).forEach((moduleEventName) => {\r\n          instance.on(moduleEventName, module.on[moduleEventName]);\r\n        });\r\n      }\r\n\r\n      // Module create callback\r\n      if (module.create) {\r\n        module.create.bind(instance)(moduleParams);\r\n      }\r\n    });\r\n  }\r\n\r\n  static set components(components) {\r\n    const Class = this;\r\n    if (!Class.use) return;\r\n    Class.use(components);\r\n  }\r\n\r\n  static installModule(module, ...params) {\r\n    const Class = this;\r\n    if (!Class.prototype.modules) Class.prototype.modules = {};\r\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\r\n    Class.prototype.modules[name] = module;\r\n    // Prototype\r\n    if (module.proto) {\r\n      Object.keys(module.proto).forEach((key) => {\r\n        Class.prototype[key] = module.proto[key];\r\n      });\r\n    }\r\n    // Class\r\n    if (module.static) {\r\n      Object.keys(module.static).forEach((key) => {\r\n        Class[key] = module.static[key];\r\n      });\r\n    }\r\n    // Callback\r\n    if (module.install) {\r\n      module.install.apply(Class, params);\r\n    }\r\n    return Class;\r\n  }\r\n\r\n  static use(module, ...params) {\r\n    const Class = this;\r\n    if (Array.isArray(module)) {\r\n      module.forEach((m) => Class.installModule(m));\r\n      return Class;\r\n    }\r\n    return Class.installModule(module, ...params);\r\n  }\r\n}\r\n\r\nfunction updateSize () {\r\n  const swiper = this;\r\n  let width;\r\n  let height;\r\n  const $el = swiper.$el;\r\n  if (typeof swiper.params.width !== 'undefined') {\r\n    width = swiper.params.width;\r\n  } else {\r\n    width = $el[0].clientWidth;\r\n  }\r\n  if (typeof swiper.params.height !== 'undefined') {\r\n    height = swiper.params.height;\r\n  } else {\r\n    height = $el[0].clientHeight;\r\n  }\r\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\r\n    return;\r\n  }\r\n\r\n  // Subtract paddings\r\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\r\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\r\n\r\n  Utils.extend(swiper, {\r\n    width,\r\n    height,\r\n    size: swiper.isHorizontal() ? width : height,\r\n  });\r\n}\r\n\r\nfunction updateSlides () {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n\r\n  const {\r\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\r\n  } = swiper;\r\n  const isVirtual = swiper.virtual && params.virtual.enabled;\r\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\r\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n  let snapGrid = [];\r\n  const slidesGrid = [];\r\n  const slidesSizesGrid = [];\r\n\r\n  function slidesForMargin(slideIndex) {\r\n    if (!params.cssMode) return true;\r\n    if (slideIndex === slides.length - 1) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  let offsetBefore = params.slidesOffsetBefore;\r\n  if (typeof offsetBefore === 'function') {\r\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n  }\r\n\r\n  let offsetAfter = params.slidesOffsetAfter;\r\n  if (typeof offsetAfter === 'function') {\r\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n  }\r\n\r\n  const previousSnapGridLength = swiper.snapGrid.length;\r\n  const previousSlidesGridLength = swiper.snapGrid.length;\r\n\r\n  let spaceBetween = params.spaceBetween;\r\n  let slidePosition = -offsetBefore;\r\n  let prevSlideSize = 0;\r\n  let index = 0;\r\n  if (typeof swiperSize === 'undefined') {\r\n    return;\r\n  }\r\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\r\n  }\r\n\r\n  swiper.virtualSize = -spaceBetween;\r\n\r\n  // reset margins\r\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\r\n  else slides.css({ marginRight: '', marginBottom: '' });\r\n\r\n  let slidesNumberEvenToRows;\r\n  if (params.slidesPerColumn > 1) {\r\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\r\n      slidesNumberEvenToRows = slidesLength;\r\n    } else {\r\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\r\n    }\r\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\r\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\r\n    }\r\n  }\r\n\r\n  // Calc slides\r\n  let slideSize;\r\n  const slidesPerColumn = params.slidesPerColumn;\r\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\r\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\r\n  for (let i = 0; i < slidesLength; i += 1) {\r\n    slideSize = 0;\r\n    const slide = slides.eq(i);\r\n    if (params.slidesPerColumn > 1) {\r\n      // Set slides order\r\n      let newSlideOrderIndex;\r\n      let column;\r\n      let row;\r\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\r\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\r\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\r\n        const columnsInGroup = groupIndex === 0\r\n          ? params.slidesPerGroup\r\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\r\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\r\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\r\n\r\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\r\n        slide\r\n          .css({\r\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\r\n            '-moz-box-ordinal-group': newSlideOrderIndex,\r\n            '-ms-flex-order': newSlideOrderIndex,\r\n            '-webkit-order': newSlideOrderIndex,\r\n            order: newSlideOrderIndex,\r\n          });\r\n      } else if (params.slidesPerColumnFill === 'column') {\r\n        column = Math.floor(i / slidesPerColumn);\r\n        row = i - (column * slidesPerColumn);\r\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\r\n          row += 1;\r\n          if (row >= slidesPerColumn) {\r\n            row = 0;\r\n            column += 1;\r\n          }\r\n        }\r\n      } else {\r\n        row = Math.floor(i / slidesPerRow);\r\n        column = i - (row * slidesPerRow);\r\n      }\r\n      slide.css(\r\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\r\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\r\n      );\r\n    }\r\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\r\n\r\n    if (params.slidesPerView === 'auto') {\r\n      const slideStyles = win.getComputedStyle(slide[0], null);\r\n      const currentTransform = slide[0].style.transform;\r\n      const currentWebKitTransform = slide[0].style.webkitTransform;\r\n      if (currentTransform) {\r\n        slide[0].style.transform = 'none';\r\n      }\r\n      if (currentWebKitTransform) {\r\n        slide[0].style.webkitTransform = 'none';\r\n      }\r\n      if (params.roundLengths) {\r\n        slideSize = swiper.isHorizontal()\r\n          ? slide.outerWidth(true)\r\n          : slide.outerHeight(true);\r\n      } else {\r\n        // eslint-disable-next-line\r\n        if (swiper.isHorizontal()) {\r\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\r\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\r\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\r\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\r\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\r\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n          if (boxSizing && boxSizing === 'border-box') {\r\n            slideSize = width + marginLeft + marginRight;\r\n          } else {\r\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\r\n          }\r\n        } else {\r\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\r\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\r\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\r\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\r\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\r\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n          if (boxSizing && boxSizing === 'border-box') {\r\n            slideSize = height + marginTop + marginBottom;\r\n          } else {\r\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\r\n          }\r\n        }\r\n      }\r\n      if (currentTransform) {\r\n        slide[0].style.transform = currentTransform;\r\n      }\r\n      if (currentWebKitTransform) {\r\n        slide[0].style.webkitTransform = currentWebKitTransform;\r\n      }\r\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n    } else {\r\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\r\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n\r\n      if (slides[i]) {\r\n        if (swiper.isHorizontal()) {\r\n          slides[i].style.width = `${slideSize}px`;\r\n        } else {\r\n          slides[i].style.height = `${slideSize}px`;\r\n        }\r\n      }\r\n    }\r\n    if (slides[i]) {\r\n      slides[i].swiperSlideSize = slideSize;\r\n    }\r\n    slidesSizesGrid.push(slideSize);\r\n\r\n\r\n    if (params.centeredSlides) {\r\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\r\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\r\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\r\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n      slidesGrid.push(slidePosition);\r\n    } else {\r\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n      slidesGrid.push(slidePosition);\r\n      slidePosition = slidePosition + slideSize + spaceBetween;\r\n    }\r\n\r\n    swiper.virtualSize += slideSize + spaceBetween;\r\n\r\n    prevSlideSize = slideSize;\r\n\r\n    index += 1;\r\n  }\r\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n  let newSlidesGrid;\r\n\r\n  if (\r\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\r\n  }\r\n  if (params.setWrapperSize) {\r\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\r\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\r\n  }\r\n\r\n  if (params.slidesPerColumn > 1) {\r\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\r\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\r\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\r\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\r\n    if (params.centeredSlides) {\r\n      newSlidesGrid = [];\r\n      for (let i = 0; i < snapGrid.length; i += 1) {\r\n        let slidesGridItem = snapGrid[i];\r\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n      }\r\n      snapGrid = newSlidesGrid;\r\n    }\r\n  }\r\n\r\n  // Remove last grid elements depending on width\r\n  if (!params.centeredSlides) {\r\n    newSlidesGrid = [];\r\n    for (let i = 0; i < snapGrid.length; i += 1) {\r\n      let slidesGridItem = snapGrid[i];\r\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n        newSlidesGrid.push(slidesGridItem);\r\n      }\r\n    }\r\n    snapGrid = newSlidesGrid;\r\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n      snapGrid.push(swiper.virtualSize - swiperSize);\r\n    }\r\n  }\r\n  if (snapGrid.length === 0) snapGrid = [0];\r\n\r\n  if (params.spaceBetween !== 0) {\r\n    if (swiper.isHorizontal()) {\r\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\r\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\r\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\r\n  }\r\n\r\n  if (params.centeredSlides && params.centeredSlidesBounds) {\r\n    let allSlidesSize = 0;\r\n    slidesSizesGrid.forEach((slideSizeValue) => {\r\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n    });\r\n    allSlidesSize -= params.spaceBetween;\r\n    const maxSnap = allSlidesSize - swiperSize;\r\n    snapGrid = snapGrid.map((snap) => {\r\n      if (snap < 0) return -offsetBefore;\r\n      if (snap > maxSnap) return maxSnap + offsetAfter;\r\n      return snap;\r\n    });\r\n  }\r\n\r\n  if (params.centerInsufficientSlides) {\r\n    let allSlidesSize = 0;\r\n    slidesSizesGrid.forEach((slideSizeValue) => {\r\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n    });\r\n    allSlidesSize -= params.spaceBetween;\r\n    if (allSlidesSize < swiperSize) {\r\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\r\n      snapGrid.forEach((snap, snapIndex) => {\r\n        snapGrid[snapIndex] = snap - allSlidesOffset;\r\n      });\r\n      slidesGrid.forEach((snap, snapIndex) => {\r\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n      });\r\n    }\r\n  }\r\n\r\n  Utils.extend(swiper, {\r\n    slides,\r\n    snapGrid,\r\n    slidesGrid,\r\n    slidesSizesGrid,\r\n  });\r\n\r\n  if (slidesLength !== previousSlidesLength) {\r\n    swiper.emit('slidesLengthChange');\r\n  }\r\n  if (snapGrid.length !== previousSnapGridLength) {\r\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n    swiper.emit('snapGridLengthChange');\r\n  }\r\n  if (slidesGrid.length !== previousSlidesGridLength) {\r\n    swiper.emit('slidesGridLengthChange');\r\n  }\r\n\r\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n    swiper.updateSlidesOffset();\r\n  }\r\n}\r\n\r\nfunction updateAutoHeight (speed) {\r\n  const swiper = this;\r\n  const activeSlides = [];\r\n  let newHeight = 0;\r\n  let i;\r\n  if (typeof speed === 'number') {\r\n    swiper.setTransition(speed);\r\n  } else if (speed === true) {\r\n    swiper.setTransition(swiper.params.speed);\r\n  }\r\n  // Find slides currently in view\r\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n    if (swiper.params.centeredSlides) {\r\n      swiper.visibleSlides.each((index, slide) => {\r\n        activeSlides.push(slide);\r\n      });\r\n    } else {\r\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n        const index = swiper.activeIndex + i;\r\n        if (index > swiper.slides.length) break;\r\n        activeSlides.push(swiper.slides.eq(index)[0]);\r\n      }\r\n    }\r\n  } else {\r\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\r\n  }\r\n\r\n  // Find new height from highest slide in view\r\n  for (i = 0; i < activeSlides.length; i += 1) {\r\n    if (typeof activeSlides[i] !== 'undefined') {\r\n      const height = activeSlides[i].offsetHeight;\r\n      newHeight = height > newHeight ? height : newHeight;\r\n    }\r\n  }\r\n\r\n  // Update Height\r\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\r\n}\r\n\r\nfunction updateSlidesOffset () {\r\n  const swiper = this;\r\n  const slides = swiper.slides;\r\n  for (let i = 0; i < slides.length; i += 1) {\r\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\r\n  }\r\n}\r\n\r\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n\r\n  const { slides, rtlTranslate: rtl } = swiper;\r\n\r\n  if (slides.length === 0) return;\r\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n\r\n  let offsetCenter = -translate;\r\n  if (rtl) offsetCenter = translate;\r\n\r\n  // Visible Slides\r\n  slides.removeClass(params.slideVisibleClass);\r\n\r\n  swiper.visibleSlidesIndexes = [];\r\n  swiper.visibleSlides = [];\r\n\r\n  for (let i = 0; i < slides.length; i += 1) {\r\n    const slide = slides[i];\r\n    const slideProgress = (\r\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\r\n    ) / (slide.swiperSlideSize + params.spaceBetween);\r\n    if (params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) {\r\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\r\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\r\n                || (slideAfter > 1 && slideAfter <= swiper.size)\r\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\r\n      if (isVisible) {\r\n        swiper.visibleSlides.push(slide);\r\n        swiper.visibleSlidesIndexes.push(i);\r\n        slides.eq(i).addClass(params.slideVisibleClass);\r\n      }\r\n    }\r\n    slide.progress = rtl ? -slideProgress : slideProgress;\r\n  }\r\n  swiper.visibleSlides = $(swiper.visibleSlides);\r\n}\r\n\r\nfunction updateProgress (translate) {\r\n  const swiper = this;\r\n  if (typeof translate === 'undefined') {\r\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\r\n    // eslint-disable-next-line\r\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\r\n  }\r\n  const params = swiper.params;\r\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n  let { progress, isBeginning, isEnd } = swiper;\r\n  const wasBeginning = isBeginning;\r\n  const wasEnd = isEnd;\r\n  if (translatesDiff === 0) {\r\n    progress = 0;\r\n    isBeginning = true;\r\n    isEnd = true;\r\n  } else {\r\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\r\n    isBeginning = progress <= 0;\r\n    isEnd = progress >= 1;\r\n  }\r\n  Utils.extend(swiper, {\r\n    progress,\r\n    isBeginning,\r\n    isEnd,\r\n  });\r\n\r\n  if (params.watchSlidesProgress || params.watchSlidesVisibility || (params.centeredSlides && params.autoHeight)) swiper.updateSlidesProgress(translate);\r\n\r\n  if (isBeginning && !wasBeginning) {\r\n    swiper.emit('reachBeginning toEdge');\r\n  }\r\n  if (isEnd && !wasEnd) {\r\n    swiper.emit('reachEnd toEdge');\r\n  }\r\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\r\n    swiper.emit('fromEdge');\r\n  }\r\n\r\n  swiper.emit('progress', progress);\r\n}\r\n\r\nfunction updateSlidesClasses () {\r\n  const swiper = this;\r\n\r\n  const {\r\n    slides, params, $wrapperEl, activeIndex, realIndex,\r\n  } = swiper;\r\n  const isVirtual = swiper.virtual && params.virtual.enabled;\r\n\r\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\r\n\r\n  let activeSlide;\r\n  if (isVirtual) {\r\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\r\n  } else {\r\n    activeSlide = slides.eq(activeIndex);\r\n  }\r\n\r\n  // Active classes\r\n  activeSlide.addClass(params.slideActiveClass);\r\n\r\n  if (params.loop) {\r\n    // Duplicate to all looped slides\r\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\r\n        .addClass(params.slideDuplicateActiveClass);\r\n    } else {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\r\n        .addClass(params.slideDuplicateActiveClass);\r\n    }\r\n  }\r\n  // Next Slide\r\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\r\n  if (params.loop && nextSlide.length === 0) {\r\n    nextSlide = slides.eq(0);\r\n    nextSlide.addClass(params.slideNextClass);\r\n  }\r\n  // Prev Slide\r\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\r\n  if (params.loop && prevSlide.length === 0) {\r\n    prevSlide = slides.eq(-1);\r\n    prevSlide.addClass(params.slidePrevClass);\r\n  }\r\n  if (params.loop) {\r\n    // Duplicate to all looped slides\r\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicateNextClass);\r\n    } else {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicateNextClass);\r\n    }\r\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicatePrevClass);\r\n    } else {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicatePrevClass);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateActiveIndex (newActiveIndex) {\r\n  const swiper = this;\r\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n  const {\r\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\r\n  } = swiper;\r\n  let activeIndex = newActiveIndex;\r\n  let snapIndex;\r\n  if (typeof activeIndex === 'undefined') {\r\n    for (let i = 0; i < slidesGrid.length; i += 1) {\r\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\r\n          activeIndex = i;\r\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n          activeIndex = i + 1;\r\n        }\r\n      } else if (translate >= slidesGrid[i]) {\r\n        activeIndex = i;\r\n      }\r\n    }\r\n    // Normalize slideIndex\r\n    if (params.normalizeSlideIndex) {\r\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n    }\r\n  }\r\n  if (snapGrid.indexOf(translate) >= 0) {\r\n    snapIndex = snapGrid.indexOf(translate);\r\n  } else {\r\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n  }\r\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n  if (activeIndex === previousIndex) {\r\n    if (snapIndex !== previousSnapIndex) {\r\n      swiper.snapIndex = snapIndex;\r\n      swiper.emit('snapIndexChange');\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Get real index\r\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\r\n\r\n  Utils.extend(swiper, {\r\n    snapIndex,\r\n    realIndex,\r\n    previousIndex,\r\n    activeIndex,\r\n  });\r\n  swiper.emit('activeIndexChange');\r\n  swiper.emit('snapIndexChange');\r\n  if (previousRealIndex !== realIndex) {\r\n    swiper.emit('realIndexChange');\r\n  }\r\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n    swiper.emit('slideChange');\r\n  }\r\n}\r\n\r\nfunction updateClickedSlide (e) {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\r\n  let slideFound = false;\r\n  if (slide) {\r\n    for (let i = 0; i < swiper.slides.length; i += 1) {\r\n      if (swiper.slides[i] === slide) slideFound = true;\r\n    }\r\n  }\r\n\r\n  if (slide && slideFound) {\r\n    swiper.clickedSlide = slide;\r\n    if (swiper.virtual && swiper.params.virtual.enabled) {\r\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\r\n    } else {\r\n      swiper.clickedIndex = $(slide).index();\r\n    }\r\n  } else {\r\n    swiper.clickedSlide = undefined;\r\n    swiper.clickedIndex = undefined;\r\n    return;\r\n  }\r\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n    swiper.slideToClickedSlide();\r\n  }\r\n}\r\n\r\nvar update = {\r\n  updateSize,\r\n  updateSlides,\r\n  updateAutoHeight,\r\n  updateSlidesOffset,\r\n  updateSlidesProgress,\r\n  updateProgress,\r\n  updateSlidesClasses,\r\n  updateActiveIndex,\r\n  updateClickedSlide,\r\n};\r\n\r\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\r\n  const swiper = this;\r\n\r\n  const {\r\n    params, rtlTranslate: rtl, translate, $wrapperEl,\r\n  } = swiper;\r\n\r\n  if (params.virtualTranslate) {\r\n    return rtl ? -translate : translate;\r\n  }\r\n  if (params.cssMode) {\r\n    return translate;\r\n  }\r\n\r\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\r\n  if (rtl) currentTranslate = -currentTranslate;\r\n\r\n  return currentTranslate || 0;\r\n}\r\n\r\nfunction setTranslate (translate, byController) {\r\n  const swiper = this;\r\n  const {\r\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\r\n  } = swiper;\r\n  let x = 0;\r\n  let y = 0;\r\n  const z = 0;\r\n\r\n  if (swiper.isHorizontal()) {\r\n    x = rtl ? -translate : translate;\r\n  } else {\r\n    y = translate;\r\n  }\r\n\r\n  if (params.roundLengths) {\r\n    x = Math.floor(x);\r\n    y = Math.floor(y);\r\n  }\r\n\r\n  if (params.cssMode) {\r\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\r\n  } else if (!params.virtualTranslate) {\r\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\r\n  }\r\n  swiper.previousTranslate = swiper.translate;\r\n  swiper.translate = swiper.isHorizontal() ? x : y;\r\n\r\n  // Check if we need to update progress\r\n  let newProgress;\r\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n  if (translatesDiff === 0) {\r\n    newProgress = 0;\r\n  } else {\r\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\r\n  }\r\n  if (newProgress !== progress) {\r\n    swiper.updateProgress(translate);\r\n  }\r\n\r\n  swiper.emit('setTranslate', swiper.translate, byController);\r\n}\r\n\r\nfunction minTranslate () {\r\n  return (-this.snapGrid[0]);\r\n}\r\n\r\nfunction maxTranslate () {\r\n  return (-this.snapGrid[this.snapGrid.length - 1]);\r\n}\r\n\r\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\r\n  const swiper = this;\r\n\r\n  const {\r\n    params,\r\n    wrapperEl,\r\n  } = swiper;\r\n\r\n  if (swiper.animating && params.preventInteractionOnTransition) {\r\n    return false;\r\n  }\r\n\r\n  const minTranslate = swiper.minTranslate();\r\n  const maxTranslate = swiper.maxTranslate();\r\n  let newTranslate;\r\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\r\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\r\n  else newTranslate = translate;\r\n\r\n  // Update progress\r\n  swiper.updateProgress(newTranslate);\r\n\r\n  if (params.cssMode) {\r\n    const isH = swiper.isHorizontal();\r\n    if (speed === 0) {\r\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n    } else {\r\n      // eslint-disable-next-line\r\n      if (wrapperEl.scrollTo) {\r\n        wrapperEl.scrollTo({\r\n          [isH ? 'left' : 'top']: -newTranslate,\r\n          behavior: 'smooth',\r\n        });\r\n      } else {\r\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  if (speed === 0) {\r\n    swiper.setTransition(0);\r\n    swiper.setTranslate(newTranslate);\r\n    if (runCallbacks) {\r\n      swiper.emit('beforeTransitionStart', speed, internal);\r\n      swiper.emit('transitionEnd');\r\n    }\r\n  } else {\r\n    swiper.setTransition(speed);\r\n    swiper.setTranslate(newTranslate);\r\n    if (runCallbacks) {\r\n      swiper.emit('beforeTransitionStart', speed, internal);\r\n      swiper.emit('transitionStart');\r\n    }\r\n    if (!swiper.animating) {\r\n      swiper.animating = true;\r\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\r\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n          swiper.onTranslateToWrapperTransitionEnd = null;\r\n          delete swiper.onTranslateToWrapperTransitionEnd;\r\n          if (runCallbacks) {\r\n            swiper.emit('transitionEnd');\r\n          }\r\n        };\r\n      }\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nvar translate = {\r\n  getTranslate,\r\n  setTranslate,\r\n  minTranslate,\r\n  maxTranslate,\r\n  translateTo,\r\n};\r\n\r\nfunction setTransition (duration, byController) {\r\n  const swiper = this;\r\n\r\n  if (!swiper.params.cssMode) {\r\n    swiper.$wrapperEl.transition(duration);\r\n  }\r\n\r\n  swiper.emit('setTransition', duration, byController);\r\n}\r\n\r\nfunction transitionStart (runCallbacks = true, direction) {\r\n  const swiper = this;\r\n  const { activeIndex, params, previousIndex } = swiper;\r\n  if (params.cssMode) return;\r\n  if (params.autoHeight) {\r\n    swiper.updateAutoHeight();\r\n  }\r\n\r\n  let dir = direction;\r\n  if (!dir) {\r\n    if (activeIndex > previousIndex) dir = 'next';\r\n    else if (activeIndex < previousIndex) dir = 'prev';\r\n    else dir = 'reset';\r\n  }\r\n\r\n  swiper.emit('transitionStart');\r\n\r\n  if (runCallbacks && activeIndex !== previousIndex) {\r\n    if (dir === 'reset') {\r\n      swiper.emit('slideResetTransitionStart');\r\n      return;\r\n    }\r\n    swiper.emit('slideChangeTransitionStart');\r\n    if (dir === 'next') {\r\n      swiper.emit('slideNextTransitionStart');\r\n    } else {\r\n      swiper.emit('slidePrevTransitionStart');\r\n    }\r\n  }\r\n}\r\n\r\nfunction transitionEnd$1 (runCallbacks = true, direction) {\r\n  const swiper = this;\r\n  const { activeIndex, previousIndex, params } = swiper;\r\n  swiper.animating = false;\r\n  if (params.cssMode) return;\r\n  swiper.setTransition(0);\r\n\r\n  let dir = direction;\r\n  if (!dir) {\r\n    if (activeIndex > previousIndex) dir = 'next';\r\n    else if (activeIndex < previousIndex) dir = 'prev';\r\n    else dir = 'reset';\r\n  }\r\n\r\n  swiper.emit('transitionEnd');\r\n\r\n  if (runCallbacks && activeIndex !== previousIndex) {\r\n    if (dir === 'reset') {\r\n      swiper.emit('slideResetTransitionEnd');\r\n      return;\r\n    }\r\n    swiper.emit('slideChangeTransitionEnd');\r\n    if (dir === 'next') {\r\n      swiper.emit('slideNextTransitionEnd');\r\n    } else {\r\n      swiper.emit('slidePrevTransitionEnd');\r\n    }\r\n  }\r\n}\r\n\r\nvar transition$1 = {\r\n  setTransition,\r\n  transitionStart,\r\n  transitionEnd: transitionEnd$1,\r\n};\r\n\r\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  let slideIndex = index;\r\n  if (slideIndex < 0) slideIndex = 0;\r\n\r\n  const {\r\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\r\n  } = swiper;\r\n  if (swiper.animating && params.preventInteractionOnTransition) {\r\n    return false;\r\n  }\r\n\r\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\r\n    swiper.emit('beforeSlideChangeStart');\r\n  }\r\n\r\n  const translate = -snapGrid[snapIndex];\r\n\r\n  // Update progress\r\n  swiper.updateProgress(translate);\r\n\r\n  // Normalize slideIndex\r\n  if (params.normalizeSlideIndex) {\r\n    for (let i = 0; i < slidesGrid.length; i += 1) {\r\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\r\n        slideIndex = i;\r\n      }\r\n    }\r\n  }\r\n  // Directions locks\r\n  if (swiper.initialized && slideIndex !== activeIndex) {\r\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n      return false;\r\n    }\r\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n      if ((activeIndex || 0) !== slideIndex) return false;\r\n    }\r\n  }\r\n\r\n  let direction;\r\n  if (slideIndex > activeIndex) direction = 'next';\r\n  else if (slideIndex < activeIndex) direction = 'prev';\r\n  else direction = 'reset';\r\n\r\n\r\n  // Update Index\r\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\r\n    swiper.updateActiveIndex(slideIndex);\r\n    // Update Height\r\n    if (params.autoHeight) {\r\n      swiper.updateAutoHeight();\r\n    }\r\n    swiper.updateSlidesClasses();\r\n    if (params.effect !== 'slide') {\r\n      swiper.setTranslate(translate);\r\n    }\r\n    if (direction !== 'reset') {\r\n      swiper.transitionStart(runCallbacks, direction);\r\n      swiper.transitionEnd(runCallbacks, direction);\r\n    }\r\n    return false;\r\n  }\r\n  if (params.cssMode) {\r\n    const isH = swiper.isHorizontal();\r\n    let t = -translate;\r\n    if (rtl) {\r\n      t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;\r\n    }\r\n    if (speed === 0) {\r\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n    } else {\r\n      // eslint-disable-next-line\r\n      if (wrapperEl.scrollTo) {\r\n        wrapperEl.scrollTo({\r\n          [isH ? 'left' : 'top']: t,\r\n          behavior: 'smooth',\r\n        });\r\n      } else {\r\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  if (speed === 0) {\r\n    swiper.setTransition(0);\r\n    swiper.setTranslate(translate);\r\n    swiper.updateActiveIndex(slideIndex);\r\n    swiper.updateSlidesClasses();\r\n    swiper.emit('beforeTransitionStart', speed, internal);\r\n    swiper.transitionStart(runCallbacks, direction);\r\n    swiper.transitionEnd(runCallbacks, direction);\r\n  } else {\r\n    swiper.setTransition(speed);\r\n    swiper.setTranslate(translate);\r\n    swiper.updateActiveIndex(slideIndex);\r\n    swiper.updateSlidesClasses();\r\n    swiper.emit('beforeTransitionStart', speed, internal);\r\n    swiper.transitionStart(runCallbacks, direction);\r\n    if (!swiper.animating) {\r\n      swiper.animating = true;\r\n      if (!swiper.onSlideToWrapperTransitionEnd) {\r\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.onSlideToWrapperTransitionEnd = null;\r\n          delete swiper.onSlideToWrapperTransitionEnd;\r\n          swiper.transitionEnd(runCallbacks, direction);\r\n        };\r\n      }\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  let newIndex = index;\r\n  if (swiper.params.loop) {\r\n    newIndex += swiper.loopedSlides;\r\n  }\r\n\r\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  const { params, animating } = swiper;\r\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;\r\n  if (params.loop) {\r\n    if (animating) return false;\r\n    swiper.loopFix();\r\n    // eslint-disable-next-line\r\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n  }\r\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  const {\r\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\r\n  } = swiper;\r\n\r\n  if (params.loop) {\r\n    if (animating) return false;\r\n    swiper.loopFix();\r\n    // eslint-disable-next-line\r\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n  }\r\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n  function normalize(val) {\r\n    if (val < 0) return -Math.floor(Math.abs(val));\r\n    return Math.floor(val);\r\n  }\r\n  const normalizedTranslate = normalize(translate);\r\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\r\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\r\n\r\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\r\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\r\n    snapGrid.forEach((snap) => {\r\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\r\n    });\r\n  }\r\n  let prevIndex;\r\n  if (typeof prevSnap !== 'undefined') {\r\n    prevIndex = slidesGrid.indexOf(prevSnap);\r\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n  }\r\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\r\n  const swiper = this;\r\n  let index = swiper.activeIndex;\r\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\r\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\r\n\r\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n  if (translate >= swiper.snapGrid[snapIndex]) {\r\n    // The current translate is on or after the current snap index, so the choice\r\n    // is between the current index and the one after it.\r\n    const currentSnap = swiper.snapGrid[snapIndex];\r\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\r\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\r\n      index += swiper.params.slidesPerGroup;\r\n    }\r\n  } else {\r\n    // The current translate is before the current snap index, so the choice\r\n    // is between the current index and the one before it.\r\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\r\n    const currentSnap = swiper.snapGrid[snapIndex];\r\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\r\n      index -= swiper.params.slidesPerGroup;\r\n    }\r\n  }\r\n  index = Math.max(index, 0);\r\n  index = Math.min(index, swiper.slidesGrid.length - 1);\r\n\r\n  return swiper.slideTo(index, speed, runCallbacks, internal);\r\n}\r\n\r\nfunction slideToClickedSlide () {\r\n  const swiper = this;\r\n  const { params, $wrapperEl } = swiper;\r\n\r\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n  let slideToIndex = swiper.clickedIndex;\r\n  let realIndex;\r\n  if (params.loop) {\r\n    if (swiper.animating) return;\r\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n    if (params.centeredSlides) {\r\n      if (\r\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\r\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\r\n      ) {\r\n        swiper.loopFix();\r\n        slideToIndex = $wrapperEl\r\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\r\n          .eq(0)\r\n          .index();\r\n\r\n        Utils.nextTick(() => {\r\n          swiper.slideTo(slideToIndex);\r\n        });\r\n      } else {\r\n        swiper.slideTo(slideToIndex);\r\n      }\r\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n      swiper.loopFix();\r\n      slideToIndex = $wrapperEl\r\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\r\n        .eq(0)\r\n        .index();\r\n\r\n      Utils.nextTick(() => {\r\n        swiper.slideTo(slideToIndex);\r\n      });\r\n    } else {\r\n      swiper.slideTo(slideToIndex);\r\n    }\r\n  } else {\r\n    swiper.slideTo(slideToIndex);\r\n  }\r\n}\r\n\r\nvar slide = {\r\n  slideTo,\r\n  slideToLoop,\r\n  slideNext,\r\n  slidePrev,\r\n  slideReset,\r\n  slideToClosest,\r\n  slideToClickedSlide,\r\n};\r\n\r\nfunction loopCreate () {\r\n  const swiper = this;\r\n  const { params, $wrapperEl } = swiper;\r\n  // Remove duplicated slides\r\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\r\n\r\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\r\n\r\n  if (params.loopFillGroupWithBlank) {\r\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\r\n    if (blankSlidesNum !== params.slidesPerGroup) {\r\n      for (let i = 0; i < blankSlidesNum; i += 1) {\r\n        const blankNode = $(doc.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\r\n        $wrapperEl.append(blankNode);\r\n      }\r\n      slides = $wrapperEl.children(`.${params.slideClass}`);\r\n    }\r\n  }\r\n\r\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\r\n\r\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\r\n  swiper.loopedSlides += params.loopAdditionalSlides;\r\n  if (swiper.loopedSlides > slides.length) {\r\n    swiper.loopedSlides = slides.length;\r\n  }\r\n\r\n  const prependSlides = [];\r\n  const appendSlides = [];\r\n  slides.each((index, el) => {\r\n    const slide = $(el);\r\n    if (index < swiper.loopedSlides) appendSlides.push(el);\r\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\r\n    slide.attr('data-swiper-slide-index', index);\r\n  });\r\n  for (let i = 0; i < appendSlides.length; i += 1) {\r\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n  }\r\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\r\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n  }\r\n}\r\n\r\nfunction loopFix () {\r\n  const swiper = this;\r\n\r\n  swiper.emit('beforeLoopFix');\r\n\r\n  const {\r\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\r\n  } = swiper;\r\n  let newIndex;\r\n  swiper.allowSlidePrev = true;\r\n  swiper.allowSlideNext = true;\r\n\r\n  const snapTranslate = -snapGrid[activeIndex];\r\n  const diff = snapTranslate - swiper.getTranslate();\r\n\r\n  // Fix For Negative Oversliding\r\n  if (activeIndex < loopedSlides) {\r\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\r\n    newIndex += loopedSlides;\r\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n    if (slideChanged && diff !== 0) {\r\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n    }\r\n  } else if (activeIndex >= slides.length - loopedSlides) {\r\n    // Fix For Positive Oversliding\r\n    newIndex = -slides.length + activeIndex + loopedSlides;\r\n    newIndex += loopedSlides;\r\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n    if (slideChanged && diff !== 0) {\r\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n    }\r\n  }\r\n  swiper.allowSlidePrev = allowSlidePrev;\r\n  swiper.allowSlideNext = allowSlideNext;\r\n\r\n  swiper.emit('loopFix');\r\n}\r\n\r\nfunction loopDestroy () {\r\n  const swiper = this;\r\n  const { $wrapperEl, params, slides } = swiper;\r\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\r\n  slides.removeAttr('data-swiper-slide-index');\r\n}\r\n\r\nvar loop = {\r\n  loopCreate,\r\n  loopFix,\r\n  loopDestroy,\r\n};\r\n\r\nfunction setGrabCursor (moving) {\r\n  const swiper = this;\r\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\r\n  const el = swiper.el;\r\n  el.style.cursor = 'move';\r\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\r\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\r\n  el.style.cursor = moving ? 'grabbing' : 'grab';\r\n}\r\n\r\nfunction unsetGrabCursor () {\r\n  const swiper = this;\r\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\r\n  swiper.el.style.cursor = '';\r\n}\r\n\r\nvar grabCursor = {\r\n  setGrabCursor,\r\n  unsetGrabCursor,\r\n};\r\n\r\nfunction appendSlide (slides) {\r\n  const swiper = this;\r\n  const { $wrapperEl, params } = swiper;\r\n  if (params.loop) {\r\n    swiper.loopDestroy();\r\n  }\r\n  if (typeof slides === 'object' && 'length' in slides) {\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      if (slides[i]) $wrapperEl.append(slides[i]);\r\n    }\r\n  } else {\r\n    $wrapperEl.append(slides);\r\n  }\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n}\r\n\r\nfunction prependSlide (slides) {\r\n  const swiper = this;\r\n  const { params, $wrapperEl, activeIndex } = swiper;\r\n\r\n  if (params.loop) {\r\n    swiper.loopDestroy();\r\n  }\r\n  let newActiveIndex = activeIndex + 1;\r\n  if (typeof slides === 'object' && 'length' in slides) {\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\r\n    }\r\n    newActiveIndex = activeIndex + slides.length;\r\n  } else {\r\n    $wrapperEl.prepend(slides);\r\n  }\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n  swiper.slideTo(newActiveIndex, 0, false);\r\n}\r\n\r\nfunction addSlide (index, slides) {\r\n  const swiper = this;\r\n  const { $wrapperEl, params, activeIndex } = swiper;\r\n  let activeIndexBuffer = activeIndex;\r\n  if (params.loop) {\r\n    activeIndexBuffer -= swiper.loopedSlides;\r\n    swiper.loopDestroy();\r\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n  }\r\n  const baseLength = swiper.slides.length;\r\n  if (index <= 0) {\r\n    swiper.prependSlide(slides);\r\n    return;\r\n  }\r\n  if (index >= baseLength) {\r\n    swiper.appendSlide(slides);\r\n    return;\r\n  }\r\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n\r\n  const slidesBuffer = [];\r\n  for (let i = baseLength - 1; i >= index; i -= 1) {\r\n    const currentSlide = swiper.slides.eq(i);\r\n    currentSlide.remove();\r\n    slidesBuffer.unshift(currentSlide);\r\n  }\r\n\r\n  if (typeof slides === 'object' && 'length' in slides) {\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      if (slides[i]) $wrapperEl.append(slides[i]);\r\n    }\r\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n  } else {\r\n    $wrapperEl.append(slides);\r\n  }\r\n\r\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\r\n    $wrapperEl.append(slidesBuffer[i]);\r\n  }\r\n\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n  if (params.loop) {\r\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n  } else {\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n  }\r\n}\r\n\r\nfunction removeSlide (slidesIndexes) {\r\n  const swiper = this;\r\n  const { params, $wrapperEl, activeIndex } = swiper;\r\n\r\n  let activeIndexBuffer = activeIndex;\r\n  if (params.loop) {\r\n    activeIndexBuffer -= swiper.loopedSlides;\r\n    swiper.loopDestroy();\r\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n  }\r\n  let newActiveIndex = activeIndexBuffer;\r\n  let indexToRemove;\r\n\r\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\r\n      indexToRemove = slidesIndexes[i];\r\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n    }\r\n    newActiveIndex = Math.max(newActiveIndex, 0);\r\n  } else {\r\n    indexToRemove = slidesIndexes;\r\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n    newActiveIndex = Math.max(newActiveIndex, 0);\r\n  }\r\n\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n  if (params.loop) {\r\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n  } else {\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n  }\r\n}\r\n\r\nfunction removeAllSlides () {\r\n  const swiper = this;\r\n\r\n  const slidesIndexes = [];\r\n  for (let i = 0; i < swiper.slides.length; i += 1) {\r\n    slidesIndexes.push(i);\r\n  }\r\n  swiper.removeSlide(slidesIndexes);\r\n}\r\n\r\nvar manipulation = {\r\n  appendSlide,\r\n  prependSlide,\r\n  addSlide,\r\n  removeSlide,\r\n  removeAllSlides,\r\n};\r\n\r\nconst Device = (function Device() {\r\n  const platform = win.navigator.platform;\r\n  const ua = win.navigator.userAgent;\r\n\r\n  const device = {\r\n    ios: false,\r\n    android: false,\r\n    androidChrome: false,\r\n    desktop: false,\r\n    iphone: false,\r\n    ipod: false,\r\n    ipad: false,\r\n    edge: false,\r\n    ie: false,\r\n    firefox: false,\r\n    macos: false,\r\n    windows: false,\r\n    cordova: !!(win.cordova || win.phonegap),\r\n    phonegap: !!(win.cordova || win.phonegap),\r\n    electron: false,\r\n  };\r\n\r\n  const screenWidth = win.screen.width;\r\n  const screenHeight = win.screen.height;\r\n\r\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n  const edge = ua.indexOf('Edge/') >= 0;\r\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\r\n  const windows = platform === 'Win32';\r\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\r\n  let macos = platform === 'MacIntel';\r\n\r\n  // iPadOs 13 fix\r\n  if (!ipad\r\n    && macos\r\n    && Support.touch\r\n    && (\r\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\r\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\r\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\r\n      || (screenWidth === 768 && screenHeight === 1024) // other\r\n    )\r\n  ) {\r\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\r\n    macos = false;\r\n  }\r\n\r\n  device.ie = ie;\r\n  device.edge = edge;\r\n  device.firefox = firefox;\r\n\r\n  // Android\r\n  if (android && !windows) {\r\n    device.os = 'android';\r\n    device.osVersion = android[2];\r\n    device.android = true;\r\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\r\n  }\r\n  if (ipad || iphone || ipod) {\r\n    device.os = 'ios';\r\n    device.ios = true;\r\n  }\r\n  // iOS\r\n  if (iphone && !ipod) {\r\n    device.osVersion = iphone[2].replace(/_/g, '.');\r\n    device.iphone = true;\r\n  }\r\n  if (ipad) {\r\n    device.osVersion = ipad[2].replace(/_/g, '.');\r\n    device.ipad = true;\r\n  }\r\n  if (ipod) {\r\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n    device.ipod = true;\r\n  }\r\n  // iOS 8+ changed UA\r\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\r\n    if (device.osVersion.split('.')[0] === '10') {\r\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\r\n    }\r\n  }\r\n\r\n  // Webview\r\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || win.navigator.standalone))\r\n    || (win.matchMedia && win.matchMedia('(display-mode: standalone)').matches);\r\n  device.webview = device.webView;\r\n  device.standalone = device.webView;\r\n\r\n  // Desktop\r\n  device.desktop = !(device.ios || device.android) || electron;\r\n  if (device.desktop) {\r\n    device.electron = electron;\r\n    device.macos = macos;\r\n    device.windows = windows;\r\n    if (device.macos) {\r\n      device.os = 'macos';\r\n    }\r\n    if (device.windows) {\r\n      device.os = 'windows';\r\n    }\r\n  }\r\n\r\n  // Pixel Ratio\r\n  device.pixelRatio = win.devicePixelRatio || 1;\r\n\r\n  // Export object\r\n  return device;\r\n}());\r\n\r\nfunction onTouchStart (event) {\r\n  const swiper = this;\r\n  const data = swiper.touchEventsData;\r\n  const { params, touches } = swiper;\r\n\r\n  if (swiper.animating && params.preventInteractionOnTransition) {\r\n    return;\r\n  }\r\n  let e = event;\r\n  if (e.originalEvent) e = e.originalEvent;\r\n  const $targetEl = $(e.target);\r\n\r\n  if (params.touchEventsTarget === 'wrapper') {\r\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\r\n  }\r\n  data.isTouchEvent = e.type === 'touchstart';\r\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\r\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\r\n  if (data.isTouched && data.isMoved) return;\r\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\r\n    swiper.allowClick = true;\r\n    return;\r\n  }\r\n  if (params.swipeHandler) {\r\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\r\n  }\r\n\r\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n  const startX = touches.currentX;\r\n  const startY = touches.currentY;\r\n\r\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\r\n\r\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n  if (\r\n    edgeSwipeDetection\r\n    && ((startX <= edgeSwipeThreshold)\r\n    || (startX >= win.screen.width - edgeSwipeThreshold))\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  Utils.extend(data, {\r\n    isTouched: true,\r\n    isMoved: false,\r\n    allowTouchCallbacks: true,\r\n    isScrolling: undefined,\r\n    startMoving: undefined,\r\n  });\r\n\r\n  touches.startX = startX;\r\n  touches.startY = startY;\r\n  data.touchStartTime = Utils.now();\r\n  swiper.allowClick = true;\r\n  swiper.updateSize();\r\n  swiper.swipeDirection = undefined;\r\n  if (params.threshold > 0) data.allowThresholdMove = false;\r\n  if (e.type !== 'touchstart') {\r\n    let preventDefault = true;\r\n    if ($targetEl.is(data.formElements)) preventDefault = false;\r\n    if (\r\n      doc.activeElement\r\n      && $(doc.activeElement).is(data.formElements)\r\n      && doc.activeElement !== $targetEl[0]\r\n    ) {\r\n      doc.activeElement.blur();\r\n    }\r\n\r\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  swiper.emit('touchStart', e);\r\n}\r\n\r\nfunction onTouchMove (event) {\r\n  const swiper = this;\r\n  const data = swiper.touchEventsData;\r\n  const { params, touches, rtlTranslate: rtl } = swiper;\r\n  let e = event;\r\n  if (e.originalEvent) e = e.originalEvent;\r\n  if (!data.isTouched) {\r\n    if (data.startMoving && data.isScrolling) {\r\n      swiper.emit('touchMoveOpposite', e);\r\n    }\r\n    return;\r\n  }\r\n  if (data.isTouchEvent && e.type === 'mousemove') return;\r\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\r\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\r\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\r\n  if (e.preventedByNestedSwiper) {\r\n    touches.startX = pageX;\r\n    touches.startY = pageY;\r\n    return;\r\n  }\r\n  if (!swiper.allowTouchMove) {\r\n    // isMoved = true;\r\n    swiper.allowClick = false;\r\n    if (data.isTouched) {\r\n      Utils.extend(touches, {\r\n        startX: pageX,\r\n        startY: pageY,\r\n        currentX: pageX,\r\n        currentY: pageY,\r\n      });\r\n      data.touchStartTime = Utils.now();\r\n    }\r\n    return;\r\n  }\r\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\r\n    if (swiper.isVertical()) {\r\n      // Vertical\r\n      if (\r\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\r\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\r\n      ) {\r\n        data.isTouched = false;\r\n        data.isMoved = false;\r\n        return;\r\n      }\r\n    } else if (\r\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\r\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\r\n    ) {\r\n      return;\r\n    }\r\n  }\r\n  if (data.isTouchEvent && doc.activeElement) {\r\n    if (e.target === doc.activeElement && $(e.target).is(data.formElements)) {\r\n      data.isMoved = true;\r\n      swiper.allowClick = false;\r\n      return;\r\n    }\r\n  }\r\n  if (data.allowTouchCallbacks) {\r\n    swiper.emit('touchMove', e);\r\n  }\r\n  if (e.targetTouches && e.targetTouches.length > 1) return;\r\n\r\n  touches.currentX = pageX;\r\n  touches.currentY = pageY;\r\n\r\n  const diffX = touches.currentX - touches.startX;\r\n  const diffY = touches.currentY - touches.startY;\r\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\r\n\r\n  if (typeof data.isScrolling === 'undefined') {\r\n    let touchAngle;\r\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\r\n      data.isScrolling = false;\r\n    } else {\r\n      // eslint-disable-next-line\r\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\r\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\r\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\r\n      }\r\n    }\r\n  }\r\n  if (data.isScrolling) {\r\n    swiper.emit('touchMoveOpposite', e);\r\n  }\r\n  if (typeof data.startMoving === 'undefined') {\r\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n      data.startMoving = true;\r\n    }\r\n  }\r\n  if (data.isScrolling) {\r\n    data.isTouched = false;\r\n    return;\r\n  }\r\n  if (!data.startMoving) {\r\n    return;\r\n  }\r\n  swiper.allowClick = false;\r\n  if (!params.cssMode) {\r\n    e.preventDefault();\r\n  }\r\n  if (params.touchMoveStopPropagation && !params.nested) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  if (!data.isMoved) {\r\n    if (params.loop) {\r\n      swiper.loopFix();\r\n    }\r\n    data.startTranslate = swiper.getTranslate();\r\n    swiper.setTransition(0);\r\n    if (swiper.animating) {\r\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\r\n    }\r\n    data.allowMomentumBounce = false;\r\n    // Grab Cursor\r\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n      swiper.setGrabCursor(true);\r\n    }\r\n    swiper.emit('sliderFirstMove', e);\r\n  }\r\n  swiper.emit('sliderMove', e);\r\n  data.isMoved = true;\r\n\r\n  let diff = swiper.isHorizontal() ? diffX : diffY;\r\n  touches.diff = diff;\r\n\r\n  diff *= params.touchRatio;\r\n  if (rtl) diff = -diff;\r\n\r\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n  data.currentTranslate = diff + data.startTranslate;\r\n\r\n  let disableParentSwiper = true;\r\n  let resistanceRatio = params.resistanceRatio;\r\n  if (params.touchReleaseOnEdges) {\r\n    resistanceRatio = 0;\r\n  }\r\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\r\n    disableParentSwiper = false;\r\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\r\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\r\n    disableParentSwiper = false;\r\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\r\n  }\r\n\r\n  if (disableParentSwiper) {\r\n    e.preventedByNestedSwiper = true;\r\n  }\r\n\r\n  // Directions locks\r\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n    data.currentTranslate = data.startTranslate;\r\n  }\r\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n    data.currentTranslate = data.startTranslate;\r\n  }\r\n\r\n\r\n  // Threshold\r\n  if (params.threshold > 0) {\r\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n      if (!data.allowThresholdMove) {\r\n        data.allowThresholdMove = true;\r\n        touches.startX = touches.currentX;\r\n        touches.startY = touches.currentY;\r\n        data.currentTranslate = data.startTranslate;\r\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n        return;\r\n      }\r\n    } else {\r\n      data.currentTranslate = data.startTranslate;\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (!params.followFinger || params.cssMode) return;\r\n\r\n  // Update active index in free mode\r\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n  }\r\n  if (params.freeMode) {\r\n    // Velocity\r\n    if (data.velocities.length === 0) {\r\n      data.velocities.push({\r\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n        time: data.touchStartTime,\r\n      });\r\n    }\r\n    data.velocities.push({\r\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n      time: Utils.now(),\r\n    });\r\n  }\r\n  // Update progress\r\n  swiper.updateProgress(data.currentTranslate);\r\n  // Update translate\r\n  swiper.setTranslate(data.currentTranslate);\r\n}\r\n\r\nfunction onTouchEnd (event) {\r\n  const swiper = this;\r\n  const data = swiper.touchEventsData;\r\n\r\n  const {\r\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\r\n  } = swiper;\r\n  let e = event;\r\n  if (e.originalEvent) e = e.originalEvent;\r\n  if (data.allowTouchCallbacks) {\r\n    swiper.emit('touchEnd', e);\r\n  }\r\n  data.allowTouchCallbacks = false;\r\n  if (!data.isTouched) {\r\n    if (data.isMoved && params.grabCursor) {\r\n      swiper.setGrabCursor(false);\r\n    }\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    return;\r\n  }\r\n  // Return Grab Cursor\r\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n    swiper.setGrabCursor(false);\r\n  }\r\n\r\n  // Time diff\r\n  const touchEndTime = Utils.now();\r\n  const timeDiff = touchEndTime - data.touchStartTime;\r\n\r\n  // Tap, doubleTap, Click\r\n  if (swiper.allowClick) {\r\n    swiper.updateClickedSlide(e);\r\n    swiper.emit('tap click', e);\r\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\r\n      swiper.emit('doubleTap doubleClick', e);\r\n    }\r\n  }\r\n\r\n  data.lastClickTime = Utils.now();\r\n  Utils.nextTick(() => {\r\n    if (!swiper.destroyed) swiper.allowClick = true;\r\n  });\r\n\r\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n    data.isTouched = false;\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    return;\r\n  }\r\n  data.isTouched = false;\r\n  data.isMoved = false;\r\n  data.startMoving = false;\r\n\r\n  let currentPos;\r\n  if (params.followFinger) {\r\n    currentPos = rtl ? swiper.translate : -swiper.translate;\r\n  } else {\r\n    currentPos = -data.currentTranslate;\r\n  }\r\n\r\n  if (params.cssMode) {\r\n    return;\r\n  }\r\n\r\n  if (params.freeMode) {\r\n    if (currentPos < -swiper.minTranslate()) {\r\n      swiper.slideTo(swiper.activeIndex);\r\n      return;\r\n    }\r\n    if (currentPos > -swiper.maxTranslate()) {\r\n      if (swiper.slides.length < snapGrid.length) {\r\n        swiper.slideTo(snapGrid.length - 1);\r\n      } else {\r\n        swiper.slideTo(swiper.slides.length - 1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (params.freeModeMomentum) {\r\n      if (data.velocities.length > 1) {\r\n        const lastMoveEvent = data.velocities.pop();\r\n        const velocityEvent = data.velocities.pop();\r\n\r\n        const distance = lastMoveEvent.position - velocityEvent.position;\r\n        const time = lastMoveEvent.time - velocityEvent.time;\r\n        swiper.velocity = distance / time;\r\n        swiper.velocity /= 2;\r\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\r\n          swiper.velocity = 0;\r\n        }\r\n        // this implies that the user stopped moving a finger then released.\r\n        // There would be no events with distance zero, so the last event is stale.\r\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\r\n          swiper.velocity = 0;\r\n        }\r\n      } else {\r\n        swiper.velocity = 0;\r\n      }\r\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\r\n\r\n      data.velocities.length = 0;\r\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\r\n      const momentumDistance = swiper.velocity * momentumDuration;\r\n\r\n      let newPosition = swiper.translate + momentumDistance;\r\n      if (rtl) newPosition = -newPosition;\r\n\r\n      let doBounce = false;\r\n      let afterBouncePosition;\r\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\r\n      let needsLoopFix;\r\n      if (newPosition < swiper.maxTranslate()) {\r\n        if (params.freeModeMomentumBounce) {\r\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n            newPosition = swiper.maxTranslate() - bounceAmount;\r\n          }\r\n          afterBouncePosition = swiper.maxTranslate();\r\n          doBounce = true;\r\n          data.allowMomentumBounce = true;\r\n        } else {\r\n          newPosition = swiper.maxTranslate();\r\n        }\r\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n      } else if (newPosition > swiper.minTranslate()) {\r\n        if (params.freeModeMomentumBounce) {\r\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n            newPosition = swiper.minTranslate() + bounceAmount;\r\n          }\r\n          afterBouncePosition = swiper.minTranslate();\r\n          doBounce = true;\r\n          data.allowMomentumBounce = true;\r\n        } else {\r\n          newPosition = swiper.minTranslate();\r\n        }\r\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n      } else if (params.freeModeSticky) {\r\n        let nextSlide;\r\n        for (let j = 0; j < snapGrid.length; j += 1) {\r\n          if (snapGrid[j] > -newPosition) {\r\n            nextSlide = j;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n          newPosition = snapGrid[nextSlide];\r\n        } else {\r\n          newPosition = snapGrid[nextSlide - 1];\r\n        }\r\n        newPosition = -newPosition;\r\n      }\r\n      if (needsLoopFix) {\r\n        swiper.once('transitionEnd', () => {\r\n          swiper.loopFix();\r\n        });\r\n      }\r\n      // Fix duration\r\n      if (swiper.velocity !== 0) {\r\n        if (rtl) {\r\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n        } else {\r\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n        }\r\n        if (params.freeModeSticky) {\r\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\r\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\r\n          // It's easy to see this when simulating touch with mouse events. To fix this,\r\n          // limit single-slide swipes to the default slide duration. This also has the\r\n          // nice side effect of matching slide speed if the user stopped moving before\r\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\r\n          // For faster swipes, also apply limits (albeit higher ones).\r\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\r\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\r\n          if (moveDistance < currentSlideSize) {\r\n            momentumDuration = params.speed;\r\n          } else if (moveDistance < 2 * currentSlideSize) {\r\n            momentumDuration = params.speed * 1.5;\r\n          } else {\r\n            momentumDuration = params.speed * 2.5;\r\n          }\r\n        }\r\n      } else if (params.freeModeSticky) {\r\n        swiper.slideToClosest();\r\n        return;\r\n      }\r\n\r\n      if (params.freeModeMomentumBounce && doBounce) {\r\n        swiper.updateProgress(afterBouncePosition);\r\n        swiper.setTransition(momentumDuration);\r\n        swiper.setTranslate(newPosition);\r\n        swiper.transitionStart(true, swiper.swipeDirection);\r\n        swiper.animating = true;\r\n        $wrapperEl.transitionEnd(() => {\r\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n          swiper.emit('momentumBounce');\r\n\r\n          swiper.setTransition(params.speed);\r\n          swiper.setTranslate(afterBouncePosition);\r\n          $wrapperEl.transitionEnd(() => {\r\n            if (!swiper || swiper.destroyed) return;\r\n            swiper.transitionEnd();\r\n          });\r\n        });\r\n      } else if (swiper.velocity) {\r\n        swiper.updateProgress(newPosition);\r\n        swiper.setTransition(momentumDuration);\r\n        swiper.setTranslate(newPosition);\r\n        swiper.transitionStart(true, swiper.swipeDirection);\r\n        if (!swiper.animating) {\r\n          swiper.animating = true;\r\n          $wrapperEl.transitionEnd(() => {\r\n            if (!swiper || swiper.destroyed) return;\r\n            swiper.transitionEnd();\r\n          });\r\n        }\r\n      } else {\r\n        swiper.updateProgress(newPosition);\r\n      }\r\n\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    } else if (params.freeModeSticky) {\r\n      swiper.slideToClosest();\r\n      return;\r\n    }\r\n\r\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\r\n      swiper.updateProgress();\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Find current slide\r\n  let stopIndex = 0;\r\n  let groupSize = swiper.slidesSizesGrid[0];\r\n  for (let i = 0; i < slidesGrid.length; i += (i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup)) {\r\n    const increment = (i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\r\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\r\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\r\n        stopIndex = i;\r\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\r\n      }\r\n    } else if (currentPos >= slidesGrid[i]) {\r\n      stopIndex = i;\r\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n    }\r\n  }\r\n\r\n  // Find current slide size\r\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n  const increment = (stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup);\r\n\r\n  if (timeDiff > params.longSwipesMs) {\r\n    // Long touches\r\n    if (!params.longSwipes) {\r\n      swiper.slideTo(swiper.activeIndex);\r\n      return;\r\n    }\r\n    if (swiper.swipeDirection === 'next') {\r\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment);\r\n      else swiper.slideTo(stopIndex);\r\n    }\r\n    if (swiper.swipeDirection === 'prev') {\r\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + increment);\r\n      else swiper.slideTo(stopIndex);\r\n    }\r\n  } else {\r\n    // Short swipes\r\n    if (!params.shortSwipes) {\r\n      swiper.slideTo(swiper.activeIndex);\r\n      return;\r\n    }\r\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\r\n    if (!isNavButtonTarget) {\r\n      if (swiper.swipeDirection === 'next') {\r\n        swiper.slideTo(stopIndex + increment);\r\n      }\r\n      if (swiper.swipeDirection === 'prev') {\r\n        swiper.slideTo(stopIndex);\r\n      }\r\n    } else if (e.target === swiper.navigation.nextEl) {\r\n      swiper.slideTo(stopIndex + increment);\r\n    } else {\r\n      swiper.slideTo(stopIndex);\r\n    }\r\n  }\r\n}\r\n\r\nfunction onResize () {\r\n  const swiper = this;\r\n\r\n  const { params, el } = swiper;\r\n\r\n  if (el && el.offsetWidth === 0) return;\r\n\r\n  // Breakpoints\r\n  if (params.breakpoints) {\r\n    swiper.setBreakpoint();\r\n  }\r\n\r\n  // Save locks\r\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\r\n\r\n  // Disable locks on resize\r\n  swiper.allowSlideNext = true;\r\n  swiper.allowSlidePrev = true;\r\n\r\n  swiper.updateSize();\r\n  swiper.updateSlides();\r\n\r\n  swiper.updateSlidesClasses();\r\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n  } else {\r\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n  }\r\n\r\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n    swiper.autoplay.run();\r\n  }\r\n  // Return locks after resize\r\n  swiper.allowSlidePrev = allowSlidePrev;\r\n  swiper.allowSlideNext = allowSlideNext;\r\n\r\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n    swiper.checkOverflow();\r\n  }\r\n}\r\n\r\nfunction onClick (e) {\r\n  const swiper = this;\r\n  if (!swiper.allowClick) {\r\n    if (swiper.params.preventClicks) e.preventDefault();\r\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n      e.stopPropagation();\r\n      e.stopImmediatePropagation();\r\n    }\r\n  }\r\n}\r\n\r\nfunction onScroll () {\r\n  const swiper = this;\r\n  const { wrapperEl, rtlTranslate } = swiper;\r\n  swiper.previousTranslate = swiper.translate;\r\n  if (swiper.isHorizontal()) {\r\n    if (rtlTranslate) {\r\n      swiper.translate = ((wrapperEl.scrollWidth - wrapperEl.offsetWidth) - wrapperEl.scrollLeft);\r\n    } else {\r\n      swiper.translate = -wrapperEl.scrollLeft;\r\n    }\r\n  } else {\r\n    swiper.translate = -wrapperEl.scrollTop;\r\n  }\r\n  // eslint-disable-next-line\r\n  if (swiper.translate === -0) swiper.translate = 0;\r\n\r\n  swiper.updateActiveIndex();\r\n  swiper.updateSlidesClasses();\r\n\r\n  let newProgress;\r\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n  if (translatesDiff === 0) {\r\n    newProgress = 0;\r\n  } else {\r\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\r\n  }\r\n  if (newProgress !== swiper.progress) {\r\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\r\n  }\r\n\r\n  swiper.emit('setTranslate', swiper.translate, false);\r\n}\r\n\r\nlet dummyEventAttached = false;\r\nfunction dummyEventListener() {}\r\n\r\nfunction attachEvents() {\r\n  const swiper = this;\r\n  const {\r\n    params, touchEvents, el, wrapperEl,\r\n  } = swiper;\r\n\r\n  swiper.onTouchStart = onTouchStart.bind(swiper);\r\n  swiper.onTouchMove = onTouchMove.bind(swiper);\r\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n  if (params.cssMode) {\r\n    swiper.onScroll = onScroll.bind(swiper);\r\n  }\r\n\r\n  swiper.onClick = onClick.bind(swiper);\r\n\r\n  const capture = !!params.nested;\r\n\r\n  // Touch Events\r\n  if (!Support.touch && Support.pointerEvents) {\r\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n    doc.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n    doc.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n  } else {\r\n    if (Support.touch) {\r\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\r\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n      if (touchEvents.cancel) {\r\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\r\n      }\r\n      if (!dummyEventAttached) {\r\n        doc.addEventListener('touchstart', dummyEventListener);\r\n        dummyEventAttached = true;\r\n      }\r\n    }\r\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\r\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\r\n      doc.addEventListener('mousemove', swiper.onTouchMove, capture);\r\n      doc.addEventListener('mouseup', swiper.onTouchEnd, false);\r\n    }\r\n  }\r\n  // Prevent Links Clicks\r\n  if (params.preventClicks || params.preventClicksPropagation) {\r\n    el.addEventListener('click', swiper.onClick, true);\r\n  }\r\n  if (params.cssMode) {\r\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\r\n  }\r\n\r\n  // Resize handler\r\n  if (params.updateOnWindowResize) {\r\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\r\n  } else {\r\n    swiper.on('observerUpdate', onResize, true);\r\n  }\r\n}\r\n\r\nfunction detachEvents() {\r\n  const swiper = this;\r\n\r\n  const {\r\n    params, touchEvents, el, wrapperEl,\r\n  } = swiper;\r\n\r\n  const capture = !!params.nested;\r\n\r\n  // Touch Events\r\n  if (!Support.touch && Support.pointerEvents) {\r\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n    doc.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n    doc.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n  } else {\r\n    if (Support.touch) {\r\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n      if (touchEvents.cancel) {\r\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\r\n      }\r\n    }\r\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\r\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\r\n      doc.removeEventListener('mousemove', swiper.onTouchMove, capture);\r\n      doc.removeEventListener('mouseup', swiper.onTouchEnd, false);\r\n    }\r\n  }\r\n  // Prevent Links Clicks\r\n  if (params.preventClicks || params.preventClicksPropagation) {\r\n    el.removeEventListener('click', swiper.onClick, true);\r\n  }\r\n\r\n  if (params.cssMode) {\r\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\r\n  }\r\n\r\n  // Resize handler\r\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\r\n}\r\n\r\nvar events = {\r\n  attachEvents,\r\n  detachEvents,\r\n};\r\n\r\nfunction setBreakpoint () {\r\n  const swiper = this;\r\n  const {\r\n    activeIndex, initialized, loopedSlides = 0, params, $el,\r\n  } = swiper;\r\n  const breakpoints = params.breakpoints;\r\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\r\n\r\n  // Get breakpoint for window width and update parameters\r\n  const breakpoint = swiper.getBreakpoint(breakpoints);\r\n\r\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\r\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n    if (breakpointOnlyParams) {\r\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerGroupSkip', 'slidesPerColumn'].forEach((param) => {\r\n        const paramValue = breakpointOnlyParams[param];\r\n        if (typeof paramValue === 'undefined') return;\r\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\r\n          breakpointOnlyParams[param] = 'auto';\r\n        } else if (param === 'slidesPerView') {\r\n          breakpointOnlyParams[param] = parseFloat(paramValue);\r\n        } else {\r\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\r\n        }\r\n      });\r\n    }\r\n\r\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n    const wasMultiRow = params.slidesPerColumn > 1;\r\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\r\n    if (wasMultiRow && !isMultiRow) {\r\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\r\n    } else if (!wasMultiRow && isMultiRow) {\r\n      $el.addClass(`${params.containerModifierClass}multirow`);\r\n      if (breakpointParams.slidesPerColumnFill === 'column') {\r\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\r\n      }\r\n    }\r\n\r\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n\r\n    if (directionChanged && initialized) {\r\n      swiper.changeDirection();\r\n    }\r\n\r\n    Utils.extend(swiper.params, breakpointParams);\r\n\r\n    Utils.extend(swiper, {\r\n      allowTouchMove: swiper.params.allowTouchMove,\r\n      allowSlideNext: swiper.params.allowSlideNext,\r\n      allowSlidePrev: swiper.params.allowSlidePrev,\r\n    });\r\n\r\n    swiper.currentBreakpoint = breakpoint;\r\n\r\n    if (needsReLoop && initialized) {\r\n      swiper.loopDestroy();\r\n      swiper.loopCreate();\r\n      swiper.updateSlides();\r\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\r\n    }\r\n\r\n    swiper.emit('breakpoint', breakpointParams);\r\n  }\r\n}\r\n\r\nfunction getBreakpoint (breakpoints) {\r\n  // Get breakpoint for window width\r\n  if (!breakpoints) return undefined;\r\n  let breakpoint = false;\r\n\r\n  const points = Object.keys(breakpoints).map((point) => {\r\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\r\n      const minRatio = parseFloat(point.substr(1));\r\n      const value = win.innerHeight * minRatio;\r\n      return { value, point };\r\n    }\r\n    return { value: point, point };\r\n  });\r\n\r\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\r\n  for (let i = 0; i < points.length; i += 1) {\r\n    const { point, value } = points[i];\r\n    if (value <= win.innerWidth) {\r\n      breakpoint = point;\r\n    }\r\n  }\r\n  return breakpoint || 'max';\r\n}\r\n\r\nvar breakpoints = { setBreakpoint, getBreakpoint };\r\n\r\nfunction addClasses () {\r\n  const swiper = this;\r\n  const {\r\n    classNames, params, rtl, $el,\r\n  } = swiper;\r\n  const suffixes = [];\r\n\r\n  suffixes.push('initialized');\r\n  suffixes.push(params.direction);\r\n\r\n  if (params.freeMode) {\r\n    suffixes.push('free-mode');\r\n  }\r\n  if (params.autoHeight) {\r\n    suffixes.push('autoheight');\r\n  }\r\n  if (rtl) {\r\n    suffixes.push('rtl');\r\n  }\r\n  if (params.slidesPerColumn > 1) {\r\n    suffixes.push('multirow');\r\n    if (params.slidesPerColumnFill === 'column') {\r\n      suffixes.push('multirow-column');\r\n    }\r\n  }\r\n  if (Device.android) {\r\n    suffixes.push('android');\r\n  }\r\n  if (Device.ios) {\r\n    suffixes.push('ios');\r\n  }\r\n\r\n  if (params.cssMode) {\r\n    suffixes.push('css-mode');\r\n  }\r\n\r\n  suffixes.forEach((suffix) => {\r\n    classNames.push(params.containerModifierClass + suffix);\r\n  });\r\n\r\n  $el.addClass(classNames.join(' '));\r\n}\r\n\r\nfunction removeClasses () {\r\n  const swiper = this;\r\n  const { $el, classNames } = swiper;\r\n\r\n  $el.removeClass(classNames.join(' '));\r\n}\r\n\r\nvar classes = { addClasses, removeClasses };\r\n\r\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\r\n  let image;\r\n  function onReady() {\r\n    if (callback) callback();\r\n  }\r\n  if (!imageEl.complete || !checkForComplete) {\r\n    if (src) {\r\n      image = new win.Image();\r\n      image.onload = onReady;\r\n      image.onerror = onReady;\r\n      if (sizes) {\r\n        image.sizes = sizes;\r\n      }\r\n      if (srcset) {\r\n        image.srcset = srcset;\r\n      }\r\n      if (src) {\r\n        image.src = src;\r\n      }\r\n    } else {\r\n      onReady();\r\n    }\r\n  } else {\r\n    // image already loaded...\r\n    onReady();\r\n  }\r\n}\r\n\r\nfunction preloadImages () {\r\n  const swiper = this;\r\n  swiper.imagesToLoad = swiper.$el.find('img');\r\n  function onReady() {\r\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\r\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\r\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\r\n      if (swiper.params.updateOnImagesReady) swiper.update();\r\n      swiper.emit('imagesReady');\r\n    }\r\n  }\r\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\r\n    const imageEl = swiper.imagesToLoad[i];\r\n    swiper.loadImage(\r\n      imageEl,\r\n      imageEl.currentSrc || imageEl.getAttribute('src'),\r\n      imageEl.srcset || imageEl.getAttribute('srcset'),\r\n      imageEl.sizes || imageEl.getAttribute('sizes'),\r\n      true,\r\n      onReady\r\n    );\r\n  }\r\n}\r\n\r\nvar images = {\r\n  loadImage,\r\n  preloadImages,\r\n};\r\n\r\nfunction checkOverflow() {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n  const wasLocked = swiper.isLocked;\r\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\r\n\r\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\r\n    swiper.isLocked = lastSlidePosition <= swiper.size;\r\n  } else {\r\n    swiper.isLocked = swiper.snapGrid.length === 1;\r\n  }\r\n\r\n  swiper.allowSlideNext = !swiper.isLocked;\r\n  swiper.allowSlidePrev = !swiper.isLocked;\r\n\r\n  // events\r\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n\r\n  if (wasLocked && wasLocked !== swiper.isLocked) {\r\n    swiper.isEnd = false;\r\n    swiper.navigation.update();\r\n  }\r\n}\r\n\r\nvar checkOverflow$1 = { checkOverflow };\r\n\r\nvar defaults = {\r\n  init: true,\r\n  direction: 'horizontal',\r\n  touchEventsTarget: 'container',\r\n  initialSlide: 0,\r\n  speed: 300,\r\n  cssMode: false,\r\n  updateOnWindowResize: true,\r\n  //\r\n  preventInteractionOnTransition: false,\r\n\r\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\r\n  edgeSwipeDetection: false,\r\n  edgeSwipeThreshold: 20,\r\n\r\n  // Free mode\r\n  freeMode: false,\r\n  freeModeMomentum: true,\r\n  freeModeMomentumRatio: 1,\r\n  freeModeMomentumBounce: true,\r\n  freeModeMomentumBounceRatio: 1,\r\n  freeModeMomentumVelocityRatio: 1,\r\n  freeModeSticky: false,\r\n  freeModeMinimumVelocity: 0.02,\r\n\r\n  // Autoheight\r\n  autoHeight: false,\r\n\r\n  // Set wrapper width\r\n  setWrapperSize: false,\r\n\r\n  // Virtual Translate\r\n  virtualTranslate: false,\r\n\r\n  // Effects\r\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n\r\n  // Breakpoints\r\n  breakpoints: undefined,\r\n\r\n  // Slides grid\r\n  spaceBetween: 0,\r\n  slidesPerView: 1,\r\n  slidesPerColumn: 1,\r\n  slidesPerColumnFill: 'column',\r\n  slidesPerGroup: 1,\r\n  slidesPerGroupSkip: 0,\r\n  centeredSlides: false,\r\n  centeredSlidesBounds: false,\r\n  slidesOffsetBefore: 0, // in px\r\n  slidesOffsetAfter: 0, // in px\r\n  normalizeSlideIndex: true,\r\n  centerInsufficientSlides: false,\r\n\r\n  // Disable swiper and hide navigation when container not overflow\r\n  watchOverflow: false,\r\n\r\n  // Round length\r\n  roundLengths: false,\r\n\r\n  // Touches\r\n  touchRatio: 1,\r\n  touchAngle: 45,\r\n  simulateTouch: true,\r\n  shortSwipes: true,\r\n  longSwipes: true,\r\n  longSwipesRatio: 0.5,\r\n  longSwipesMs: 300,\r\n  followFinger: true,\r\n  allowTouchMove: true,\r\n  threshold: 0,\r\n  touchMoveStopPropagation: false,\r\n  touchStartPreventDefault: true,\r\n  touchStartForcePreventDefault: false,\r\n  touchReleaseOnEdges: false,\r\n\r\n  // Unique Navigation Elements\r\n  uniqueNavElements: true,\r\n\r\n  // Resistance\r\n  resistance: true,\r\n  resistanceRatio: 0.85,\r\n\r\n  // Progress\r\n  watchSlidesProgress: false,\r\n  watchSlidesVisibility: false,\r\n\r\n  // Cursor\r\n  grabCursor: false,\r\n\r\n  // Clicks\r\n  preventClicks: true,\r\n  preventClicksPropagation: true,\r\n  slideToClickedSlide: false,\r\n\r\n  // Images\r\n  preloadImages: true,\r\n  updateOnImagesReady: true,\r\n\r\n  // loop\r\n  loop: false,\r\n  loopAdditionalSlides: 0,\r\n  loopedSlides: null,\r\n  loopFillGroupWithBlank: false,\r\n\r\n  // Swiping/no swiping\r\n  allowSlidePrev: true,\r\n  allowSlideNext: true,\r\n  swipeHandler: null, // '.swipe-handler',\r\n  noSwiping: true,\r\n  noSwipingClass: 'swiper-no-swiping',\r\n  noSwipingSelector: null,\r\n\r\n  // Passive Listeners\r\n  passiveListeners: true,\r\n\r\n  // NS\r\n  containerModifierClass: 'swiper-container-', // NEW\r\n  slideClass: 'swiper-slide',\r\n  slideBlankClass: 'swiper-slide-invisible-blank',\r\n  slideActiveClass: 'swiper-slide-active',\r\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\r\n  slideVisibleClass: 'swiper-slide-visible',\r\n  slideDuplicateClass: 'swiper-slide-duplicate',\r\n  slideNextClass: 'swiper-slide-next',\r\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\r\n  slidePrevClass: 'swiper-slide-prev',\r\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\r\n  wrapperClass: 'swiper-wrapper',\r\n\r\n  // Callbacks\r\n  runCallbacksOnInit: true,\r\n};\r\n\r\n/* eslint no-param-reassign: \"off\" */\r\n\r\nconst prototypes = {\r\n  update,\r\n  translate,\r\n  transition: transition$1,\r\n  slide,\r\n  loop,\r\n  grabCursor,\r\n  manipulation,\r\n  events,\r\n  breakpoints,\r\n  checkOverflow: checkOverflow$1,\r\n  classes,\r\n  images,\r\n};\r\n\r\nconst extendedDefaults = {};\r\n\r\nclass Swiper extends SwiperClass {\r\n  constructor(...args) {\r\n    let el;\r\n    let params;\r\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\r\n      params = args[0];\r\n    } else {\r\n      [el, params] = args;\r\n    }\r\n    if (!params) params = {};\r\n\r\n    params = Utils.extend({}, params);\r\n    if (el && !params.el) params.el = el;\r\n\r\n    super(params);\r\n\r\n    Object.keys(prototypes).forEach((prototypeGroup) => {\r\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\r\n        if (!Swiper.prototype[protoMethod]) {\r\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n        }\r\n      });\r\n    });\r\n\r\n    // Swiper Instance\r\n    const swiper = this;\r\n    if (typeof swiper.modules === 'undefined') {\r\n      swiper.modules = {};\r\n    }\r\n    Object.keys(swiper.modules).forEach((moduleName) => {\r\n      const module = swiper.modules[moduleName];\r\n      if (module.params) {\r\n        const moduleParamName = Object.keys(module.params)[0];\r\n        const moduleParams = module.params[moduleParamName];\r\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\r\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\r\n        if (params[moduleParamName] === true) {\r\n          params[moduleParamName] = { enabled: true };\r\n        }\r\n        if (\r\n          typeof params[moduleParamName] === 'object'\r\n          && !('enabled' in params[moduleParamName])\r\n        ) {\r\n          params[moduleParamName].enabled = true;\r\n        }\r\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\r\n      }\r\n    });\r\n\r\n    // Extend defaults with modules params\r\n    const swiperParams = Utils.extend({}, defaults);\r\n    swiper.useModulesParams(swiperParams);\r\n\r\n    // Extend defaults with passed params\r\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\r\n    swiper.originalParams = Utils.extend({}, swiper.params);\r\n    swiper.passedParams = Utils.extend({}, params);\r\n\r\n    // Save Dom lib\r\n    swiper.$ = $;\r\n\r\n    // Find el\r\n    const $el = $(swiper.params.el);\r\n    el = $el[0];\r\n\r\n    if (!el) {\r\n      return undefined;\r\n    }\r\n\r\n    if ($el.length > 1) {\r\n      const swipers = [];\r\n      $el.each((index, containerEl) => {\r\n        const newParams = Utils.extend({}, params, { el: containerEl });\r\n        swipers.push(new Swiper(newParams));\r\n      });\r\n      return swipers;\r\n    }\r\n\r\n    el.swiper = swiper;\r\n    $el.data('swiper', swiper);\r\n\r\n    // Find Wrapper\r\n    let $wrapperEl;\r\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\r\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\r\n      // Children needs to return slot items\r\n      $wrapperEl.children = (options) => $el.children(options);\r\n    } else {\r\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\r\n    }\r\n    // Extend Swiper\r\n    Utils.extend(swiper, {\r\n      $el,\r\n      el,\r\n      $wrapperEl,\r\n      wrapperEl: $wrapperEl[0],\r\n\r\n      // Classes\r\n      classNames: [],\r\n\r\n      // Slides\r\n      slides: $(),\r\n      slidesGrid: [],\r\n      snapGrid: [],\r\n      slidesSizesGrid: [],\r\n\r\n      // isDirection\r\n      isHorizontal() {\r\n        return swiper.params.direction === 'horizontal';\r\n      },\r\n      isVertical() {\r\n        return swiper.params.direction === 'vertical';\r\n      },\r\n      // RTL\r\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\r\n\r\n      // Indexes\r\n      activeIndex: 0,\r\n      realIndex: 0,\r\n\r\n      //\r\n      isBeginning: true,\r\n      isEnd: false,\r\n\r\n      // Props\r\n      translate: 0,\r\n      previousTranslate: 0,\r\n      progress: 0,\r\n      velocity: 0,\r\n      animating: false,\r\n\r\n      // Locks\r\n      allowSlideNext: swiper.params.allowSlideNext,\r\n      allowSlidePrev: swiper.params.allowSlidePrev,\r\n\r\n      // Touch Events\r\n      touchEvents: (function touchEvents() {\r\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\r\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\r\n        if (Support.pointerEvents) {\r\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\r\n        }\r\n        swiper.touchEventsTouch = {\r\n          start: touch[0],\r\n          move: touch[1],\r\n          end: touch[2],\r\n          cancel: touch[3],\r\n        };\r\n        swiper.touchEventsDesktop = {\r\n          start: desktop[0],\r\n          move: desktop[1],\r\n          end: desktop[2],\r\n        };\r\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\r\n      }()),\r\n      touchEventsData: {\r\n        isTouched: undefined,\r\n        isMoved: undefined,\r\n        allowTouchCallbacks: undefined,\r\n        touchStartTime: undefined,\r\n        isScrolling: undefined,\r\n        currentTranslate: undefined,\r\n        startTranslate: undefined,\r\n        allowThresholdMove: undefined,\r\n        // Form elements to match\r\n        formElements: 'input, select, option, textarea, button, video, label',\r\n        // Last click time\r\n        lastClickTime: Utils.now(),\r\n        clickTimeout: undefined,\r\n        // Velocities\r\n        velocities: [],\r\n        allowMomentumBounce: undefined,\r\n        isTouchEvent: undefined,\r\n        startMoving: undefined,\r\n      },\r\n\r\n      // Clicks\r\n      allowClick: true,\r\n\r\n      // Touches\r\n      allowTouchMove: swiper.params.allowTouchMove,\r\n\r\n      touches: {\r\n        startX: 0,\r\n        startY: 0,\r\n        currentX: 0,\r\n        currentY: 0,\r\n        diff: 0,\r\n      },\r\n\r\n      // Images\r\n      imagesToLoad: [],\r\n      imagesLoaded: 0,\r\n\r\n    });\r\n\r\n    // Install Modules\r\n    swiper.useModules();\r\n\r\n    // Init\r\n    if (swiper.params.init) {\r\n      swiper.init();\r\n    }\r\n\r\n    // Return app instance\r\n    return swiper;\r\n  }\r\n\r\n  slidesPerViewDynamic() {\r\n    const swiper = this;\r\n    const {\r\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\r\n    } = swiper;\r\n    let spv = 1;\r\n    if (params.centeredSlides) {\r\n      let slideSize = slides[activeIndex].swiperSlideSize;\r\n      let breakLoop;\r\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n        if (slides[i] && !breakLoop) {\r\n          slideSize += slides[i].swiperSlideSize;\r\n          spv += 1;\r\n          if (slideSize > swiperSize) breakLoop = true;\r\n        }\r\n      }\r\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n        if (slides[i] && !breakLoop) {\r\n          slideSize += slides[i].swiperSlideSize;\r\n          spv += 1;\r\n          if (slideSize > swiperSize) breakLoop = true;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\r\n          spv += 1;\r\n        }\r\n      }\r\n    }\r\n    return spv;\r\n  }\r\n\r\n  update() {\r\n    const swiper = this;\r\n    if (!swiper || swiper.destroyed) return;\r\n    const { snapGrid, params } = swiper;\r\n    // Breakpoints\r\n    if (params.breakpoints) {\r\n      swiper.setBreakpoint();\r\n    }\r\n    swiper.updateSize();\r\n    swiper.updateSlides();\r\n    swiper.updateProgress();\r\n    swiper.updateSlidesClasses();\r\n\r\n    function setTranslate() {\r\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n      swiper.setTranslate(newTranslate);\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n    let translated;\r\n    if (swiper.params.freeMode) {\r\n      setTranslate();\r\n      if (swiper.params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n      }\r\n    } else {\r\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n      } else {\r\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n      }\r\n      if (!translated) {\r\n        setTranslate();\r\n      }\r\n    }\r\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n      swiper.checkOverflow();\r\n    }\r\n    swiper.emit('update');\r\n  }\r\n\r\n  changeDirection(newDirection, needUpdate = true) {\r\n    const swiper = this;\r\n    const currentDirection = swiper.params.direction;\r\n    if (!newDirection) {\r\n      // eslint-disable-next-line\r\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n    }\r\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\r\n      return swiper;\r\n    }\r\n\r\n    swiper.$el\r\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\r\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\r\n\r\n    swiper.params.direction = newDirection;\r\n\r\n    swiper.slides.each((slideIndex, slideEl) => {\r\n      if (newDirection === 'vertical') {\r\n        slideEl.style.width = '';\r\n      } else {\r\n        slideEl.style.height = '';\r\n      }\r\n    });\r\n\r\n    swiper.emit('changeDirection');\r\n    if (needUpdate) swiper.update();\r\n\r\n    return swiper;\r\n  }\r\n\r\n  init() {\r\n    const swiper = this;\r\n    if (swiper.initialized) return;\r\n\r\n    swiper.emit('beforeInit');\r\n\r\n    // Set breakpoint\r\n    if (swiper.params.breakpoints) {\r\n      swiper.setBreakpoint();\r\n    }\r\n\r\n    // Add Classes\r\n    swiper.addClasses();\r\n\r\n    // Create loop\r\n    if (swiper.params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    // Update size\r\n    swiper.updateSize();\r\n\r\n    // Update slides\r\n    swiper.updateSlides();\r\n\r\n    if (swiper.params.watchOverflow) {\r\n      swiper.checkOverflow();\r\n    }\r\n\r\n    // Set Grab Cursor\r\n    if (swiper.params.grabCursor) {\r\n      swiper.setGrabCursor();\r\n    }\r\n\r\n    if (swiper.params.preloadImages) {\r\n      swiper.preloadImages();\r\n    }\r\n\r\n    // Slide To Initial Slide\r\n    if (swiper.params.loop) {\r\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\r\n    } else {\r\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\r\n    }\r\n\r\n    // Attach events\r\n    swiper.attachEvents();\r\n\r\n    // Init Flag\r\n    swiper.initialized = true;\r\n\r\n    // Emit\r\n    swiper.emit('init');\r\n  }\r\n\r\n  destroy(deleteInstance = true, cleanStyles = true) {\r\n    const swiper = this;\r\n    const {\r\n      params, $el, $wrapperEl, slides,\r\n    } = swiper;\r\n\r\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n      return null;\r\n    }\r\n\r\n    swiper.emit('beforeDestroy');\r\n\r\n    // Init Flag\r\n    swiper.initialized = false;\r\n\r\n    // Detach events\r\n    swiper.detachEvents();\r\n\r\n    // Destroy loop\r\n    if (params.loop) {\r\n      swiper.loopDestroy();\r\n    }\r\n\r\n    // Cleanup styles\r\n    if (cleanStyles) {\r\n      swiper.removeClasses();\r\n      $el.removeAttr('style');\r\n      $wrapperEl.removeAttr('style');\r\n      if (slides && slides.length) {\r\n        slides\r\n          .removeClass([\r\n            params.slideVisibleClass,\r\n            params.slideActiveClass,\r\n            params.slideNextClass,\r\n            params.slidePrevClass,\r\n          ].join(' '))\r\n          .removeAttr('style')\r\n          .removeAttr('data-swiper-slide-index');\r\n      }\r\n    }\r\n\r\n    swiper.emit('destroy');\r\n\r\n    // Detach emitter events\r\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\r\n      swiper.off(eventName);\r\n    });\r\n\r\n    if (deleteInstance !== false) {\r\n      swiper.$el[0].swiper = null;\r\n      swiper.$el.data('swiper', null);\r\n      Utils.deleteProps(swiper);\r\n    }\r\n    swiper.destroyed = true;\r\n\r\n    return null;\r\n  }\r\n\r\n  static extendDefaults(newDefaults) {\r\n    Utils.extend(extendedDefaults, newDefaults);\r\n  }\r\n\r\n  static get extendedDefaults() {\r\n    return extendedDefaults;\r\n  }\r\n\r\n  static get defaults() {\r\n    return defaults;\r\n  }\r\n\r\n  static get Class() {\r\n    return SwiperClass;\r\n  }\r\n\r\n  static get $() {\r\n    return $;\r\n  }\r\n}\r\n\r\nvar Device$1 = {\r\n  name: 'device',\r\n  proto: {\r\n    device: Device,\r\n  },\r\n  static: {\r\n    device: Device,\r\n  },\r\n};\r\n\r\nvar Support$1 = {\r\n  name: 'support',\r\n  proto: {\r\n    support: Support,\r\n  },\r\n  static: {\r\n    support: Support,\r\n  },\r\n};\r\n\r\nconst Browser = (function Browser() {\r\n  function isSafari() {\r\n    const ua = win.navigator.userAgent.toLowerCase();\r\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\r\n  }\r\n  return {\r\n    isEdge: !!win.navigator.userAgent.match(/Edge/g),\r\n    isSafari: isSafari(),\r\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win.navigator.userAgent),\r\n  };\r\n}());\r\n\r\nvar Browser$1 = {\r\n  name: 'browser',\r\n  proto: {\r\n    browser: Browser,\r\n  },\r\n  static: {\r\n    browser: Browser,\r\n  },\r\n};\r\n\r\nvar Resize = {\r\n  name: 'resize',\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      resize: {\r\n        resizeHandler() {\r\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n          swiper.emit('beforeResize');\r\n          swiper.emit('resize');\r\n        },\r\n        orientationChangeHandler() {\r\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n          swiper.emit('orientationchange');\r\n        },\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      // Emit resize\r\n      win.addEventListener('resize', swiper.resize.resizeHandler);\r\n\r\n      // Emit orientationchange\r\n      win.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      win.removeEventListener('resize', swiper.resize.resizeHandler);\r\n      win.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n    },\r\n  },\r\n};\r\n\r\nconst Observer = {\r\n  func: win.MutationObserver || win.WebkitMutationObserver,\r\n  attach(target, options = {}) {\r\n    const swiper = this;\r\n\r\n    const ObserverFunc = Observer.func;\r\n    const observer = new ObserverFunc((mutations) => {\r\n      // The observerUpdate event should only be triggered\r\n      // once despite the number of mutations.  Additional\r\n      // triggers are redundant and are very costly\r\n      if (mutations.length === 1) {\r\n        swiper.emit('observerUpdate', mutations[0]);\r\n        return;\r\n      }\r\n      const observerUpdate = function observerUpdate() {\r\n        swiper.emit('observerUpdate', mutations[0]);\r\n      };\r\n\r\n      if (win.requestAnimationFrame) {\r\n        win.requestAnimationFrame(observerUpdate);\r\n      } else {\r\n        win.setTimeout(observerUpdate, 0);\r\n      }\r\n    });\r\n\r\n    observer.observe(target, {\r\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\r\n    });\r\n\r\n    swiper.observer.observers.push(observer);\r\n  },\r\n  init() {\r\n    const swiper = this;\r\n    if (!Support.observer || !swiper.params.observer) return;\r\n    if (swiper.params.observeParents) {\r\n      const containerParents = swiper.$el.parents();\r\n      for (let i = 0; i < containerParents.length; i += 1) {\r\n        swiper.observer.attach(containerParents[i]);\r\n      }\r\n    }\r\n    // Observe container\r\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\r\n\r\n    // Observe wrapper\r\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\r\n  },\r\n  destroy() {\r\n    const swiper = this;\r\n    swiper.observer.observers.forEach((observer) => {\r\n      observer.disconnect();\r\n    });\r\n    swiper.observer.observers = [];\r\n  },\r\n};\r\n\r\nvar Observer$1 = {\r\n  name: 'observer',\r\n  params: {\r\n    observer: false,\r\n    observeParents: false,\r\n    observeSlideChildren: false,\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      observer: {\r\n        init: Observer.init.bind(swiper),\r\n        attach: Observer.attach.bind(swiper),\r\n        destroy: Observer.destroy.bind(swiper),\r\n        observers: [],\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      swiper.observer.init();\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.observer.destroy();\r\n    },\r\n  },\r\n};\r\n\r\nfunction isEventSupported() {\r\n  const eventName = 'onwheel';\r\n  let isSupported = eventName in doc;\r\n\r\n  if (!isSupported) {\r\n    const element = doc.createElement('div');\r\n    element.setAttribute(eventName, 'return;');\r\n    isSupported = typeof element[eventName] === 'function';\r\n  }\r\n\r\n  if (!isSupported\r\n    && doc.implementation\r\n    && doc.implementation.hasFeature\r\n    // always returns true in newer browsers as per the standard.\r\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\r\n    && doc.implementation.hasFeature('', '') !== true\r\n  ) {\r\n    // This is the only way to test support for the `wheel` event in IE9+.\r\n    isSupported = doc.implementation.hasFeature('Events.wheel', '3.0');\r\n  }\r\n\r\n  return isSupported;\r\n}\r\nconst Mousewheel = {\r\n  lastScrollTime: Utils.now(),\r\n  lastEventBeforeSnap: undefined,\r\n  recentWheelEvents: [],\r\n  event() {\r\n    if (win.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\r\n    return isEventSupported() ? 'wheel' : 'mousewheel';\r\n  },\r\n  normalize(e) {\r\n    // Reasonable defaults\r\n    const PIXEL_STEP = 10;\r\n    const LINE_HEIGHT = 40;\r\n    const PAGE_HEIGHT = 800;\r\n\r\n    let sX = 0;\r\n    let sY = 0; // spinX, spinY\r\n    let pX = 0;\r\n    let pY = 0; // pixelX, pixelY\r\n\r\n    // Legacy\r\n    if ('detail' in e) {\r\n      sY = e.detail;\r\n    }\r\n    if ('wheelDelta' in e) {\r\n      sY = -e.wheelDelta / 120;\r\n    }\r\n    if ('wheelDeltaY' in e) {\r\n      sY = -e.wheelDeltaY / 120;\r\n    }\r\n    if ('wheelDeltaX' in e) {\r\n      sX = -e.wheelDeltaX / 120;\r\n    }\r\n\r\n    // side scrolling on FF with DOMMouseScroll\r\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n      sX = sY;\r\n      sY = 0;\r\n    }\r\n\r\n    pX = sX * PIXEL_STEP;\r\n    pY = sY * PIXEL_STEP;\r\n\r\n    if ('deltaY' in e) {\r\n      pY = e.deltaY;\r\n    }\r\n    if ('deltaX' in e) {\r\n      pX = e.deltaX;\r\n    }\r\n\r\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\r\n      pX = pY;\r\n      pY = 0;\r\n    }\r\n\r\n    if ((pX || pY) && e.deltaMode) {\r\n      if (e.deltaMode === 1) { // delta in LINE units\r\n        pX *= LINE_HEIGHT;\r\n        pY *= LINE_HEIGHT;\r\n      } else { // delta in PAGE units\r\n        pX *= PAGE_HEIGHT;\r\n        pY *= PAGE_HEIGHT;\r\n      }\r\n    }\r\n\r\n    // Fall-back if spin cannot be determined\r\n    if (pX && !sX) {\r\n      sX = (pX < 1) ? -1 : 1;\r\n    }\r\n    if (pY && !sY) {\r\n      sY = (pY < 1) ? -1 : 1;\r\n    }\r\n\r\n    return {\r\n      spinX: sX,\r\n      spinY: sY,\r\n      pixelX: pX,\r\n      pixelY: pY,\r\n    };\r\n  },\r\n  handleMouseEnter() {\r\n    const swiper = this;\r\n    swiper.mouseEntered = true;\r\n  },\r\n  handleMouseLeave() {\r\n    const swiper = this;\r\n    swiper.mouseEntered = false;\r\n  },\r\n  handle(event) {\r\n    let e = event;\r\n    const swiper = this;\r\n    const params = swiper.params.mousewheel;\r\n\r\n    if (swiper.params.cssMode) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    let target = swiper.$el;\r\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n      target = $(swiper.params.mousewheel.eventsTarged);\r\n    }\r\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\r\n\r\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n    let delta = 0;\r\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n\r\n    const data = Mousewheel.normalize(e);\r\n\r\n    if (params.forceToAxis) {\r\n      if (swiper.isHorizontal()) {\r\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\r\n        else return true;\r\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\r\n      else return true;\r\n    } else {\r\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n    }\r\n\r\n    if (delta === 0) return true;\r\n\r\n    if (params.invert) delta = -delta;\r\n\r\n    if (!swiper.params.freeMode) {\r\n      // Register the new event in a variable which stores the relevant data\r\n      const newEvent = {\r\n        time: Utils.now(),\r\n        delta: Math.abs(delta),\r\n        direction: Math.sign(delta),\r\n        raw: event,\r\n      };\r\n\r\n      // Keep the most recent events\r\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\r\n      if (recentWheelEvents.length >= 2) {\r\n        recentWheelEvents.shift(); // only store the last N events\r\n      }\r\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n      recentWheelEvents.push(newEvent);\r\n\r\n      // If there is at least one previous recorded event:\r\n      //   If direction has changed or\r\n      //   if the scroll is quicker than the previous one:\r\n      //     Animate the slider.\r\n      // Else (this is the first time the wheel is moved):\r\n      //     Animate the slider.\r\n      if (prevEvent) {\r\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\r\n          swiper.mousewheel.animateSlider(newEvent);\r\n        }\r\n      } else {\r\n        swiper.mousewheel.animateSlider(newEvent);\r\n      }\r\n\r\n      // If it's time to release the scroll:\r\n      //   Return now so you don't hit the preventDefault.\r\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\r\n        return true;\r\n      }\r\n    } else {\r\n      // Freemode or scrollContainer:\r\n\r\n      // If we recently snapped after a momentum scroll, then ignore wheel events\r\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\r\n      // or if it's a new scroll (larger delta or inverse sign as last event before\r\n      // an end-of-momentum snap).\r\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\r\n      const { lastEventBeforeSnap } = swiper.mousewheel;\r\n      const ignoreWheelEvents = lastEventBeforeSnap\r\n        && newEvent.time < lastEventBeforeSnap.time + 500\r\n        && newEvent.delta <= lastEventBeforeSnap.delta\r\n        && newEvent.direction === lastEventBeforeSnap.direction;\r\n      if (!ignoreWheelEvents) {\r\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\r\n\r\n        if (swiper.params.loop) {\r\n          swiper.loopFix();\r\n        }\r\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\r\n        const wasBeginning = swiper.isBeginning;\r\n        const wasEnd = swiper.isEnd;\r\n\r\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n\r\n        swiper.setTransition(0);\r\n        swiper.setTranslate(position);\r\n        swiper.updateProgress();\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n\r\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\r\n          swiper.updateSlidesClasses();\r\n        }\r\n\r\n        if (swiper.params.freeModeSticky) {\r\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\r\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\r\n          // 1. do all N events have decreasing or same (absolute value) delta?\r\n          // 2. did all N events arrive in the last M (M=500?) msecs?\r\n          // 3. does the earliest event have an (absolute value) delta that's\r\n          //    at least P (P=1?) larger than the most recent event's delta?\r\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\r\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\r\n          // Snap immediately and ignore remaining wheel events in this scroll.\r\n          // See comment above for \"remaining wheel events in this scroll\" determination.\r\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\r\n          clearTimeout(swiper.mousewheel.timeout);\r\n          swiper.mousewheel.timeout = undefined;\r\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\r\n          if (recentWheelEvents.length >= 15) {\r\n            recentWheelEvents.shift(); // only store the last N events\r\n          }\r\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n          const firstEvent = recentWheelEvents[0];\r\n          recentWheelEvents.push(newEvent);\r\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\r\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\r\n            recentWheelEvents.splice(0);\r\n          } else if (recentWheelEvents.length >= 15\r\n              && newEvent.time - firstEvent.time < 500\r\n              && firstEvent.delta - newEvent.delta >= 1\r\n              && newEvent.delta <= 6\r\n          ) {\r\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\r\n            // to wait for more events. Snap ASAP on the next tick.\r\n            // Also, because there's some remaining momentum we'll bias the snap in the\r\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\r\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\r\n            // if it's already scrolled more than 20% in the current direction, keep going.\r\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\r\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\r\n            recentWheelEvents.splice(0);\r\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\r\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n            }, 0); // no delay; move on next tick\r\n          }\r\n          if (!swiper.mousewheel.timeout) {\r\n            // if we get here, then we haven't detected the end of a momentum scroll, so\r\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\r\n            // for 500ms.\r\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\r\n              const snapToThreshold = 0.5;\r\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\r\n              recentWheelEvents.splice(0);\r\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n            }, 500);\r\n          }\r\n        }\r\n\r\n        // Emit event\r\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\r\n\r\n        // Stop autoplay\r\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\r\n        // Return page scroll on edge positions\r\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n      }\r\n    }\r\n\r\n    if (e.preventDefault) e.preventDefault();\r\n    else e.returnValue = false;\r\n    return false;\r\n  },\r\n  animateSlider(newEvent) {\r\n    const swiper = this;\r\n    // If the movement is NOT big enough and\r\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\r\n    //   Don't go any further (avoid insignificant scroll movement).\r\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\r\n      // Return false as a default\r\n      return true;\r\n    }\r\n    // If user is scrolling towards the end:\r\n    //   If the slider hasn't hit the latest slide or\r\n    //   if the slider is a loop and\r\n    //   if the slider isn't moving right now:\r\n    //     Go to next slide and\r\n    //     emit a scroll event.\r\n    // Else (the user is scrolling towards the beginning) and\r\n    // if the slider hasn't hit the first slide or\r\n    // if the slider is a loop and\r\n    // if the slider isn't moving right now:\r\n    //   Go to prev slide and\r\n    //   emit a scroll event.\r\n    if (newEvent.direction < 0) {\r\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n        swiper.slideNext();\r\n        swiper.emit('scroll', newEvent.raw);\r\n      }\r\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n      swiper.slidePrev();\r\n      swiper.emit('scroll', newEvent.raw);\r\n    }\r\n    // If you got here is because an animation has been triggered so store the current time\r\n    swiper.mousewheel.lastScrollTime = (new win.Date()).getTime();\r\n    // Return false as a default\r\n    return false;\r\n  },\r\n  releaseScroll(newEvent) {\r\n    const swiper = this;\r\n    const params = swiper.params.mousewheel;\r\n    if (newEvent.direction < 0) {\r\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\r\n        // Return true to animate scroll on edges\r\n        return true;\r\n      }\r\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\r\n      // Return true to animate scroll on edges\r\n      return true;\r\n    }\r\n    return false;\r\n  },\r\n  enable() {\r\n    const swiper = this;\r\n    const event = Mousewheel.event();\r\n    if (swiper.params.cssMode) {\r\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\r\n      return true;\r\n    }\r\n    if (!event) return false;\r\n    if (swiper.mousewheel.enabled) return false;\r\n    let target = swiper.$el;\r\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n      target = $(swiper.params.mousewheel.eventsTarged);\r\n    }\r\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\r\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\r\n    target.on(event, swiper.mousewheel.handle);\r\n    swiper.mousewheel.enabled = true;\r\n    return true;\r\n  },\r\n  disable() {\r\n    const swiper = this;\r\n    const event = Mousewheel.event();\r\n    if (swiper.params.cssMode) {\r\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\r\n      return true;\r\n    }\r\n    if (!event) return false;\r\n    if (!swiper.mousewheel.enabled) return false;\r\n    let target = swiper.$el;\r\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n      target = $(swiper.params.mousewheel.eventsTarged);\r\n    }\r\n    target.off(event, swiper.mousewheel.handle);\r\n    swiper.mousewheel.enabled = false;\r\n    return true;\r\n  },\r\n};\r\n\r\nconst Pagination = {\r\n  update() {\r\n    // Render || Update Pagination bullets/items\r\n    const swiper = this;\r\n    const rtl = swiper.rtl;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n    const $el = swiper.pagination.$el;\r\n    // Current/Total\r\n    let current;\r\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n    if (swiper.params.loop) {\r\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\r\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\r\n        current -= (slidesLength - (swiper.loopedSlides * 2));\r\n      }\r\n      if (current > total - 1) current -= total;\r\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\r\n    } else if (typeof swiper.snapIndex !== 'undefined') {\r\n      current = swiper.snapIndex;\r\n    } else {\r\n      current = swiper.activeIndex || 0;\r\n    }\r\n    // Types\r\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n      const bullets = swiper.pagination.bullets;\r\n      let firstIndex;\r\n      let lastIndex;\r\n      let midIndex;\r\n      if (params.dynamicBullets) {\r\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\r\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\r\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\r\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\r\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\r\n            swiper.pagination.dynamicBulletIndex = 0;\r\n          }\r\n        }\r\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\r\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n        midIndex = (lastIndex + firstIndex) / 2;\r\n      }\r\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\r\n      if ($el.length > 1) {\r\n        bullets.each((index, bullet) => {\r\n          const $bullet = $(bullet);\r\n          const bulletIndex = $bullet.index();\r\n          if (bulletIndex === current) {\r\n            $bullet.addClass(params.bulletActiveClass);\r\n          }\r\n          if (params.dynamicBullets) {\r\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\r\n            }\r\n            if (bulletIndex === firstIndex) {\r\n              $bullet\r\n                .prev()\r\n                .addClass(`${params.bulletActiveClass}-prev`)\r\n                .prev()\r\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\r\n            }\r\n            if (bulletIndex === lastIndex) {\r\n              $bullet\r\n                .next()\r\n                .addClass(`${params.bulletActiveClass}-next`)\r\n                .next()\r\n                .addClass(`${params.bulletActiveClass}-next-next`);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        const $bullet = bullets.eq(current);\r\n        const bulletIndex = $bullet.index();\r\n        $bullet.addClass(params.bulletActiveClass);\r\n        if (params.dynamicBullets) {\r\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\r\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\r\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\r\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\r\n          }\r\n          if (swiper.params.loop) {\r\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\r\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\r\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\r\n              }\r\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\r\n            } else {\r\n              $firstDisplayedBullet\r\n                .prev()\r\n                .addClass(`${params.bulletActiveClass}-prev`)\r\n                .prev()\r\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\r\n              $lastDisplayedBullet\r\n                .next()\r\n                .addClass(`${params.bulletActiveClass}-next`)\r\n                .next()\r\n                .addClass(`${params.bulletActiveClass}-next-next`);\r\n            }\r\n          } else {\r\n            $firstDisplayedBullet\r\n              .prev()\r\n              .addClass(`${params.bulletActiveClass}-prev`)\r\n              .prev()\r\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\r\n            $lastDisplayedBullet\r\n              .next()\r\n              .addClass(`${params.bulletActiveClass}-next`)\r\n              .next()\r\n              .addClass(`${params.bulletActiveClass}-next-next`);\r\n          }\r\n        }\r\n      }\r\n      if (params.dynamicBullets) {\r\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\r\n        const offsetProp = rtl ? 'right' : 'left';\r\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\r\n      }\r\n    }\r\n    if (params.type === 'fraction') {\r\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\r\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\r\n    }\r\n    if (params.type === 'progressbar') {\r\n      let progressbarDirection;\r\n      if (params.progressbarOpposite) {\r\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n      } else {\r\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n      }\r\n      const scale = (current + 1) / total;\r\n      let scaleX = 1;\r\n      let scaleY = 1;\r\n      if (progressbarDirection === 'horizontal') {\r\n        scaleX = scale;\r\n      } else {\r\n        scaleY = scale;\r\n      }\r\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\r\n    }\r\n    if (params.type === 'custom' && params.renderCustom) {\r\n      $el.html(params.renderCustom(swiper, current + 1, total));\r\n      swiper.emit('paginationRender', swiper, $el[0]);\r\n    } else {\r\n      swiper.emit('paginationUpdate', swiper, $el[0]);\r\n    }\r\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n  },\r\n  render() {\r\n    // Render Container\r\n    const swiper = this;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n\r\n    const $el = swiper.pagination.$el;\r\n    let paginationHTML = '';\r\n    if (params.type === 'bullets') {\r\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n      for (let i = 0; i < numberOfBullets; i += 1) {\r\n        if (params.renderBullet) {\r\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n        } else {\r\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\r\n        }\r\n      }\r\n      $el.html(paginationHTML);\r\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\r\n    }\r\n    if (params.type === 'fraction') {\r\n      if (params.renderFraction) {\r\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n      } else {\r\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\r\n        + ' / '\r\n        + `<span class=\"${params.totalClass}\"></span>`;\r\n      }\r\n      $el.html(paginationHTML);\r\n    }\r\n    if (params.type === 'progressbar') {\r\n      if (params.renderProgressbar) {\r\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n      } else {\r\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\r\n      }\r\n      $el.html(paginationHTML);\r\n    }\r\n    if (params.type !== 'custom') {\r\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\r\n    }\r\n  },\r\n  init() {\r\n    const swiper = this;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el) return;\r\n\r\n    let $el = $(params.el);\r\n    if ($el.length === 0) return;\r\n\r\n    if (\r\n      swiper.params.uniqueNavElements\r\n      && typeof params.el === 'string'\r\n      && $el.length > 1\r\n      && swiper.$el.find(params.el).length === 1\r\n    ) {\r\n      $el = swiper.$el.find(params.el);\r\n    }\r\n\r\n    if (params.type === 'bullets' && params.clickable) {\r\n      $el.addClass(params.clickableClass);\r\n    }\r\n\r\n    $el.addClass(params.modifierClass + params.type);\r\n\r\n    if (params.type === 'bullets' && params.dynamicBullets) {\r\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\r\n      swiper.pagination.dynamicBulletIndex = 0;\r\n      if (params.dynamicMainBullets < 1) {\r\n        params.dynamicMainBullets = 1;\r\n      }\r\n    }\r\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n      $el.addClass(params.progressbarOppositeClass);\r\n    }\r\n\r\n    if (params.clickable) {\r\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\r\n        e.preventDefault();\r\n        let index = $(this).index() * swiper.params.slidesPerGroup;\r\n        if (swiper.params.loop) index += swiper.loopedSlides;\r\n        swiper.slideTo(index);\r\n      });\r\n    }\r\n\r\n    Utils.extend(swiper.pagination, {\r\n      $el,\r\n      el: $el[0],\r\n    });\r\n  },\r\n  destroy() {\r\n    const swiper = this;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n    const $el = swiper.pagination.$el;\r\n\r\n    $el.removeClass(params.hiddenClass);\r\n    $el.removeClass(params.modifierClass + params.type);\r\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\r\n    if (params.clickable) {\r\n      $el.off('click', `.${params.bulletClass}`);\r\n    }\r\n  },\r\n};\r\n\r\nvar pagination = {\r\n  name: 'pagination',\r\n  params: {\r\n    pagination: {\r\n      el: null,\r\n      bulletElement: 'span',\r\n      clickable: false,\r\n      hideOnClick: false,\r\n      renderBullet: null,\r\n      renderProgressbar: null,\r\n      renderFraction: null,\r\n      renderCustom: null,\r\n      progressbarOpposite: false,\r\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n      dynamicBullets: false,\r\n      dynamicMainBullets: 1,\r\n      formatFractionCurrent: (number) => number,\r\n      formatFractionTotal: (number) => number,\r\n      bulletClass: 'swiper-pagination-bullet',\r\n      bulletActiveClass: 'swiper-pagination-bullet-active',\r\n      modifierClass: 'swiper-pagination-', // NEW\r\n      currentClass: 'swiper-pagination-current',\r\n      totalClass: 'swiper-pagination-total',\r\n      hiddenClass: 'swiper-pagination-hidden',\r\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\r\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\r\n      clickableClass: 'swiper-pagination-clickable', // NEW\r\n      lockClass: 'swiper-pagination-lock',\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      pagination: {\r\n        init: Pagination.init.bind(swiper),\r\n        render: Pagination.render.bind(swiper),\r\n        update: Pagination.update.bind(swiper),\r\n        destroy: Pagination.destroy.bind(swiper),\r\n        dynamicBulletIndex: 0,\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      swiper.pagination.init();\r\n      swiper.pagination.render();\r\n      swiper.pagination.update();\r\n    },\r\n    activeIndexChange() {\r\n      const swiper = this;\r\n      if (swiper.params.loop) {\r\n        swiper.pagination.update();\r\n      } else if (typeof swiper.snapIndex === 'undefined') {\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    snapIndexChange() {\r\n      const swiper = this;\r\n      if (!swiper.params.loop) {\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    slidesLengthChange() {\r\n      const swiper = this;\r\n      if (swiper.params.loop) {\r\n        swiper.pagination.render();\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    snapGridLengthChange() {\r\n      const swiper = this;\r\n      if (!swiper.params.loop) {\r\n        swiper.pagination.render();\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.pagination.destroy();\r\n    },\r\n    click(e) {\r\n      const swiper = this;\r\n      if (\r\n        swiper.params.pagination.el\r\n        && swiper.params.pagination.hideOnClick\r\n        && swiper.pagination.$el.length > 0\r\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\r\n      ) {\r\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\r\n        if (isHidden === true) {\r\n          swiper.emit('paginationShow', swiper);\r\n        } else {\r\n          swiper.emit('paginationHide', swiper);\r\n        }\r\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nconst Scrollbar = {\r\n  setTranslate() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\r\n    const {\r\n      dragSize, trackSize, $dragEl, $el,\r\n    } = scrollbar;\r\n    const params = swiper.params.scrollbar;\r\n\r\n    let newSize = dragSize;\r\n    let newPos = (trackSize - dragSize) * progress;\r\n    if (rtl) {\r\n      newPos = -newPos;\r\n      if (newPos > 0) {\r\n        newSize = dragSize - newPos;\r\n        newPos = 0;\r\n      } else if (-newPos + dragSize > trackSize) {\r\n        newSize = trackSize + newPos;\r\n      }\r\n    } else if (newPos < 0) {\r\n      newSize = dragSize + newPos;\r\n      newPos = 0;\r\n    } else if (newPos + dragSize > trackSize) {\r\n      newSize = trackSize - newPos;\r\n    }\r\n    if (swiper.isHorizontal()) {\r\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\r\n      $dragEl[0].style.width = `${newSize}px`;\r\n    } else {\r\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\r\n      $dragEl[0].style.height = `${newSize}px`;\r\n    }\r\n    if (params.hide) {\r\n      clearTimeout(swiper.scrollbar.timeout);\r\n      $el[0].style.opacity = 1;\r\n      swiper.scrollbar.timeout = setTimeout(() => {\r\n        $el[0].style.opacity = 0;\r\n        $el.transition(400);\r\n      }, 1000);\r\n    }\r\n  },\r\n  setTransition(duration) {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n    swiper.scrollbar.$dragEl.transition(duration);\r\n  },\r\n  updateSize() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n\r\n    const { scrollbar } = swiper;\r\n    const { $dragEl, $el } = scrollbar;\r\n\r\n    $dragEl[0].style.width = '';\r\n    $dragEl[0].style.height = '';\r\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\r\n\r\n    const divider = swiper.size / swiper.virtualSize;\r\n    const moveDivider = divider * (trackSize / swiper.size);\r\n    let dragSize;\r\n    if (swiper.params.scrollbar.dragSize === 'auto') {\r\n      dragSize = trackSize * divider;\r\n    } else {\r\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n    }\r\n\r\n    if (swiper.isHorizontal()) {\r\n      $dragEl[0].style.width = `${dragSize}px`;\r\n    } else {\r\n      $dragEl[0].style.height = `${dragSize}px`;\r\n    }\r\n\r\n    if (divider >= 1) {\r\n      $el[0].style.display = 'none';\r\n    } else {\r\n      $el[0].style.display = '';\r\n    }\r\n    if (swiper.params.scrollbar.hide) {\r\n      $el[0].style.opacity = 0;\r\n    }\r\n    Utils.extend(scrollbar, {\r\n      trackSize,\r\n      divider,\r\n      moveDivider,\r\n      dragSize,\r\n    });\r\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\r\n  },\r\n  getPointerPosition(e) {\r\n    const swiper = this;\r\n    if (swiper.isHorizontal()) {\r\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\r\n    }\r\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\r\n  },\r\n  setDragPosition(e) {\r\n    const swiper = this;\r\n    const { scrollbar, rtlTranslate: rtl } = swiper;\r\n    const {\r\n      $el,\r\n      dragSize,\r\n      trackSize,\r\n      dragStartPos,\r\n    } = scrollbar;\r\n\r\n    let positionRatio;\r\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\r\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n    if (rtl) {\r\n      positionRatio = 1 - positionRatio;\r\n    }\r\n\r\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\r\n\r\n    swiper.updateProgress(position);\r\n    swiper.setTranslate(position);\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n  },\r\n  onDragStart(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.scrollbar;\r\n    const { scrollbar, $wrapperEl } = swiper;\r\n    const { $el, $dragEl } = scrollbar;\r\n    swiper.scrollbar.isTouched = true;\r\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\r\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    $wrapperEl.transition(100);\r\n    $dragEl.transition(100);\r\n    scrollbar.setDragPosition(e);\r\n\r\n    clearTimeout(swiper.scrollbar.dragTimeout);\r\n\r\n    $el.transition(0);\r\n    if (params.hide) {\r\n      $el.css('opacity', 1);\r\n    }\r\n    if (swiper.params.cssMode) {\r\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\r\n    }\r\n    swiper.emit('scrollbarDragStart', e);\r\n  },\r\n  onDragMove(e) {\r\n    const swiper = this;\r\n    const { scrollbar, $wrapperEl } = swiper;\r\n    const { $el, $dragEl } = scrollbar;\r\n\r\n    if (!swiper.scrollbar.isTouched) return;\r\n    if (e.preventDefault) e.preventDefault();\r\n    else e.returnValue = false;\r\n    scrollbar.setDragPosition(e);\r\n    $wrapperEl.transition(0);\r\n    $el.transition(0);\r\n    $dragEl.transition(0);\r\n    swiper.emit('scrollbarDragMove', e);\r\n  },\r\n  onDragEnd(e) {\r\n    const swiper = this;\r\n\r\n    const params = swiper.params.scrollbar;\r\n    const { scrollbar, $wrapperEl } = swiper;\r\n    const { $el } = scrollbar;\r\n\r\n    if (!swiper.scrollbar.isTouched) return;\r\n    swiper.scrollbar.isTouched = false;\r\n    if (swiper.params.cssMode) {\r\n      swiper.$wrapperEl.css('scroll-snap-type', '');\r\n      $wrapperEl.transition('');\r\n    }\r\n    if (params.hide) {\r\n      clearTimeout(swiper.scrollbar.dragTimeout);\r\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\r\n        $el.css('opacity', 0);\r\n        $el.transition(400);\r\n      }, 1000);\r\n    }\r\n    swiper.emit('scrollbarDragEnd', e);\r\n    if (params.snapOnRelease) {\r\n      swiper.slideToClosest();\r\n    }\r\n  },\r\n  enableDraggable() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el) return;\r\n    const {\r\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\r\n    } = swiper;\r\n    const $el = scrollbar.$el;\r\n    const target = $el[0];\r\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\r\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n    if (!Support.touch) {\r\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n      doc.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n      doc.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    } else {\r\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    }\r\n  },\r\n  disableDraggable() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el) return;\r\n    const {\r\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\r\n    } = swiper;\r\n    const $el = scrollbar.$el;\r\n    const target = $el[0];\r\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\r\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n    if (!Support.touch) {\r\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n      doc.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n      doc.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    } else {\r\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    }\r\n  },\r\n  init() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el) return;\r\n    const { scrollbar, $el: $swiperEl } = swiper;\r\n    const params = swiper.params.scrollbar;\r\n\r\n    let $el = $(params.el);\r\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\r\n      $el = $swiperEl.find(params.el);\r\n    }\r\n\r\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\r\n    if ($dragEl.length === 0) {\r\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\r\n      $el.append($dragEl);\r\n    }\r\n\r\n    Utils.extend(scrollbar, {\r\n      $el,\r\n      el: $el[0],\r\n      $dragEl,\r\n      dragEl: $dragEl[0],\r\n    });\r\n\r\n    if (params.draggable) {\r\n      scrollbar.enableDraggable();\r\n    }\r\n  },\r\n  destroy() {\r\n    const swiper = this;\r\n    swiper.scrollbar.disableDraggable();\r\n  },\r\n};\r\n\r\nvar scrollbar = {\r\n  name: 'scrollbar',\r\n  params: {\r\n    scrollbar: {\r\n      el: null,\r\n      dragSize: 'auto',\r\n      hide: false,\r\n      draggable: false,\r\n      snapOnRelease: true,\r\n      lockClass: 'swiper-scrollbar-lock',\r\n      dragClass: 'swiper-scrollbar-drag',\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      scrollbar: {\r\n        init: Scrollbar.init.bind(swiper),\r\n        destroy: Scrollbar.destroy.bind(swiper),\r\n        updateSize: Scrollbar.updateSize.bind(swiper),\r\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\r\n        setTransition: Scrollbar.setTransition.bind(swiper),\r\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\r\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\r\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\r\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\r\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\r\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\r\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\r\n        isTouched: false,\r\n        timeout: null,\r\n        dragTimeout: null,\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      swiper.scrollbar.init();\r\n      swiper.scrollbar.updateSize();\r\n      swiper.scrollbar.setTranslate();\r\n    },\r\n    update() {\r\n      const swiper = this;\r\n      swiper.scrollbar.updateSize();\r\n    },\r\n    resize() {\r\n      const swiper = this;\r\n      swiper.scrollbar.updateSize();\r\n    },\r\n    observerUpdate() {\r\n      const swiper = this;\r\n      swiper.scrollbar.updateSize();\r\n    },\r\n    setTranslate() {\r\n      const swiper = this;\r\n      swiper.scrollbar.setTranslate();\r\n    },\r\n    setTransition(duration) {\r\n      const swiper = this;\r\n      swiper.scrollbar.setTransition(duration);\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.scrollbar.destroy();\r\n    },\r\n  },\r\n};\r\n\r\nconst Zoom = {\r\n  // Calc Scale From Multi-touches\r\n  getDistanceBetweenTouches(e) {\r\n    if (e.targetTouches.length < 2) return 1;\r\n    const x1 = e.targetTouches[0].pageX;\r\n    const y1 = e.targetTouches[0].pageY;\r\n    const x2 = e.targetTouches[1].pageX;\r\n    const y2 = e.targetTouches[1].pageY;\r\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\r\n    return distance;\r\n  },\r\n  // Events\r\n  onGestureStart(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.zoom;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    zoom.fakeGestureTouched = false;\r\n    zoom.fakeGestureMoved = false;\r\n    if (!Support.gestures) {\r\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\r\n        return;\r\n      }\r\n      zoom.fakeGestureTouched = true;\r\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\r\n    }\r\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\r\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\r\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\r\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n      if (gesture.$imageWrapEl.length === 0) {\r\n        gesture.$imageEl = undefined;\r\n        return;\r\n      }\r\n    }\r\n    if (gesture.$imageEl) {\r\n      gesture.$imageEl.transition(0);\r\n    }\r\n    swiper.zoom.isScaling = true;\r\n  },\r\n  onGestureChange(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.zoom;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    if (!Support.gestures) {\r\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\r\n        return;\r\n      }\r\n      zoom.fakeGestureMoved = true;\r\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    if (Support.gestures) {\r\n      zoom.scale = e.scale * zoom.currentScale;\r\n    } else {\r\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\r\n    }\r\n    if (zoom.scale > gesture.maxRatio) {\r\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\r\n    }\r\n    if (zoom.scale < params.minRatio) {\r\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\r\n    }\r\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n  },\r\n  onGestureEnd(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.zoom;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    if (!Support.gestures) {\r\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\r\n        return;\r\n      }\r\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\r\n        return;\r\n      }\r\n      zoom.fakeGestureTouched = false;\r\n      zoom.fakeGestureMoved = false;\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n    zoom.currentScale = zoom.scale;\r\n    zoom.isScaling = false;\r\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\r\n  },\r\n  onTouchStart(e) {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture, image } = zoom;\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    if (image.isTouched) return;\r\n    if (Device.android) e.preventDefault();\r\n    image.isTouched = true;\r\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n  },\r\n  onTouchMove(e) {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture, image, velocity } = zoom;\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    swiper.allowClick = false;\r\n    if (!image.isTouched || !gesture.$slideEl) return;\r\n\r\n    if (!image.isMoved) {\r\n      image.width = gesture.$imageEl[0].offsetWidth;\r\n      image.height = gesture.$imageEl[0].offsetHeight;\r\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\r\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\r\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\r\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\r\n      gesture.$imageWrapEl.transition(0);\r\n      if (swiper.rtl) {\r\n        image.startX = -image.startX;\r\n        image.startY = -image.startY;\r\n      }\r\n    }\r\n    // Define if we need image drag\r\n    const scaledWidth = image.width * zoom.scale;\r\n    const scaledHeight = image.height * zoom.scale;\r\n\r\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n\r\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\r\n    image.maxX = -image.minX;\r\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\r\n    image.maxY = -image.minY;\r\n\r\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n\r\n    if (!image.isMoved && !zoom.isScaling) {\r\n      if (\r\n        swiper.isHorizontal()\r\n        && (\r\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\r\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\r\n        )\r\n      ) {\r\n        image.isTouched = false;\r\n        return;\r\n      } if (\r\n        !swiper.isHorizontal()\r\n        && (\r\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\r\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\r\n        )\r\n      ) {\r\n        image.isTouched = false;\r\n        return;\r\n      }\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    image.isMoved = true;\r\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\r\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\r\n\r\n    if (image.currentX < image.minX) {\r\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\r\n    }\r\n    if (image.currentX > image.maxX) {\r\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\r\n    }\r\n\r\n    if (image.currentY < image.minY) {\r\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\r\n    }\r\n    if (image.currentY > image.maxY) {\r\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\r\n    }\r\n\r\n    // Velocity\r\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n    velocity.prevPositionX = image.touchesCurrent.x;\r\n    velocity.prevPositionY = image.touchesCurrent.y;\r\n    velocity.prevTime = Date.now();\r\n\r\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n  },\r\n  onTouchEnd() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture, image, velocity } = zoom;\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    if (!image.isTouched || !image.isMoved) {\r\n      image.isTouched = false;\r\n      image.isMoved = false;\r\n      return;\r\n    }\r\n    image.isTouched = false;\r\n    image.isMoved = false;\r\n    let momentumDurationX = 300;\r\n    let momentumDurationY = 300;\r\n    const momentumDistanceX = velocity.x * momentumDurationX;\r\n    const newPositionX = image.currentX + momentumDistanceX;\r\n    const momentumDistanceY = velocity.y * momentumDurationY;\r\n    const newPositionY = image.currentY + momentumDistanceY;\r\n\r\n    // Fix duration\r\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n\r\n    image.currentX = newPositionX;\r\n    image.currentY = newPositionY;\r\n\r\n    // Define if we need image drag\r\n    const scaledWidth = image.width * zoom.scale;\r\n    const scaledHeight = image.height * zoom.scale;\r\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\r\n    image.maxX = -image.minX;\r\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\r\n    image.maxY = -image.minY;\r\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n\r\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n  },\r\n  onTransitionEnd() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n      if (gesture.$imageEl) {\r\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\r\n      }\r\n      if (gesture.$imageWrapEl) {\r\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\r\n      }\r\n\r\n      zoom.scale = 1;\r\n      zoom.currentScale = 1;\r\n\r\n      gesture.$slideEl = undefined;\r\n      gesture.$imageEl = undefined;\r\n      gesture.$imageWrapEl = undefined;\r\n    }\r\n  },\r\n  // Toggle Zoom\r\n  toggle(e) {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n\r\n    if (zoom.scale && zoom.scale !== 1) {\r\n      // Zoom Out\r\n      zoom.out();\r\n    } else {\r\n      // Zoom In\r\n      zoom.in(e);\r\n    }\r\n  },\r\n  in(e) {\r\n    const swiper = this;\r\n\r\n    const zoom = swiper.zoom;\r\n    const params = swiper.params.zoom;\r\n    const { gesture, image } = zoom;\r\n\r\n    if (!gesture.$slideEl) {\r\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\r\n      } else {\r\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n      }\r\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\r\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\r\n\r\n    let touchX;\r\n    let touchY;\r\n    let offsetX;\r\n    let offsetY;\r\n    let diffX;\r\n    let diffY;\r\n    let translateX;\r\n    let translateY;\r\n    let imageWidth;\r\n    let imageHeight;\r\n    let scaledWidth;\r\n    let scaledHeight;\r\n    let translateMinX;\r\n    let translateMinY;\r\n    let translateMaxX;\r\n    let translateMaxY;\r\n    let slideWidth;\r\n    let slideHeight;\r\n\r\n    if (typeof image.touchesStart.x === 'undefined' && e) {\r\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\r\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\r\n    } else {\r\n      touchX = image.touchesStart.x;\r\n      touchY = image.touchesStart.y;\r\n    }\r\n\r\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n    if (e) {\r\n      slideWidth = gesture.$slideEl[0].offsetWidth;\r\n      slideHeight = gesture.$slideEl[0].offsetHeight;\r\n      offsetX = gesture.$slideEl.offset().left;\r\n      offsetY = gesture.$slideEl.offset().top;\r\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\r\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\r\n\r\n      imageWidth = gesture.$imageEl[0].offsetWidth;\r\n      imageHeight = gesture.$imageEl[0].offsetHeight;\r\n      scaledWidth = imageWidth * zoom.scale;\r\n      scaledHeight = imageHeight * zoom.scale;\r\n\r\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\r\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\r\n      translateMaxX = -translateMinX;\r\n      translateMaxY = -translateMinY;\r\n\r\n      translateX = diffX * zoom.scale;\r\n      translateY = diffY * zoom.scale;\r\n\r\n      if (translateX < translateMinX) {\r\n        translateX = translateMinX;\r\n      }\r\n      if (translateX > translateMaxX) {\r\n        translateX = translateMaxX;\r\n      }\r\n\r\n      if (translateY < translateMinY) {\r\n        translateY = translateMinY;\r\n      }\r\n      if (translateY > translateMaxY) {\r\n        translateY = translateMaxY;\r\n      }\r\n    } else {\r\n      translateX = 0;\r\n      translateY = 0;\r\n    }\r\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\r\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n  },\r\n  out() {\r\n    const swiper = this;\r\n\r\n    const zoom = swiper.zoom;\r\n    const params = swiper.params.zoom;\r\n    const { gesture } = zoom;\r\n\r\n    if (!gesture.$slideEl) {\r\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\r\n      } else {\r\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n      }\r\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas, picture, .swiper-zoom-target');\r\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n    zoom.scale = 1;\r\n    zoom.currentScale = 1;\r\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\r\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\r\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\r\n    gesture.$slideEl = undefined;\r\n  },\r\n  // Attach/Detach Events\r\n  enable() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    if (zoom.enabled) return;\r\n    zoom.enabled = true;\r\n\r\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\r\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\r\n\r\n    const slideSelector = `.${swiper.params.slideClass}`;\r\n\r\n    // Scale image\r\n    if (Support.gestures) {\r\n      swiper.$wrapperEl.on('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.on('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\r\n      swiper.$wrapperEl.on('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\r\n    } else if (swiper.touchEvents.start === 'touchstart') {\r\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\r\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\r\n      if (swiper.touchEvents.cancel) {\r\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\r\n      }\r\n    }\r\n\r\n    // Move image\r\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\r\n  },\r\n  disable() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    if (!zoom.enabled) return;\r\n\r\n    swiper.zoom.enabled = false;\r\n\r\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\r\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\r\n\r\n    const slideSelector = `.${swiper.params.slideClass}`;\r\n\r\n    // Scale image\r\n    if (Support.gestures) {\r\n      swiper.$wrapperEl.off('gesturestart', slideSelector, zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.off('gesturechange', slideSelector, zoom.onGestureChange, passiveListener);\r\n      swiper.$wrapperEl.off('gestureend', slideSelector, zoom.onGestureEnd, passiveListener);\r\n    } else if (swiper.touchEvents.start === 'touchstart') {\r\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, zoom.onGestureChange, activeListenerWithCapture);\r\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, zoom.onGestureEnd, passiveListener);\r\n      if (swiper.touchEvents.cancel) {\r\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, zoom.onGestureEnd, passiveListener);\r\n      }\r\n    }\r\n\r\n    // Move image\r\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\r\n  },\r\n};\r\n\r\nvar zoom = {\r\n  name: 'zoom',\r\n  params: {\r\n    zoom: {\r\n      enabled: false,\r\n      maxRatio: 3,\r\n      minRatio: 1,\r\n      toggle: true,\r\n      containerClass: 'swiper-zoom-container',\r\n      zoomedSlideClass: 'swiper-slide-zoomed',\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    const zoom = {\r\n      enabled: false,\r\n      scale: 1,\r\n      currentScale: 1,\r\n      isScaling: false,\r\n      gesture: {\r\n        $slideEl: undefined,\r\n        slideWidth: undefined,\r\n        slideHeight: undefined,\r\n        $imageEl: undefined,\r\n        $imageWrapEl: undefined,\r\n        maxRatio: 3,\r\n      },\r\n      image: {\r\n        isTouched: undefined,\r\n        isMoved: undefined,\r\n        currentX: undefined,\r\n        currentY: undefined,\r\n        minX: undefined,\r\n        minY: undefined,\r\n        maxX: undefined,\r\n        maxY: undefined,\r\n        width: undefined,\r\n        height: undefined,\r\n        startX: undefined,\r\n        startY: undefined,\r\n        touchesStart: {},\r\n        touchesCurrent: {},\r\n      },\r\n      velocity: {\r\n        x: undefined,\r\n        y: undefined,\r\n        prevPositionX: undefined,\r\n        prevPositionY: undefined,\r\n        prevTime: undefined,\r\n      },\r\n    };\r\n\r\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\r\n      zoom[methodName] = Zoom[methodName].bind(swiper);\r\n    });\r\n    Utils.extend(swiper, {\r\n      zoom,\r\n    });\r\n\r\n    let scale = 1;\r\n    Object.defineProperty(swiper.zoom, 'scale', {\r\n      get() {\r\n        return scale;\r\n      },\r\n      set(value) {\r\n        if (scale !== value) {\r\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\r\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\r\n          swiper.emit('zoomChange', value, imageEl, slideEl);\r\n        }\r\n        scale = value;\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      if (swiper.params.zoom.enabled) {\r\n        swiper.zoom.enable();\r\n      }\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.zoom.disable();\r\n    },\r\n    touchStart(e) {\r\n      const swiper = this;\r\n      if (!swiper.zoom.enabled) return;\r\n      swiper.zoom.onTouchStart(e);\r\n    },\r\n    touchEnd(e) {\r\n      const swiper = this;\r\n      if (!swiper.zoom.enabled) return;\r\n      swiper.zoom.onTouchEnd(e);\r\n    },\r\n    doubleTap(e) {\r\n      const swiper = this;\r\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n        swiper.zoom.toggle(e);\r\n      }\r\n    },\r\n    transitionEnd() {\r\n      const swiper = this;\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n        swiper.zoom.onTransitionEnd();\r\n      }\r\n    },\r\n    slideChange() {\r\n      const swiper = this;\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\r\n        swiper.zoom.onTransitionEnd();\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\n/* eslint no-underscore-dangle: \"off\" */\r\n\r\nconst Autoplay = {\r\n  run() {\r\n    const swiper = this;\r\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\r\n    let delay = swiper.params.autoplay.delay;\r\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\r\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\r\n    }\r\n    clearTimeout(swiper.autoplay.timeout);\r\n    swiper.autoplay.timeout = Utils.nextTick(() => {\r\n      if (swiper.params.autoplay.reverseDirection) {\r\n        if (swiper.params.loop) {\r\n          swiper.loopFix();\r\n          swiper.slidePrev(swiper.params.speed, true, true);\r\n          swiper.emit('autoplay');\r\n        } else if (!swiper.isBeginning) {\r\n          swiper.slidePrev(swiper.params.speed, true, true);\r\n          swiper.emit('autoplay');\r\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\r\n          swiper.emit('autoplay');\r\n        } else {\r\n          swiper.autoplay.stop();\r\n        }\r\n      } else if (swiper.params.loop) {\r\n        swiper.loopFix();\r\n        swiper.slideNext(swiper.params.speed, true, true);\r\n        swiper.emit('autoplay');\r\n      } else if (!swiper.isEnd) {\r\n        swiper.slideNext(swiper.params.speed, true, true);\r\n        swiper.emit('autoplay');\r\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n        swiper.slideTo(0, swiper.params.speed, true, true);\r\n        swiper.emit('autoplay');\r\n      } else {\r\n        swiper.autoplay.stop();\r\n      }\r\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\r\n    }, delay);\r\n  },\r\n  start() {\r\n    const swiper = this;\r\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\r\n    if (swiper.autoplay.running) return false;\r\n    swiper.autoplay.running = true;\r\n    swiper.emit('autoplayStart');\r\n    swiper.autoplay.run();\r\n    return true;\r\n  },\r\n  stop() {\r\n    const swiper = this;\r\n    if (!swiper.autoplay.running) return false;\r\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\r\n\r\n    if (swiper.autoplay.timeout) {\r\n      clearTimeout(swiper.autoplay.timeout);\r\n      swiper.autoplay.timeout = undefined;\r\n    }\r\n    swiper.autoplay.running = false;\r\n    swiper.emit('autoplayStop');\r\n    return true;\r\n  },\r\n  pause(speed) {\r\n    const swiper = this;\r\n    if (!swiper.autoplay.running) return;\r\n    if (swiper.autoplay.paused) return;\r\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\r\n    swiper.autoplay.paused = true;\r\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\r\n      swiper.autoplay.paused = false;\r\n      swiper.autoplay.run();\r\n    } else {\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n    }\r\n  },\r\n};\r\n\r\nvar autoplay = {\r\n  name: 'autoplay',\r\n  params: {\r\n    autoplay: {\r\n      enabled: false,\r\n      delay: 3000,\r\n      waitForTransition: true,\r\n      disableOnInteraction: true,\r\n      stopOnLastSlide: false,\r\n      reverseDirection: false,\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      autoplay: {\r\n        running: false,\r\n        paused: false,\r\n        run: Autoplay.run.bind(swiper),\r\n        start: Autoplay.start.bind(swiper),\r\n        stop: Autoplay.stop.bind(swiper),\r\n        pause: Autoplay.pause.bind(swiper),\r\n        onVisibilityChange() {\r\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\r\n            swiper.autoplay.pause();\r\n          }\r\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\r\n            swiper.autoplay.run();\r\n            swiper.autoplay.paused = false;\r\n          }\r\n        },\r\n        onTransitionEnd(e) {\r\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n          swiper.autoplay.paused = false;\r\n          if (!swiper.autoplay.running) {\r\n            swiper.autoplay.stop();\r\n          } else {\r\n            swiper.autoplay.run();\r\n          }\r\n        },\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      if (swiper.params.autoplay.enabled) {\r\n        swiper.autoplay.start();\r\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\r\n      }\r\n    },\r\n    beforeTransitionStart(speed, internal) {\r\n      const swiper = this;\r\n      if (swiper.autoplay.running) {\r\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n          swiper.autoplay.pause(speed);\r\n        } else {\r\n          swiper.autoplay.stop();\r\n        }\r\n      }\r\n    },\r\n    sliderFirstMove() {\r\n      const swiper = this;\r\n      if (swiper.autoplay.running) {\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          swiper.autoplay.stop();\r\n        } else {\r\n          swiper.autoplay.pause();\r\n        }\r\n      }\r\n    },\r\n    touchEnd() {\r\n      const swiper = this;\r\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\r\n        swiper.autoplay.run();\r\n      }\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      if (swiper.autoplay.running) {\r\n        swiper.autoplay.stop();\r\n      }\r\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\r\n    },\r\n  },\r\n};\r\n\r\n// Swiper Class\r\n\r\nconst components = [\r\n  Device$1,\r\n  Support$1,\r\n  Browser$1,\r\n  Resize,\r\n  Observer$1,\r\n  \r\n];\r\n\r\nif (typeof Swiper.use === 'undefined') {\r\n  Swiper.use = Swiper.Class.use;\r\n  Swiper.installModule = Swiper.Class.installModule;\r\n}\r\n\r\nSwiper.use(components);\r\n\r\nSwiper.use([pagination, scrollbar, autoplay, zoom]);\r\n\r\nexport { Swiper };\r\n"],"sourceRoot":"webpack:///","file":"swiper-bundle-f564f87c-js-es5.js"}