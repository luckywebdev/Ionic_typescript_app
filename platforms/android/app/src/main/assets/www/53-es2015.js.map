{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA0H;AAC7D;;AAE7D,+BAA+B,OAAO,QAAQ,MAAM,SAAS,kBAAkB,eAAe,oBAAoB,kBAAkB,0BAA0B,eAAe,kBAAkB,kBAAkB,8BAA8B,cAAc,eAAe,UAAU,gFAAgF,wEAAwE,+BAA+B,oBAAoB,UAAU,+EAA+E,uEAAuE,kDAAkD,0CAA0C,mCAAmC,KAAK,+DAA+D,uDAAuD,2BAA2B,mBAAmB,GAAG,+EAA+E,wEAAwE,2BAA2B,KAAK,+DAA+D,uDAAuD,2BAA2B,mBAAmB,GAAG,+EAA+E,wEAAwE,mCAAmC,KAAK,yCAAyC,iCAAiC,UAAU,GAAG,cAAc,2BAA2B,KAAK,yCAAyC,iCAAiC,UAAU,GAAG,cAAc,oCAAoC,KAAK,yCAAyC,iCAAiC,aAAa,GAAG,WAAW,4BAA4B,KAAK,yCAAyC,iCAAiC,aAAa,GAAG,WAAW;;AAEv8D;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAS;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,WAAW;AACrE,4DAA4D,MAAM,MAAM,MAAM;AAC9E;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAU;AAC/B,gBAAgB,4DAAC,CAAC,oDAAI,GAAG;AACzB;AACA;AACA,aAAa,EAAE;AACf;AACA,cAAc,QAAQ,4DAAU,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAE6C","file":"53-es2015.js","sourcesContent":["import { r as registerInstance, f as readTask, w as writeTask, h, e as getElement, H as Host } from './index-26ec602c.js';\r\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\r\n\r\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\r\n\r\nconst RippleEffect = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Sets the type of ripple-effect:\r\n         *\r\n         * - `bounded`: the ripple effect expands from the user's click position\r\n         * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\r\n         *\r\n         * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\r\n         * while surfaces for unbounded ripples should have it set to visible.\r\n         */\r\n        this.type = 'bounded';\r\n    }\r\n    /**\r\n     * Adds the ripple effect to the parent element.\r\n     *\r\n     * @param x The horizontal coordinate of where the ripple should start.\r\n     * @param y The vertical coordinate of where the ripple should start.\r\n     */\r\n    async addRipple(x, y) {\r\n        return new Promise(resolve => {\r\n            readTask(() => {\r\n                const rect = this.el.getBoundingClientRect();\r\n                const width = rect.width;\r\n                const height = rect.height;\r\n                const hypotenuse = Math.sqrt(width * width + height * height);\r\n                const maxDim = Math.max(height, width);\r\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\r\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\r\n                const finalScale = maxRadius / initialSize;\r\n                let posX = x - rect.left;\r\n                let posY = y - rect.top;\r\n                if (this.unbounded) {\r\n                    posX = width * 0.5;\r\n                    posY = height * 0.5;\r\n                }\r\n                const styleX = posX - initialSize * 0.5;\r\n                const styleY = posY - initialSize * 0.5;\r\n                const moveX = width * 0.5 - posX;\r\n                const moveY = height * 0.5 - posY;\r\n                writeTask(() => {\r\n                    const div = document.createElement('div');\r\n                    div.classList.add('ripple-effect');\r\n                    const style = div.style;\r\n                    style.top = styleY + 'px';\r\n                    style.left = styleX + 'px';\r\n                    style.width = style.height = initialSize + 'px';\r\n                    style.setProperty('--final-scale', `${finalScale}`);\r\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\r\n                    const container = this.el.shadowRoot || this.el;\r\n                    container.appendChild(div);\r\n                    setTimeout(() => {\r\n                        resolve(() => {\r\n                            removeRipple(div);\r\n                        });\r\n                    }, 225 + 100);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    get unbounded() {\r\n        return this.type === 'unbounded';\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { role: \"presentation\", class: {\r\n                [mode]: true,\r\n                'unbounded': this.unbounded\r\n            } }));\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\nconst removeRipple = (ripple) => {\r\n    ripple.classList.add('fade-out');\r\n    setTimeout(() => {\r\n        ripple.remove();\r\n    }, 200);\r\n};\r\nconst PADDING = 10;\r\nconst INITIAL_ORIGIN_SCALE = 0.5;\r\nRippleEffect.style = rippleEffectCss;\r\n\r\nexport { RippleEffect as ion_ripple_effect };\r\n"],"sourceRoot":"webpack:///"}