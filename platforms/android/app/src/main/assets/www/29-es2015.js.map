{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-input-md.entry.js"],"names":[],"mappings":"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;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mEAAU;AAC/B;AACA;AACA,sBAAsB,8DAAa;AACnC;AACA;AACA;AACA,gBAAgB,4DAAC,CAAC,oDAAI,GAAG,sFAAsF,EAAE,4DAAkB,gBAAgB,yEAAyE,GAAG,EAAE,4DAAC,WAAW,8uBAA8uB,4DAA4D,4DAAC,YAAY,iIAAiI;AACrqC;AACA,cAAc,QAAQ,4DAAU,OAAO;AACvC,2BAA2B;AAC3B;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAE8B","file":"29-es2015.js","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-26ec602c.js';\r\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\r\nimport { d as debounceEvent, f as findItemLabel } from './helpers-d8b49b57.js';\r\nimport { c as createColorClasses } from './theme-c2dc54d9.js';\r\n\r\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\r\n\r\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.has-focus.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\r\n\r\nconst Input = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inputId = `ion-input-${inputIds++}`;\r\n        this.didBlurAfterEdit = false;\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         */\r\n        this.autocapitalize = 'off';\r\n        /**\r\n         * Indicates whether the value of the control can be automatically completed by the browser.\r\n         */\r\n        this.autocomplete = 'off';\r\n        /**\r\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\r\n         */\r\n        this.autocorrect = 'off';\r\n        /**\r\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n         */\r\n        this.clearInput = false;\r\n        /**\r\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\r\n         */\r\n        this.debounce = 0;\r\n        /**\r\n         * If `true`, the user cannot interact with the input.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * The type of control to display. The default type is text.\r\n         */\r\n        this.type = 'text';\r\n        /**\r\n         * The value of the input.\r\n         */\r\n        this.value = '';\r\n        this.onInput = (ev) => {\r\n            const input = ev.target;\r\n            if (input) {\r\n                this.value = input.value || '';\r\n            }\r\n            this.ionInput.emit(ev);\r\n        };\r\n        this.onBlur = () => {\r\n            this.hasFocus = false;\r\n            this.focusChanged();\r\n            this.emitStyle();\r\n            this.ionBlur.emit();\r\n        };\r\n        this.onFocus = () => {\r\n            this.hasFocus = true;\r\n            this.focusChanged();\r\n            this.emitStyle();\r\n            this.ionFocus.emit();\r\n        };\r\n        this.onKeydown = (ev) => {\r\n            if (this.shouldClearOnEdit()) {\r\n                // Did the input value change after it was blurred and edited?\r\n                // Do not clear if user is hitting Enter to submit form\r\n                if (this.didBlurAfterEdit && this.hasValue() && ev.key !== 'Enter') {\r\n                    // Clear the input\r\n                    this.clearTextInput();\r\n                }\r\n                // Reset the flag\r\n                this.didBlurAfterEdit = false;\r\n            }\r\n        };\r\n        this.clearTextInput = (ev) => {\r\n            if (this.clearInput && !this.readonly && !this.disabled && ev) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n            this.value = '';\r\n            /**\r\n             * This is needed for clearOnEdit\r\n             * Otherwise the value will not be cleared\r\n             * if user is inside the input\r\n             */\r\n            if (this.nativeInput) {\r\n                this.nativeInput.value = '';\r\n            }\r\n        };\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    }\r\n    debounceChanged() {\r\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n    }\r\n    disabledChanged() {\r\n        this.emitStyle();\r\n    }\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    valueChanged() {\r\n        this.emitStyle();\r\n        this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\r\n    }\r\n    connectedCallback() {\r\n        this.emitStyle();\r\n        this.debounceChanged();\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * Sets focus on the specified `ion-input`. Use this method instead of the global\r\n     * `input.focus()`.\r\n     */\r\n    async setFocus() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Returns the native `<input>` element used under the hood.\r\n     */\r\n    getInputElement() {\r\n        return Promise.resolve(this.nativeInput);\r\n    }\r\n    shouldClearOnEdit() {\r\n        const { type, clearOnEdit } = this;\r\n        return (clearOnEdit === undefined)\r\n            ? type === 'password'\r\n            : clearOnEdit;\r\n    }\r\n    getValue() {\r\n        return typeof this.value === 'number' ? this.value.toString() :\r\n            (this.value || '').toString();\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'interactive': true,\r\n            'input': true,\r\n            'has-placeholder': this.placeholder != null,\r\n            'has-value': this.hasValue(),\r\n            'has-focus': this.hasFocus,\r\n            'interactive-disabled': this.disabled,\r\n        });\r\n    }\r\n    focusChanged() {\r\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\r\n            this.didBlurAfterEdit = true;\r\n        }\r\n    }\r\n    hasValue() {\r\n        return this.getValue().length > 0;\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const value = this.getValue();\r\n        const labelId = this.inputId + '-lbl';\r\n        const label = findItemLabel(this.el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'has-value': this.hasValue(), 'has-focus': this.hasFocus }) }, h(\"input\", { class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellCheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { type: \"button\", class: \"input-clear-icon\", tabindex: \"-1\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"debounce\": [\"debounceChanged\"],\r\n        \"disabled\": [\"disabledChanged\"],\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nlet inputIds = 0;\r\nInput.style = {\r\n    /*STENCIL:MODE:ios*/ ios: inputIosCss,\r\n    /*STENCIL:MODE:md*/ md: inputMdCss\r\n};\r\n\r\nexport { Input as ion_input };\r\n"],"sourceRoot":"webpack:///"}