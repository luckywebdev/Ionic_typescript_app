{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, f as readTask, w as writeTask, h, e as getElement, H as Host } from './index-26ec602c.js';\r\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\r\n\r\nconst rippleEffectCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:strict;pointer-events:none}:host(.unbounded){contain:layout size style}.ripple-effect{border-radius:50%;position:absolute;background-color:currentColor;color:inherit;contain:strict;opacity:0;-webkit-animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;animation:225ms rippleAnimation forwards, 75ms fadeInAnimation forwards;will-change:transform, opacity;pointer-events:none}.fade-out{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1));-webkit-animation:150ms fadeOutAnimation forwards;animation:150ms fadeOutAnimation forwards}@-webkit-keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@keyframes rippleAnimation{from{-webkit-animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);animation-timing-function:cubic-bezier(0.4, 0, 0.2, 1);-webkit-transform:scale(1);transform:scale(1)}to{-webkit-transform:translate(var(--translate-end)) scale(var(--final-scale, 1));transform:translate(var(--translate-end)) scale(var(--final-scale, 1))}}@-webkit-keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@keyframes fadeInAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0}to{opacity:0.16}}@-webkit-keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}@keyframes fadeOutAnimation{from{-webkit-animation-timing-function:linear;animation-timing-function:linear;opacity:0.16}to{opacity:0}}\";\r\n\r\nconst RippleEffect = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        /**\r\n         * Sets the type of ripple-effect:\r\n         *\r\n         * - `bounded`: the ripple effect expands from the user's click position\r\n         * - `unbounded`: the ripple effect expands from the center of the button and overflows the container.\r\n         *\r\n         * NOTE: Surfaces for bounded ripples should have the overflow property set to hidden,\r\n         * while surfaces for unbounded ripples should have it set to visible.\r\n         */\r\n        this.type = 'bounded';\r\n    }\r\n    /**\r\n     * Adds the ripple effect to the parent element.\r\n     *\r\n     * @param x The horizontal coordinate of where the ripple should start.\r\n     * @param y The vertical coordinate of where the ripple should start.\r\n     */\r\n    async addRipple(x, y) {\r\n        return new Promise(resolve => {\r\n            readTask(() => {\r\n                const rect = this.el.getBoundingClientRect();\r\n                const width = rect.width;\r\n                const height = rect.height;\r\n                const hypotenuse = Math.sqrt(width * width + height * height);\r\n                const maxDim = Math.max(height, width);\r\n                const maxRadius = this.unbounded ? maxDim : hypotenuse + PADDING;\r\n                const initialSize = Math.floor(maxDim * INITIAL_ORIGIN_SCALE);\r\n                const finalScale = maxRadius / initialSize;\r\n                let posX = x - rect.left;\r\n                let posY = y - rect.top;\r\n                if (this.unbounded) {\r\n                    posX = width * 0.5;\r\n                    posY = height * 0.5;\r\n                }\r\n                const styleX = posX - initialSize * 0.5;\r\n                const styleY = posY - initialSize * 0.5;\r\n                const moveX = width * 0.5 - posX;\r\n                const moveY = height * 0.5 - posY;\r\n                writeTask(() => {\r\n                    const div = document.createElement('div');\r\n                    div.classList.add('ripple-effect');\r\n                    const style = div.style;\r\n                    style.top = styleY + 'px';\r\n                    style.left = styleX + 'px';\r\n                    style.width = style.height = initialSize + 'px';\r\n                    style.setProperty('--final-scale', `${finalScale}`);\r\n                    style.setProperty('--translate-end', `${moveX}px, ${moveY}px`);\r\n                    const container = this.el.shadowRoot || this.el;\r\n                    container.appendChild(div);\r\n                    setTimeout(() => {\r\n                        resolve(() => {\r\n                            removeRipple(div);\r\n                        });\r\n                    }, 225 + 100);\r\n                });\r\n            });\r\n        });\r\n    }\r\n    get unbounded() {\r\n        return this.type === 'unbounded';\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { role: \"presentation\", class: {\r\n                [mode]: true,\r\n                'unbounded': this.unbounded\r\n            } }));\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\nconst removeRipple = (ripple) => {\r\n    ripple.classList.add('fade-out');\r\n    setTimeout(() => {\r\n        ripple.remove();\r\n    }, 200);\r\n};\r\nconst PADDING = 10;\r\nconst INITIAL_ORIGIN_SCALE = 0.5;\r\nRippleEffect.style = rippleEffectCss;\r\n\r\nexport { RippleEffect as ion_ripple_effect };\r\n"],"sourceRoot":"webpack:///","file":"53-es5.js"}