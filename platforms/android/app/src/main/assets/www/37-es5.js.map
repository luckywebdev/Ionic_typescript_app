{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-menu_3-md.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-26ec602c.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-1bf1fa84.js';\r\nimport { i as isEndSide, b as assert, c as clamp } from './helpers-d8b49b57.js';\r\nimport './animation-47fafd47.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-685f606a.js';\r\nimport { GESTURE_CONTROLLER } from './index-6f647ec8.js';\r\nimport './hardware-back-button-7b6ede21.js';\r\nimport { m as menuController } from './index-6941d9b4.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\r\n\r\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\r\n\r\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\r\n\r\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\r\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\r\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\r\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\r\nconst Menu = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.lastOnEnd = 0;\r\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\r\n        this.isAnimating = false;\r\n        this._isOpen = false;\r\n        this.isPaneVisible = false;\r\n        this.isEndSide = false;\r\n        /**\r\n         * If `true`, the menu is disabled.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Which side of the view the menu should be placed.\r\n         */\r\n        this.side = 'start';\r\n        /**\r\n         * If `true`, swiping the menu is enabled.\r\n         */\r\n        this.swipeGesture = true;\r\n        /**\r\n         * The edge threshold for dragging the menu open.\r\n         * If a drag/swipe happens over this value, the menu is not triggered.\r\n         */\r\n        this.maxEdgeStart = 50;\r\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\r\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\r\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\r\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\r\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\r\n    }\r\n    typeChanged(type, oldType) {\r\n        const contentEl = this.contentEl;\r\n        if (contentEl) {\r\n            if (oldType !== undefined) {\r\n                contentEl.classList.remove(`menu-content-${oldType}`);\r\n            }\r\n            contentEl.classList.add(`menu-content-${type}`);\r\n            contentEl.removeAttribute('style');\r\n        }\r\n        if (this.menuInnerEl) {\r\n            // Remove effects of previous animations\r\n            this.menuInnerEl.removeAttribute('style');\r\n        }\r\n        this.animation = undefined;\r\n    }\r\n    disabledChanged() {\r\n        this.updateState();\r\n        this.ionMenuChange.emit({\r\n            disabled: this.disabled,\r\n            open: this._isOpen\r\n        });\r\n    }\r\n    sideChanged() {\r\n        this.isEndSide = isEndSide(this.side);\r\n    }\r\n    swipeGestureChanged() {\r\n        this.updateState();\r\n    }\r\n    async connectedCallback() {\r\n        if (this.type === undefined) {\r\n            this.type = config.get('menuType', 'overlay');\r\n        }\r\n        const el = this.el;\r\n        const parent = el.parentNode;\r\n        if (this.contentId === undefined) {\r\n            console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\r\nBEFORE:\r\n  <ion-menu>...</ion-menu>\r\n  <div main>...</div>\r\n\r\nAFTER:\r\n  <ion-menu contentId=\"main-content\"></ion-menu>\r\n  <div id=\"main-content\">...</div>\r\n`);\r\n        }\r\n        const content = this.contentId !== undefined\r\n            ? document.getElementById(this.contentId)\r\n            : parent && parent.querySelector && parent.querySelector('[main]');\r\n        if (!content || !content.tagName) {\r\n            // requires content element\r\n            console.error('Menu: must have a \"content\" element to listen for drag events on.');\r\n            return;\r\n        }\r\n        this.contentEl = content;\r\n        // add menu's content classes\r\n        content.classList.add('menu-content');\r\n        this.typeChanged(this.type, undefined);\r\n        this.sideChanged();\r\n        // register this menu with the app's menu controller\r\n        menuController._register(this);\r\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\r\n            el: document,\r\n            gestureName: 'menu-swipe',\r\n            gesturePriority: 30,\r\n            threshold: 10,\r\n            blurOnStart: true,\r\n            canStart: ev => this.canStart(ev),\r\n            onWillStart: () => this.onWillStart(),\r\n            onStart: () => this.onStart(),\r\n            onMove: ev => this.onMove(ev),\r\n            onEnd: ev => this.onEnd(ev),\r\n        });\r\n        this.updateState();\r\n    }\r\n    async componentDidLoad() {\r\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\r\n        this.updateState();\r\n    }\r\n    disconnectedCallback() {\r\n        this.blocker.destroy();\r\n        menuController._unregister(this);\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n        }\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n        this.animation = undefined;\r\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\r\n    }\r\n    onSplitPaneChanged(ev) {\r\n        this.isPaneVisible = ev.detail.isPane(this.el);\r\n        this.updateState();\r\n    }\r\n    onBackdropClick(ev) {\r\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\r\n            const shouldClose = (ev.composedPath)\r\n                ? !ev.composedPath().includes(this.menuInnerEl)\r\n                : false;\r\n            if (shouldClose) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                this.close();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` is the menu is open.\r\n     */\r\n    isOpen() {\r\n        return Promise.resolve(this._isOpen);\r\n    }\r\n    /**\r\n     * Returns `true` is the menu is active.\r\n     *\r\n     * A menu is active when it can be opened or closed, meaning it's enabled\r\n     * and it's not part of a `ion-split-pane`.\r\n     */\r\n    isActive() {\r\n        return Promise.resolve(this._isActive());\r\n    }\r\n    /**\r\n     * Opens the menu. If the menu is already open or it can't be opened,\r\n     * it returns `false`.\r\n     */\r\n    open(animated = true) {\r\n        return this.setOpen(true, animated);\r\n    }\r\n    /**\r\n     * Closes the menu. If the menu is already closed or it can't be closed,\r\n     * it returns `false`.\r\n     */\r\n    close(animated = true) {\r\n        return this.setOpen(false, animated);\r\n    }\r\n    /**\r\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\r\n     * If the operation can't be completed successfully, it returns `false`.\r\n     */\r\n    toggle(animated = true) {\r\n        return this.setOpen(!this._isOpen, animated);\r\n    }\r\n    /**\r\n     * Opens or closes the button.\r\n     * If the operation can't be completed successfully, it returns `false`.\r\n     */\r\n    setOpen(shouldOpen, animated = true) {\r\n        return menuController._setOpen(this, shouldOpen, animated);\r\n    }\r\n    async _setOpen(shouldOpen, animated = true) {\r\n        // If the menu is disabled or it is currently being animated, let's do nothing\r\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\r\n            return false;\r\n        }\r\n        this.beforeAnimation(shouldOpen);\r\n        await this.loadAnimation();\r\n        await this.startAnimation(shouldOpen, animated);\r\n        this.afterAnimation(shouldOpen);\r\n        return true;\r\n    }\r\n    async loadAnimation() {\r\n        // Menu swipe animation takes the menu's inner width as parameter,\r\n        // If `offsetWidth` changes, we need to create a new animation.\r\n        const width = this.menuInnerEl.offsetWidth;\r\n        if (width === this.width && this.animation !== undefined) {\r\n            return;\r\n        }\r\n        this.width = width;\r\n        // Destroy existing animation\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n            this.animation = undefined;\r\n        }\r\n        // Create new animation\r\n        this.animation = await menuController._createAnimation(this.type, this);\r\n        if (!config.getBoolean('animated', true)) {\r\n            this.animation.duration(0);\r\n        }\r\n        this.animation.fill('both');\r\n    }\r\n    async startAnimation(shouldOpen, animated) {\r\n        const isReversed = !shouldOpen;\r\n        const mode = getIonMode(this);\r\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\r\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\r\n        const ani = this.animation\r\n            .direction((isReversed) ? 'reverse' : 'normal')\r\n            .easing((isReversed) ? easingReverse : easing)\r\n            .onFinish(() => {\r\n            if (ani.getDirection() === 'reverse') {\r\n                ani.direction('normal');\r\n            }\r\n        });\r\n        if (animated) {\r\n            await ani.play();\r\n        }\r\n        else {\r\n            ani.play({ sync: true });\r\n        }\r\n    }\r\n    _isActive() {\r\n        return !this.disabled && !this.isPaneVisible;\r\n    }\r\n    canSwipe() {\r\n        return this.swipeGesture && !this.isAnimating && this._isActive();\r\n    }\r\n    canStart(detail) {\r\n        // Do not allow swipe gesture if a modal is open\r\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\r\n        if (isModalPresented || !this.canSwipe()) {\r\n            return false;\r\n        }\r\n        if (this._isOpen) {\r\n            return true;\r\n            // TODO error\r\n        }\r\n        else if (menuController._getOpenSync()) {\r\n            return false;\r\n        }\r\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\r\n    }\r\n    onWillStart() {\r\n        this.beforeAnimation(!this._isOpen);\r\n        return this.loadAnimation();\r\n    }\r\n    onStart() {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        // the cloned animation should not use an easing curve during seek\r\n        this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\r\n    }\r\n    onMove(detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\r\n        const stepValue = delta / this.width;\r\n        this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\r\n    }\r\n    onEnd(detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        const isOpen = this._isOpen;\r\n        const isEndSide = this.isEndSide;\r\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\r\n        const width = this.width;\r\n        const stepValue = delta / width;\r\n        const velocity = detail.velocityX;\r\n        const z = width / 2.0;\r\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\r\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\r\n        const shouldComplete = isOpen\r\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\r\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\r\n        let shouldOpen = !isOpen && shouldComplete;\r\n        if (isOpen && !shouldComplete) {\r\n            shouldOpen = true;\r\n        }\r\n        this.lastOnEnd = detail.currentTime;\r\n        // Account for rounding errors in JS\r\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\r\n        /**\r\n         * TODO: stepValue can sometimes return a negative\r\n         * value, but you can't have a negative time value\r\n         * for the cubic bezier curve (at least with web animations)\r\n         * Not sure if the negative step value is an error or not\r\n         */\r\n        const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\r\n        /**\r\n         * Animation will be reversed here, so need to\r\n         * reverse the easing curve as well\r\n         *\r\n         * Additionally, we need to account for the time relative\r\n         * to the new easing curve, as `stepValue` is going to be given\r\n         * in terms of a linear curve.\r\n         */\r\n        newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\r\n        const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\r\n        this.animation\r\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\r\n            .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\r\n            .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\r\n    }\r\n    beforeAnimation(shouldOpen) {\r\n        assert(!this.isAnimating, '_before() should not be called while animating');\r\n        // this places the menu into the correct location before it animates in\r\n        // this css class doesn't actually kick off any animations\r\n        this.el.classList.add(SHOW_MENU);\r\n        if (this.backdropEl) {\r\n            this.backdropEl.classList.add(SHOW_BACKDROP);\r\n        }\r\n        this.blocker.block();\r\n        this.isAnimating = true;\r\n        if (shouldOpen) {\r\n            this.ionWillOpen.emit();\r\n        }\r\n        else {\r\n            this.ionWillClose.emit();\r\n        }\r\n    }\r\n    afterAnimation(isOpen) {\r\n        assert(this.isAnimating, '_before() should be called while animating');\r\n        // keep opening/closing the menu disabled for a touch more yet\r\n        // only add listeners/css if it's enabled and isOpen\r\n        // and only remove listeners/css if it's not open\r\n        // emit opened/closed events\r\n        this._isOpen = isOpen;\r\n        this.isAnimating = false;\r\n        if (!this._isOpen) {\r\n            this.blocker.unblock();\r\n        }\r\n        if (isOpen) {\r\n            // add css class\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\r\n            }\r\n            // emit open event\r\n            this.ionDidOpen.emit();\r\n        }\r\n        else {\r\n            // remove css classes\r\n            this.el.classList.remove(SHOW_MENU);\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\r\n            }\r\n            if (this.backdropEl) {\r\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\r\n            }\r\n            if (this.animation) {\r\n                this.animation.stop();\r\n            }\r\n            // emit close event\r\n            this.ionDidClose.emit();\r\n        }\r\n    }\r\n    updateState() {\r\n        const isActive = this._isActive();\r\n        if (this.gesture) {\r\n            this.gesture.enable(isActive && this.swipeGesture);\r\n        }\r\n        // Close menu immediately\r\n        if (!isActive && this._isOpen) {\r\n            // close if this menu is open, and should not be enabled\r\n            this.forceClosing();\r\n        }\r\n        if (!this.disabled) {\r\n            menuController._setActiveMenu(this);\r\n        }\r\n        assert(!this.isAnimating, 'can not be animating');\r\n    }\r\n    forceClosing() {\r\n        assert(this._isOpen, 'menu cannot be closed');\r\n        this.isAnimating = true;\r\n        const ani = this.animation.direction('reverse');\r\n        ani.play({ sync: true });\r\n        this.afterAnimation(false);\r\n    }\r\n    render() {\r\n        const { isEndSide, type, disabled, isPaneVisible } = this;\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { role: \"navigation\", class: {\r\n                [mode]: true,\r\n                [`menu-type-${type}`]: true,\r\n                'menu-enabled': !disabled,\r\n                'menu-side-end': isEndSide,\r\n                'menu-side-start': !isEndSide,\r\n                'menu-pane-visible': isPaneVisible\r\n            } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"type\": [\"typeChanged\"],\r\n        \"disabled\": [\"disabledChanged\"],\r\n        \"side\": [\"sideChanged\"],\r\n        \"swipeGesture\": [\"swipeGestureChanged\"]\r\n    }; }\r\n};\r\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\r\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\r\n};\r\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\r\n    if (isEndSide) {\r\n        return posX >= win.innerWidth - maxEdgeStart;\r\n    }\r\n    else {\r\n        return posX <= maxEdgeStart;\r\n    }\r\n};\r\nconst SHOW_MENU = 'show-menu';\r\nconst SHOW_BACKDROP = 'show-backdrop';\r\nconst MENU_CONTENT_OPEN = 'menu-content-open';\r\nMenu.style = {\r\n    /*STENCIL:MODE:ios*/ ios: menuIosCss,\r\n    /*STENCIL:MODE:md*/ md: menuMdCss\r\n};\r\n\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuEl = await menuController.get(menu);\r\n    return !!(menuEl && await menuEl.isActive());\r\n};\r\n\r\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\r\n\r\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\r\n\r\nconst MenuButton = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the menu button.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Automatically hides the menu button when the corresponding menu is not active\r\n         */\r\n        this.autoHide = true;\r\n        /**\r\n         * The type of the button.\r\n         */\r\n        this.type = 'button';\r\n        this.onClick = async () => {\r\n            return menuController.toggle(this.menu);\r\n        };\r\n    }\r\n    componentDidLoad() {\r\n        this.visibilityChanged();\r\n    }\r\n    async visibilityChanged() {\r\n        this.visible = await updateVisibility(this.menu);\r\n    }\r\n    render() {\r\n        const { color, disabled } = this;\r\n        const mode = getIonMode(this);\r\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\r\n        const hidden = this.autoHide && !this.visible;\r\n        const attrs = {\r\n            type: this.type\r\n        };\r\n        return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: Object.assign(Object.assign({ [mode]: true }, createColorClasses(color)), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'ion-activatable': true, 'ion-focusable': true }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\" }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { icon: menuIcon, mode: mode, lazy: false }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\nMenuButton.style = {\r\n    /*STENCIL:MODE:ios*/ ios: menuButtonIosCss,\r\n    /*STENCIL:MODE:md*/ md: menuButtonMdCss\r\n};\r\n\r\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\r\n\r\nconst MenuToggle = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * Automatically hides the content when the corresponding menu is not active.\r\n         *\r\n         * By default, it's `true`. Change it to `false` in order to\r\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\r\n         */\r\n        this.autoHide = true;\r\n        this.onClick = () => {\r\n            return menuController.toggle(this.menu);\r\n        };\r\n    }\r\n    connectedCallback() {\r\n        this.visibilityChanged();\r\n    }\r\n    async visibilityChanged() {\r\n        this.visible = await updateVisibility(this.menu);\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const hidden = this.autoHide && !this.visible;\r\n        return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\r\n                [mode]: true,\r\n                'menu-toggle-hidden': hidden,\r\n            } }, h(\"slot\", null)));\r\n    }\r\n};\r\nMenuToggle.style = menuToggleCss;\r\n\r\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\r\n"],"sourceRoot":"webpack:///","file":"37-es5.js"}