{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-26ec602c.js';\r\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\r\nimport { f as findItemLabel } from './helpers-d8b49b57.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\r\n\r\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\r\n\r\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\r\n\r\nconst Radio = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inputId = `ion-rb-${radioButtonIds++}`;\r\n        this.radioGroup = null;\r\n        /**\r\n         * If `true`, the radio is selected.\r\n         */\r\n        this.checked = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot interact with the radio.\r\n         */\r\n        this.disabled = false;\r\n        this.updateState = () => {\r\n            if (this.radioGroup) {\r\n                this.checked = this.radioGroup.value === this.value;\r\n            }\r\n        };\r\n        this.onFocus = () => {\r\n            this.ionFocus.emit();\r\n        };\r\n        this.onBlur = () => {\r\n            this.ionBlur.emit();\r\n        };\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    }\r\n    connectedCallback() {\r\n        if (this.value === undefined) {\r\n            this.value = this.inputId;\r\n        }\r\n        const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\r\n        if (radioGroup) {\r\n            this.updateState();\r\n            radioGroup.addEventListener('ionChange', this.updateState);\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        const radioGroup = this.radioGroup;\r\n        if (radioGroup) {\r\n            radioGroup.removeEventListener('ionChange', this.updateState);\r\n            this.radioGroup = null;\r\n        }\r\n    }\r\n    componentWillLoad() {\r\n        this.emitStyle();\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'radio-checked': this.checked,\r\n            'interactive-disabled': this.disabled,\r\n        });\r\n    }\r\n    render() {\r\n        const { inputId, disabled, checked, color, el } = this;\r\n        const mode = getIonMode(this);\r\n        const labelId = inputId + '-lbl';\r\n        const label = findItemLabel(el);\r\n        if (label) {\r\n            label.id = labelId;\r\n        }\r\n        return (h(Host, { role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'interactive': true, 'radio-checked': checked, 'radio-disabled': disabled }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"color\": [\"emitStyle\"],\r\n        \"checked\": [\"emitStyle\"],\r\n        \"disabled\": [\"emitStyle\"]\r\n    }; }\r\n};\r\nlet radioButtonIds = 0;\r\nRadio.style = {\r\n    /*STENCIL:MODE:ios*/ ios: radioIosCss,\r\n    /*STENCIL:MODE:md*/ md: radioMdCss\r\n};\r\n\r\nconst RadioGroup = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inputId = `ion-rg-${radioGroupIds++}`;\r\n        this.labelId = `${this.inputId}-lbl`;\r\n        /**\r\n         * If `true`, the radios can be deselected.\r\n         */\r\n        this.allowEmptySelection = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        this.onClick = (ev) => {\r\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\r\n            if (selectedRadio) {\r\n                const currentValue = this.value;\r\n                const newValue = selectedRadio.value;\r\n                if (newValue !== currentValue) {\r\n                    this.value = newValue;\r\n                }\r\n                else if (this.allowEmptySelection) {\r\n                    this.value = undefined;\r\n                }\r\n            }\r\n        };\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    }\r\n    valueChanged(value) {\r\n        this.ionChange.emit({ value });\r\n    }\r\n    async connectedCallback() {\r\n        // Get the list header if it exists and set the id\r\n        // this is used to set aria-labelledby\r\n        const el = this.el;\r\n        const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\r\n        if (header) {\r\n            const label = header.querySelector('ion-label');\r\n            if (label) {\r\n                this.labelId = label.id = this.name + '-lbl';\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onClick: this.onClick, class: getIonMode(this) }));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nlet radioGroupIds = 0;\r\n\r\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\r\n"],"sourceRoot":"webpack:///","file":"45-es5.js"}