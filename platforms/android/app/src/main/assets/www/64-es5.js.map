{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, h, H as Host, e as getElement } from './index-26ec602c.js';\r\nimport { b as getIonMode } from './ionic-global-1bf1fa84.js';\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n    'never': ''\r\n};\r\nconst SplitPane = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the split pane will be hidden.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * When the split-pane should be shown.\r\n         * Can be a CSS media query expression, or a shortcut expression.\r\n         * Can also be a boolean expression.\r\n         */\r\n        this.when = QUERY['lg'];\r\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    }\r\n    visibleChanged(visible) {\r\n        const detail = { visible, isPane: this.isPane.bind(this) };\r\n        this.ionSplitPaneVisible.emit(detail);\r\n    }\r\n    connectedCallback() {\r\n        this.styleChildren();\r\n        this.updateState();\r\n    }\r\n    disconnectedCallback() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    }\r\n    updateState() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        // Check if the split-pane is disabled\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // When query is a boolean\r\n        const query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        // When query is a string, let's find first if it is a shortcut\r\n        const mediaQuery = QUERY[query] || query;\r\n        // Media query is empty or null, we hide it\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        if (window.matchMedia) {\r\n            // Listen on media query\r\n            const callback = (q) => {\r\n                this.visible = q.matches;\r\n            };\r\n            const mediaList = window.matchMedia(mediaQuery);\r\n            mediaList.addListener(callback);\r\n            this.rmL = () => mediaList.removeListener(callback);\r\n            this.visible = mediaList.matches;\r\n        }\r\n    }\r\n    isPane(element) {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        return element.parentElement === this.el\r\n            && element.classList.contains(SPLIT_PANE_SIDE);\r\n    }\r\n    styleChildren() {\r\n        const contentId = this.contentId;\r\n        const children = this.el.children;\r\n        const nu = this.el.childElementCount;\r\n        let foundMain = false;\r\n        for (let i = 0; i < nu; i++) {\r\n            const child = children[i];\r\n            const isMain = contentId !== undefined && child.id === contentId;\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    console.warn('split pane cannot have more than one main node');\r\n                    return;\r\n                }\r\n                foundMain = true;\r\n            }\r\n            setPaneClass(child, isMain);\r\n        }\r\n        if (!foundMain) {\r\n            console.warn('split pane does not have a specified main node');\r\n        }\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { class: {\r\n                [mode]: true,\r\n                // Used internally for styling\r\n                [`split-pane-${mode}`]: true,\r\n                'split-pane-visible': this.visible\r\n            } }, h(\"slot\", null)));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"visible\": [\"visibleChanged\"],\r\n        \"disabled\": [\"updateState\"],\r\n        \"when\": [\"updateState\"]\r\n    }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n    let toAdd;\r\n    let toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    const classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n    /*STENCIL:MODE:ios*/ ios: splitPaneIosCss,\r\n    /*STENCIL:MODE:md*/ md: splitPaneMdCss\r\n};\r\n\r\nexport { SplitPane as ion_split_pane };\r\n"],"sourceRoot":"webpack:///","file":"64-es5.js"}