{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-segment_2-md.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6H;AACnD;AAChB;AACsB;;AAEhF,6BAA6B,4BAA4B,kCAAkC,mCAAmC,oBAAoB,aAAa,kBAAkB,uBAAuB,oBAAoB,qBAAqB,uBAAuB,WAAW,6BAA6B,4CAA4C,kBAAkB,cAAc,2BAA2B,oBAAoB,sBAAsB,WAAW,gBAAgB,8CAA8C,aAAa,MAAM,6DAA6D,kBAAkB,gBAAgB,UAAU,kBAAkB,kDAAkD,mBAAmB,iBAAiB,kBAAkB,aAAa,gBAAgB,WAAW,+FAA+F,mBAAmB,kBAAkB,mBAAmB,0BAA0B,yBAAyB,wBAAwB,wBAAwB,mCAAmC,oEAAoE,yCAAyC,qDAAqD;;AAEvuC,4BAA4B,4BAA4B,kCAAkC,mCAAmC,oBAAoB,aAAa,kBAAkB,uBAAuB,oBAAoB,qBAAqB,uBAAuB,WAAW,6BAA6B,4CAA4C,kBAAkB,cAAc,2BAA2B,oBAAoB,sBAAsB,WAAW,gBAAgB,8CAA8C,aAAa,MAAM,yBAAyB,yDAAyD,eAAe;;AAE7nB;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4DAAW;AACpC,yBAAyB,4DAAW;AACpC,wBAAwB,4DAAW;AACnC;AACA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yJAA6B;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAM,iCAAiC,2DAAM;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO,GAAG,8DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU,mBAAmB,WAAW;AACjF,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,qBAAqB,mEAAU;AAC/B,gBAAgB,4DAAC,CAAC,oDAAI,GAAG,6DAA6D,EAAE,4DAAkB,gBAAgB,6BAA6B,4DAAW,8CAA8C,4DAAW,gJAAgJ,GAAG,EAAE,4DAAC;AACjX;AACA,cAAc,QAAQ,4DAAU,OAAO;AACvC,2BAA2B;AAC3B;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA,mCAAmC,gBAAgB,2BAA2B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","file":"58-es2015.js","sourcesContent":["import { r as registerInstance, d as createEvent, w as writeTask, h, H as Host, e as getElement } from './index-26ec602c.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-1bf1fa84.js';\r\nimport { p as pointerCoord } from './helpers-d8b49b57.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-c2dc54d9.js';\r\n\r\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\r\n\r\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\r\n\r\nconst Segment = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.didInit = false;\r\n        this.activated = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the segment.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\r\n         * In addition, this will disable the gesture to drag the indicator between the buttons\r\n         * in order to swipe to see hidden buttons.\r\n         */\r\n        this.scrollable = false;\r\n        this.onClick = (ev) => {\r\n            const current = ev.target;\r\n            const previous = this.checked;\r\n            this.value = current.value;\r\n            if (previous && this.scrollable) {\r\n                this.checkButton(previous, current);\r\n            }\r\n            this.checked = current;\r\n        };\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\r\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    }\r\n    valueChanged(value, oldValue) {\r\n        this.ionSelect.emit({ value });\r\n        if (oldValue !== '' || this.didInit) {\r\n            if (!this.activated) {\r\n                this.ionChange.emit({ value });\r\n            }\r\n            else {\r\n                this.valueAfterGesture = value;\r\n            }\r\n        }\r\n    }\r\n    disabledChanged() {\r\n        this.gestureChanged();\r\n        const buttons = this.getButtons();\r\n        for (const button of buttons) {\r\n            button.disabled = this.disabled;\r\n        }\r\n    }\r\n    gestureChanged() {\r\n        if (this.gesture && !this.scrollable) {\r\n            this.gesture.enable(!this.disabled);\r\n        }\r\n    }\r\n    connectedCallback() {\r\n        this.emitStyle();\r\n    }\r\n    componentWillLoad() {\r\n        this.emitStyle();\r\n    }\r\n    async componentDidLoad() {\r\n        this.setCheckedClasses();\r\n        this.gesture = (await import('./index-6f647ec8.js')).createGesture({\r\n            el: this.el,\r\n            gestureName: 'segment',\r\n            gesturePriority: 100,\r\n            threshold: 0,\r\n            passive: false,\r\n            onStart: ev => this.onStart(ev),\r\n            onMove: ev => this.onMove(ev),\r\n            onEnd: ev => this.onEnd(ev),\r\n        });\r\n        this.gesture.enable(!this.scrollable);\r\n        this.gestureChanged();\r\n        if (this.disabled) {\r\n            this.disabledChanged();\r\n        }\r\n        this.didInit = true;\r\n    }\r\n    onStart(detail) {\r\n        this.activate(detail);\r\n    }\r\n    onMove(detail) {\r\n        this.setNextIndex(detail);\r\n    }\r\n    onEnd(detail) {\r\n        this.setActivated(false);\r\n        const checkedValidButton = this.setNextIndex(detail, true);\r\n        detail.event.stopImmediatePropagation();\r\n        if (checkedValidButton) {\r\n            this.addRipple(detail);\r\n        }\r\n        const value = this.valueAfterGesture;\r\n        if (value !== undefined) {\r\n            this.ionChange.emit({ value });\r\n            this.valueAfterGesture = undefined;\r\n        }\r\n    }\r\n    getButtons() {\r\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\r\n    }\r\n    /**\r\n     * The gesture blocks the segment button ripple. This\r\n     * function adds the ripple based on the checked segment\r\n     * and where the cursor ended.\r\n     */\r\n    addRipple(detail) {\r\n        const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n        if (!useRippleEffect) {\r\n            return;\r\n        }\r\n        const buttons = this.getButtons();\r\n        const checked = buttons.find(button => button.value === this.value);\r\n        const root = checked.shadowRoot || checked;\r\n        const ripple = root.querySelector('ion-ripple-effect');\r\n        if (!ripple) {\r\n            return;\r\n        }\r\n        const { x, y } = pointerCoord(detail.event);\r\n        ripple.addRipple(x, y).then(remove => remove());\r\n    }\r\n    /*\r\n     * Activate both the segment and the buttons\r\n     * due to a bug with ::slotted in Safari\r\n     */\r\n    setActivated(activated) {\r\n        const buttons = this.getButtons();\r\n        buttons.forEach(button => {\r\n            if (activated) {\r\n                button.classList.add('segment-button-activated');\r\n            }\r\n            else {\r\n                button.classList.remove('segment-button-activated');\r\n            }\r\n        });\r\n        this.activated = activated;\r\n    }\r\n    activate(detail) {\r\n        const clicked = detail.event.target;\r\n        const buttons = this.getButtons();\r\n        const checked = buttons.find(button => button.value === this.value);\r\n        // Make sure we are only checking for activation on a segment button\r\n        // since disabled buttons will get the click on the segment\r\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\r\n            return;\r\n        }\r\n        // If there are no checked buttons, set the current button to checked\r\n        if (!checked) {\r\n            this.value = clicked.value;\r\n        }\r\n        // If the gesture began on the clicked button with the indicator\r\n        // then we should activate the indicator\r\n        if (this.value === clicked.value) {\r\n            this.setActivated(true);\r\n        }\r\n    }\r\n    getIndicator(button) {\r\n        const root = button.shadowRoot || button;\r\n        return root.querySelector('.segment-button-indicator');\r\n    }\r\n    checkButton(previous, current) {\r\n        const previousIndicator = this.getIndicator(previous);\r\n        const currentIndicator = this.getIndicator(current);\r\n        if (previousIndicator === null || currentIndicator === null) {\r\n            return;\r\n        }\r\n        const previousClientRect = previousIndicator.getBoundingClientRect();\r\n        const currentClientRect = currentIndicator.getBoundingClientRect();\r\n        const widthDelta = previousClientRect.width / currentClientRect.width;\r\n        const xPosition = previousClientRect.left - currentClientRect.left;\r\n        // Scale the indicator width to match the previous indicator width\r\n        // and translate it on top of the previous indicator\r\n        const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\r\n        writeTask(() => {\r\n            // Remove the transition before positioning on top of the previous indicator\r\n            currentIndicator.classList.remove('segment-button-indicator-animated');\r\n            currentIndicator.style.setProperty('transform', transform);\r\n            // Force a repaint to ensure the transform happens\r\n            currentIndicator.getBoundingClientRect();\r\n            // Add the transition to move the indicator into place\r\n            currentIndicator.classList.add('segment-button-indicator-animated');\r\n            // Remove the transform to slide the indicator back to the button clicked\r\n            currentIndicator.style.setProperty('transform', '');\r\n        });\r\n        this.value = current.value;\r\n        this.setCheckedClasses();\r\n    }\r\n    setCheckedClasses() {\r\n        const buttons = this.getButtons();\r\n        const index = buttons.findIndex(button => button.value === this.value);\r\n        const next = index + 1;\r\n        // Keep track of the currently checked button\r\n        this.checked = buttons.find(button => button.value === this.value);\r\n        for (const button of buttons) {\r\n            button.classList.remove('segment-button-after-checked');\r\n        }\r\n        if (next < buttons.length) {\r\n            buttons[next].classList.add('segment-button-after-checked');\r\n        }\r\n    }\r\n    setNextIndex(detail, isEnd = false) {\r\n        const isRTL = document.dir === 'rtl';\r\n        const activated = this.activated;\r\n        const buttons = this.getButtons();\r\n        const index = buttons.findIndex(button => button.value === this.value);\r\n        const previous = buttons[index];\r\n        let current;\r\n        let nextIndex;\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        // Get the element that the touch event started on in case\r\n        // it was the checked button, then we will move the indicator\r\n        const rect = previous.getBoundingClientRect();\r\n        const left = rect.left;\r\n        const width = rect.width;\r\n        // Get the element that the gesture is on top of based on the currentX of the\r\n        // gesture event and the Y coordinate of the starting element, since the gesture\r\n        // can move up and down off of the segment\r\n        const currentX = detail.currentX;\r\n        const previousY = rect.top + (rect.height / 2);\r\n        const nextEl = document.elementFromPoint(currentX, previousY);\r\n        const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\r\n        const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\r\n        // If the indicator is currently activated then we have started the gesture\r\n        // on top of the checked button so we need to slide the indicator\r\n        // by checking the button next to it as we move\r\n        if (activated && !isEnd) {\r\n            // Decrease index, move left in LTR & right in RTL\r\n            if (decreaseIndex) {\r\n                const newIndex = index - 1;\r\n                if (newIndex >= 0) {\r\n                    nextIndex = newIndex;\r\n                }\r\n                // Increase index, moves right in LTR & left in RTL\r\n            }\r\n            else if (increaseIndex) {\r\n                if (activated && !isEnd) {\r\n                    const newIndex = index + 1;\r\n                    if (newIndex < buttons.length) {\r\n                        nextIndex = newIndex;\r\n                    }\r\n                }\r\n            }\r\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\r\n                current = buttons[nextIndex];\r\n            }\r\n        }\r\n        // If the indicator is not activated then we will just set the indicator\r\n        // to the element where the gesture ended\r\n        if (!activated && isEnd) {\r\n            current = nextEl;\r\n        }\r\n        /* tslint:disable-next-line */\r\n        if (current != null) {\r\n            /**\r\n             * If current element is ion-segment then that means\r\n             * user tried to select a disabled ion-segment-button,\r\n             * and we should not update the ripple.\r\n             */\r\n            if (current.tagName === 'ION-SEGMENT') {\r\n                return false;\r\n            }\r\n            if (previous !== current) {\r\n                this.checkButton(previous, current);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    emitStyle() {\r\n        this.ionStyle.emit({\r\n            'segment': true\r\n        });\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), { [mode]: true, 'in-toolbar': hostContext('ion-toolbar', this.el), 'in-toolbar-color': hostContext('ion-toolbar[color]', this.el), 'segment-activated': this.activated, 'segment-disabled': this.disabled, 'segment-scrollable': this.scrollable }) }, h(\"slot\", null)));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"value\": [\"valueChanged\"],\r\n        \"disabled\": [\"disabledChanged\"]\r\n    }; }\r\n};\r\nSegment.style = {\r\n    /*STENCIL:MODE:ios*/ ios: segmentIosCss,\r\n    /*STENCIL:MODE:md*/ md: segmentMdCss\r\n};\r\n\r\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\r\n\r\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}.button-native{min-width:90px}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\r\n\r\nlet ids = 0;\r\nconst SegmentButton = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.segmentEl = null;\r\n        this.checked = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the segment button.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Set the layout of the text and icon in the segment.\r\n         */\r\n        this.layout = 'icon-top';\r\n        /**\r\n         * The type of the button.\r\n         */\r\n        this.type = 'button';\r\n        /**\r\n         * The value of the segment button.\r\n         */\r\n        this.value = 'ion-sb-' + (ids++);\r\n        this.updateState = () => {\r\n            if (this.segmentEl) {\r\n                this.checked = this.segmentEl.value === this.value;\r\n            }\r\n        };\r\n    }\r\n    connectedCallback() {\r\n        const segmentEl = this.segmentEl = this.el.closest('ion-segment');\r\n        if (segmentEl) {\r\n            this.updateState();\r\n            segmentEl.addEventListener('ionSelect', this.updateState);\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        const segmentEl = this.segmentEl;\r\n        if (segmentEl) {\r\n            segmentEl.removeEventListener('ionSelect', this.updateState);\r\n            this.segmentEl = null;\r\n        }\r\n    }\r\n    get hasLabel() {\r\n        return !!this.el.querySelector('ion-label');\r\n    }\r\n    get hasIcon() {\r\n        return !!this.el.querySelector('ion-icon');\r\n    }\r\n    render() {\r\n        const { checked, type, disabled, hasIcon, hasLabel, layout } = this;\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: {\r\n                [mode]: true,\r\n                'in-toolbar': hostContext('ion-toolbar', this.el),\r\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n                'in-segment': hostContext('ion-segment', this.el),\r\n                'in-segment-color': hostContext('ion-segment[color]', this.el),\r\n                'segment-button-has-label': hasLabel,\r\n                'segment-button-has-icon': hasIcon,\r\n                'segment-button-has-label-only': hasLabel && !hasIcon,\r\n                'segment-button-has-icon-only': hasIcon && !hasLabel,\r\n                'segment-button-disabled': disabled,\r\n                'segment-button-checked': checked,\r\n                [`segment-button-layout-${layout}`]: true,\r\n                'ion-activatable': true,\r\n                'ion-activatable-instant': true,\r\n                'ion-focusable': true,\r\n            } }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : null, class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\r\n                'segment-button-indicator': true,\r\n                'segment-button-indicator-animated': true\r\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\nSegmentButton.style = {\r\n    /*STENCIL:MODE:ios*/ ios: segmentButtonIosCss,\r\n    /*STENCIL:MODE:md*/ md: segmentButtonMdCss\r\n};\r\n\r\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\r\n"],"sourceRoot":"webpack:///"}